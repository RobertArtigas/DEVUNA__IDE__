#! ================================================================================================
#!                           DEVUNA - Application Builder Class Templates
#! ================================================================================================
#! Author:  Randy Rogers (KCR) <rrogers@devuna.com>
#! Notice:  Copyright (C) 2017, Devuna
#!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
#! ================================================================================================
#!    This file is part of Devuna-Common (https://github.com/Devuna/Devuna-Common)
#!
#!    Devuna-Common is free software: you can redistribute it and/or modify
#!    it under the terms of the MIT License as published by
#!    the Open Source Initiative.
#!
#!    Devuna-Common is distributed in the hope that it will be useful,
#!    but WITHOUT ANY WARRANTY; without even the implied warranty of
#!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#!    MIT License for more details.
#!
#!    You should have received a copy of the MIT License
#!    along with Devuna-Common.  If not, see <https://opensource.org/licenses/MIT>.
#! ================================================================================================
#!
#PROCEDURE(Browse,'Browse Fields in a List Box'),WINDOW,REPORT,HLP('~TPLProcBrowse'),PARENT(Window(ABC))
#DEFAULT
NAME kcr_DefaultABCBrowse
CATEGORY 'Browse'
[COMMON]
DESCRIPTION 'Devuna Browse with Update and Select'
FROM ABC Window
[PROMPTS]
%WindowOperationMode STRING  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
[ADDITION]
NAME ABC BrowseBox
[INSTANCE]
INSTANCE 1
PROCPROP
[PROMPTS]
%LocatorType STRING  ('Step')
%RecordFilter @S180  ('')
%RangeField COMPONENT  ()
%RangeLimitType STRING  ('Current Value')
%RangeLimit @s40  ('')
%RangeLow @S50  ('')
%RangeHigh @S50  ('')
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

[ADDITION]
NAME ABC BrowseSelectButton
[INSTANCE]
INSTANCE 3
PARENT 1
[PROMPTS]
%HideIfDisabled LONG  (1)
[ADDITION]
NAME ABC BrowseUpdateButtons
[INSTANCE]
INSTANCE 2
PARENT 1
PROCPROP
[PROMPTS]
%UpdateProcedure PROCEDURE  ()
[ADDITION]
NAME ABC CloseButton
[INSTANCE]
INSTANCE 4
[WINDOW]
Window WINDOW('Browse Records'),AT(,,360,238),FONT('Segoe UI Semilight',11,,FONT:regular,CHARSET:ANSI), |
         CENTER,SYSTEM,GRAY,RESIZE,MDI
       PANEL,AT(4,4,352,212),USE(?Panel1)
       LIST,AT(10,10,340,184),USE(?List),IMM,VSCROLL,MSG('Browsing Records'),FROM(Queue:Browse),#SEQ(1), |
           #ORIG(BrowseBox)
       BUTTON('&New'),AT(208,198,45,14),USE(?Insert),LEFT,ICON('new.ico'),#SEQ(2),#ORIG(?Insert),#LINK(?Change)
       BUTTON('&Edit'),AT(257,198,45,14),USE(?Change),LEFT,ICON('edit.ico'),DEFAULT,#SEQ(2),#ORIG(?Change), |
           #LINK(?Delete)
       BUTTON('&Delete'),AT(306,198,45,14),USE(?Delete),LEFT,ICON('Delete.ico'),#SEQ(2),#ORIG(?Delete), |
           #LINK(?Insert)
       BUTTON('&Select'),AT(262,220,45,14),USE(?Select),LEFT,ICON('pick.ico'),#SEQ(3),#ORIG(?Select)
       BUTTON('Cl&ose'),AT(311,220,45,14),USE(?Close),LEFT,ICON('close.ico'),#SEQ(4),#ORIG(?Close)
     END

#ENDDEFAULT
#!
#CONTROL(BrowseBox,'File-Browsing List Box'),PRIMARY(%TableSchematicsDescription&' - File-Browsing List Box',OPTKEY),DESCRIPTION('Browse on ' & %Primary),MULTI,WINDOW,HLP('~TPLControlBrowseBox'),WRAP(List)
#PREPARE
  #CALL(%ReadABCFiles)
  #CALL(%SetClassDefaults, 'Default', 'BRW'&%ActiveTemplateInstance, %BrowserType)
  #CALL(%SetBothTypes,0)
  #FOR(%SortOrder)
    #CALL(%SetBothTypes,%SortOrder)
  #ENDFOR
  #IF(%isSQL())
    #CALL(%SQLBuildViewFields)
  #ENDIF
#ENDPREPARE
  CONTROLS
    LIST,AT(,,150,100),USE(?List),IMM,FROM(Queue:Browse),MSG('Browsing Records')
  END
#!
#BUTTON('&Browse Box Behavior'),AT(10,,180)
  #INSERT(%OOPPrompts)
  #BOXED(''),AT(0,0,0,0),WHERE(%False),HIDE
    #PROMPT('',@S255),%SQLViewFields,MULTI('')
  #ENDBOXED
  #SHEET,ADJUST
    #TAB('&Default Behavior'),HLP('~TPLControlBrowseBox_Default_Behavior')
      #DISPLAY
      #BOXED('Table Schematics Description'),SECTION
         #PROMPT('',@S255),%TableSchematicsDescription,DEFAULT(''),AT(10,3,173)
      #ENDBOXED
      #PROMPT('&Quick-Scan Records (buffered reads)',CHECK),%EnableQuickScan,DEFAULT(0),AT(10,,180)
      #PROMPT('&Loading Method',DROP('Page|File')),%LoadMethod,DEFAULT('Page')
      #PROMPT('Accept browse control from ToolBar',CHECK),%AcceptToolBarControl,DEFAULT(1),AT(10,,180)
      #BOXED,SECTION
      #PROMPT('LIST Line Height:',@S255),%InterLine,AT(,,75),DEFAULT(0)
      #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%InterLine)),AT(174,2,10,10)
      #ENDBUTTON
      #ENDBOXED
      #ENABLE(%PrimaryKey)
        #BUTTON('&Locator Behavior'),AT(,,175),HLP('~TPLLocatorBehavior')
          #PROMPT('&Locator:',DROP('None|Step|Entry|Incremental|Filtered')),%LocatorType,DEFAULT('Step'),WHENACCEPTED(%SetLocatorClass(0,%LocatorType))
          #BOXED('Locator Field'),WHERE(%LocatorType = 'Entry' OR %LocatorType = 'Incremental' OR %LocatorType = 'Filtered')
            #PROMPT('&Override default locator control',CHECK),%OverrideDefaultLocator,AT(10,,180)
            #ENABLE(%OverrideDefaultLocator)
              #PROMPT('&New Locator Control:',CONTROL),%OverrideLocator,REQ
            #ENDENABLE
          #ENDBOXED
          #BOXED('Find method'),WHERE(%LocatorType = 'Filtered')
            #PROMPT('Find Anywhere',CHECK),%FindDefaultAnywhere
          #ENDBOXED
          #BUTTON('Locator &Class'),WHERE(%LocatorType='Step' OR %LocatorType='Entry' OR %LocatorType='Incremental' OR %LocatorType='Filtered'),AT(,,180)
            #WITH(%ClassItem,'Locator0')
              #INSERT(%ClassPrompts)
            #END
          #ENDBUTTON
        #ENDBUTTON
      #ENDENABLE
      #BOXED,SECTION
      #PROMPT('&Record Filter:',@S255),%RecordFilter,AT(,,75)
      #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%RecordFilter)),AT(174,2,10,10)
      #ENDBUTTON
      #ENDBOXED
      #ENABLE(%PrimaryKey)
        #INSERT(%RangeLimitOptions)
      #ENDENABLE
      #BUTTON('Additional Sort Fields'),AT(,,175),HLP('~TPLAdditionalSortFields')
         #PROMPT('Sort Type:',DROP('Manual|Assisted')),%AdditionalSortType,DEFAULT('Manual')
         #DISPLAY
         #BOXED,SECTION
           #BOXED('Sort Order'),WHERE(%AdditionalSortType = 'Manual'),AT(,0)
             #BOXED,SECTION
             #PROMPT('&Additional Sort Fields',@S255),%AddSortFields,AT(,,78)
             #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%AddSortFields)),AT(180,2,10,10)
             #ENDBUTTON
             #ENDBOXED
             #DISPLAY
             #DISPLAY('This can be an string or a variable.  Example:')
             #DISPLAY
             #DISPLAY('String:           +Cli:FirstName,+Cli:SecondName')
             #DISPLAY('Variable:      !Loc:Order')
           #ENDBOXED
           #BOXED('Sort Order'),WHERE(%AdditionalSortType = 'Assisted'),AT(,0)
             #BUTTON('Additional Sort Fields'),MULTI(%AddSortFieldsAssisted,%AddSortFieldAssistedOrder & %AddSortFieldAssisted),INLINE,HLP('~TPLAdditionalSortFields')
               #PROMPT('Field:',FIELD),%AddSortFieldAssisted,REQ
               #PROMPT('Order:',DROP('Ascending[+]|Descending[-]')),%AddSortFieldAssistedOrder,DEFAULT('+')
             #ENDBUTTON
           #ENDBOXED
         #ENDBOXED
      #ENDBUTTON
      #BUTTON('&Reset Fields'),MULTI(%ResetFields,%ResetField),AT(,,86),HLP('~TPLControlBrowseBox_Reset_Fields')
        #PROMPT('&Reset Field:',FIELD),%ResetField
      #ENDBUTTON
      #ENABLE(%PrimaryKey AND %LoadMethod = 'Page')
        #BUTTON('&Scroll Bar Behavior'),AT(,,86),HLP('~TPLControlBrowseBox_Scroll_Bar_Behavior')
          #PROMPT('&Scroll Bar Type:',DROP('Fixed Thumb|Movable Thumb')),%ScrollBehavior,DEFAULT('Fixed Thumb'),WHENACCEPTED(%SetStepClass(0))
          #ENABLE(%ScrollBehavior='Movable Thumb')
            #PROMPT('&Key Distribution:',DROP('Alpha|Last Names|Custom|Runtime')),%ScrollKeyDistribution,DEFAULT('Alpha')
            #ENABLE(%ScrollKeyDistribution='Custom')
              #BUTTON('&Custom Key Distribution'),MULTI(%CustomKeyDistribution,%KeyDistributionValue),AT(10,,180),HLP('~TPLControlBrowseBox_Scroll_Bar_Behavior')
                #PROMPT('&Key Value:',@S10),%KeyDistributionValue,REQ
              #ENDBUTTON
            #ENDENABLE
            #ENABLE(%ScrollKeyDistribution='Runtime')
              #BUTTON('Runtime Distribution Parameters'),AT(10,,180),HLP('~TPLControlBrowseBox_Scroll_Bar_Behavior')
                #DISPLAY('If the free key element is a string (or')
                #DISPLAY('CSTRING, PSTRING, etc.), you may customize')
                #DISPLAY('the characters that are used to compute the')
                #DISPLAY('scroll bar''s stop points.  If the free key')
                #DISPLAY('element is numeric, these check will not be used.')
                #DISPLAY('')
                #BOXED('Please check the appropriate boxes.')
                  #PROMPT('Use alpha characters',CHECK),%ScrollAlpha,DEFAULT(1),AT(10,,180)
                  #PROMPT('Use numeric characters',CHECK),%ScrollNumeric,AT(10,,180)
                  #PROMPT('Use other keyboard characters',CHECK),%ScrollAlt,AT(10,,180)
                #ENDBOXED
              #ENDBUTTON
            #ENDENABLE
            #BUTTON('Step &Class'),AT(,,180)
              #WITH(%ClassItem,'Step0')
                #INSERT(%ClassPrompts)
              #END
            #ENDBUTTON
          #ENDENABLE
        #ENDBUTTON
      #ENDENABLE
    #ENDTAB
    #TAB('&Conditional Behavior'),HLP('~TPLControlBrowseBox_Conditional_Behavior')
      #BUTTON('Conditional Browse Behavior'),MULTI(%SortOrder,%SortCondition & ' - ' & %SortKey),AT(,35),INLINE,HLP('~TPLControlBrowseBox_Conditional_Behavior')
        #BOXED,SECTION
        #PROMPT('Condition:',@S255),%SortCondition,REQ,AT(,,78)
        #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%SortCondition)),AT(180,2,10,10)
        #ENDBUTTON
        #ENDBOXED
        #PROMPT('Key to Use:',KEY(%Primary)),%SortKey,WHENACCEPTED(%SetBothTypes(%SortOrder))
        #ENABLE(%SortKey)
          #BUTTON('&Locator Behavior'),AT(,,180),HLP('~TPLLocatorBehavior')
            #PROMPT('&Locator:',DROP('None|Step|Entry|Incremental|Filtered')),%SortLocatorType,DEFAULT('Step'),WHENACCEPTED(%SetLocatorClass(%SortOrder,%SortLocatorType))
            #BOXED('Locator Field'),WHERE(%SortLocatorType = 'Entry' OR %SortLocatorType = 'Incremental' OR %SortLocatorType = 'Filtered')
              #PROMPT('&Override default locator control',CHECK),%SortOverrideDefaultLocator,AT(10,,180)
              #ENABLE(%SortOverrideDefaultLocator)
                #PROMPT('&New Locator Control:',CONTROL),%SortOverrideLocator,REQ
              #ENDENABLE
            #ENDBOXED
            #BOXED('Find Method'),WHERE(%SortLocatorType = 'Filtered')
              #PROMPT('Find Anywhere',CHECK),%SortFindAnywhere
            #ENDBOXED
            #BUTTON('Locator &Class'),AT(,,180),WHERE(%SortLocatorType='Step' OR %SortLocatorType='Entry' OR %SortLocatorType='Incremental' OR %SortLocatorType='Filtered')
              #WITH(%ClassItem,'Locator'&%SortOrder)
                #INSERT(%ClassPrompts)
              #END
            #ENDBUTTON
          #ENDBUTTON
        #ENDENABLE
        #BOXED,SECTION
        #PROMPT('&Record Filter:',@S255),%SortRecordFilter,AT(,,78)
        #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%SortRecordFilter)),AT(180,2,10,10)
        #ENDBUTTON
        #ENDBOXED
        #ENABLE(%SortKey)
          #PREPARE
            #CALL(%LoadHigherKeysComponets,%Primary,%SortKey,%SortRangeField,%SortRangeLimitType,1)
          #ENDPREPARE
          #PROMPT('Range Limit &Field:',COMPONENT(%SortKey)),%SortRangeField,WHENACCEPTED(%LoadHigherKeysComponets(%Primary,%SortKey,%SortRangeField,%SortRangeLimitType,1))
          #ENABLE(%SortRangeField)
            #PROMPT('Range Limit &Type:',DROP('Current Value|Single Value|Range of Values|File Relationship')),%SortRangeLimitType,DEFAULT('Current Value'),WHENACCEPTED(%LoadHigherKeysComponets(%Primary,%SortKey,%SortRangeField,%SortRangeLimitType,1))
            #BOXED,WHERE(%False),AT(0,0,0,0)
               #BUTTON('HigherKeys'),MULTI(%SortHigherKeys,%SortHigherKey)
                  #PROMPT('Higher Field',COMPONENT(%SortKey)),%SortHigherKey
               #ENDBUTTON
            #ENDBOXED
            #BOXED,WHERE((%SortRangeLimitType='Single Value' OR %SortRangeLimitType='Range of Values'))
            #ENABLE(ITEMS(%SortHigherKeys))
            #BUTTON('Higher Key Component'),AT(,,175),FROM(%SortHigherKeys,%SortHigherKeyField&' = '&CHOOSE(%SortHigherKeyValueType,'Current Value',%SortHigherKeyValueVariable,%SortHigherKeyValueFixed)),HLP('~TPLHigherKeyComponent')
               #ENABLE(%False)
                  #PROMPT ('Key Field:', FIELD),%SortHigherKeyField,DEFAULT(%SortHigherKey)
               #ENDENABLE
               #PROMPT('Value Type:',DROP('Current Value[1]|Variable Value[2]|Fixed Value[3]')),%SortHigherKeyValueType,DEFAULT(1)
               #BOXED,WHERE(%SortHigherKeyValueType=2),AT(,30)
                  #PROMPT ('Value:', FIELD),%SortHigherKeyValueVariable
               #ENDBOXED
               #BOXED,WHERE(%SortHigherKeyValueType=3),AT(,30)
                  #PROMPT ('Value:', EXPR),%SortHigherKeyValueFixed
               #ENDBOXED
            #ENDBUTTON
            #ENDENABLE
            #ENDBOXED
            #BOXED,SECTION
              #BOXED('Range Limit Boundary'),WHERE(%SortRangeLimitType='Single Value'),AT(,0)
                #PROMPT('&Range Limit Value:',FIELD),%SortRangeLimit
              #ENDBOXED
              #BOXED('Range Limit Boundaries'),WHERE(%SortRangeLimitType='Range of Values'),AT(,0)
                #PROMPT('&Low Limit Value:',FIELD),%SortRangeLow
                #PROMPT('&High Limit Value:',FIELD),%SortRangeHigh
              #ENDBOXED
              #BOXED('Range Limiting File'),WHERE(%SortRangeLimitType='File Relationship'),AT(,0)
                #PROMPT('&Related File:',FILE),%SortRangeFile
              #ENDBOXED
            #ENDBOXED
          #ENDENABLE
        #ENDENABLE
        #BUTTON('Additional Sort Fields'),AT(,,175),HLP('~TPLAdditionalSortFields')
           #PROMPT('Sort Type:',DROP('Manual|Assisted')),%SortAdditionalSortType,DEFAULT('Manual')
           #DISPLAY
           #BOXED,SECTION
             #BOXED('Sort Order'),WHERE(%SortAdditionalSortType = 'Manual'),AT(,0)
               #BOXED,SECTION
               #PROMPT('&Additional Sort Fields',@S255),%SortAddSortFields,AT(,,78)
               #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%SortAddSortFields)),AT(180,2,10,10)
               #ENDBUTTON
               #ENDBOXED
               #DISPLAY
               #DISPLAY('This can be an string or a variable.  Example:')
               #DISPLAY
               #DISPLAY('String:           +Cli:FirstName,+Cli:SecondName')
               #DISPLAY('Variable:      !Loc:Order')
             #ENDBOXED
             #BOXED('Sort Order'),WHERE(%SortAdditionalSortType = 'Assisted'),AT(,0)
               #BUTTON('Additional Sort Fields'),MULTI(%SortAddSortFieldsAssisted,%SortAddSortFieldAssistedOrder & %SortAddSortFieldAssisted),INLINE,HLP('~TPLAdditionalSortFields')
                 #PROMPT('Field:',FIELD),%SortAddSortFieldAssisted,REQ
                 #PROMPT('Order:',DROP('Ascending[+]|Descending[-]')),%SortAddSortFieldAssistedOrder,DEFAULT('+')
               #ENDBUTTON
             #ENDBOXED
           #ENDBOXED
        #ENDBUTTON
        #BUTTON('Reset Fields'),MULTI(%SortResetFields,%SortResetField),AT(,,86),HLP('~TPLControlBrowseBox_Reset_Fields')
          #PROMPT('&Reset Field:',FIELD),%SortResetField
        #ENDBUTTON
        #ENABLE(%SortKey AND %LoadMethod = 'Page')
          #BUTTON('Scroll Bar Behavior'),AT(,,86),HLP('~TPLControlBrowseBox_Scroll_Bar_Behavior')
            #PROMPT('Scroll Bar Type:',DROP('Fixed Thumb|Movable Thumb')),%SortScrollBehavior,DEFAULT('Fixed Thumb'),WHENACCEPTED(%SetStepClass(%SortOrder))
            #ENABLE(%SortScrollBehavior='Movable Thumb')
              #PROMPT('Key Distribution:',DROP('Alpha|Last Names|Custom|Runtime')),%SortScrollKeyDistribution,DEFAULT('Alpha')
              #ENABLE(%SortScrollKeyDistribution='Custom')
                #BUTTON('Custom Key Distribution'),MULTI(%SortCustomKeyDistribution,%SortKeyDistributionValue),AT(10,,180),HLP('~TPLControlBrowseBox_Scroll_Bar_Behavior')
                  #PROMPT('Key Value:',@S10),%SortKeyDistributionValue,REQ
                #ENDBUTTON
              #ENDENABLE
              #ENABLE(%SortScrollKeyDistribution='Runtime')
                #BUTTON('Runtime Distribution Parameters'),AT(10,,180),HLP('~TPLControlBrowseBox_Scroll_Bar_Behavior')
                  #DISPLAY('If the free key element is a string (or')
                  #DISPLAY('CSTRING, PSTRING, etc.), you may customize')
                  #DISPLAY('the characters that are used to compute the')
                  #DISPLAY('scroll bar''s stop points.  If the free key')
                  #DISPLAY('element is numeric, these check will not be used.')
                  #DISPLAY('')
                  #BOXED('Please check the appropriate boxes.')
                    #PROMPT('Use alpha characters',CHECK),%SortScrollAlpha,DEFAULT(1),AT(10,,180)
                    #PROMPT('Use numeric characters',CHECK),%SortScrollNumeric,AT(10,,180)
                    #PROMPT('Use other keyboard characters',CHECK),%SortScrollAlt,AT(10,,180)
                  #ENDBOXED
                #ENDBUTTON
              #ENDENABLE
            #ENDENABLE
            #BUTTON('Step &Class'),AT(,,180)
              #WITH(%ClassItem,'Step'&%SortOrder)
                #INSERT(%ClassPrompts)
              #END
            #ENDBUTTON
          #ENDBUTTON
        #ENDENABLE
      #ENDBUTTON
    #ENDTAB
    #TAB('&Hot Fields'),HLP('~TPLControlBrowseBox_Hot_Fields')
      #BUTTON('"Hot" Fields'),MULTI(%HotFields,%HotField),AT(,35),INLINE,HLP('~TPLControlBrowseBox_Hot_Fields')
        #PROMPT('Hot Field:',FIELD),%HotField,REQ
        #PROMPT('BIND Field',CHECK),%HotFieldBound
        #PROMPT('Not in view',CHECK),%HotFieldBindOnly
      #ENDBUTTON
    #ENDTAB
    #TAB('Co&lors'),WHERE(%ControlHasColor),HLP('~TPLControlBrowseBox_Colors')
      #DISPLAY
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #PROMPT('Use same color for all columns',CHECK),%UseSameColorForAll,DEFAULT(%False),AT(10)
      #BOXED,WHERE(%UseSameColorForAll=%False),AT(,40)
         #BUTTON('Customize Colors'),FROM(%ControlField,%ControlField),INLINE,WHERE(%ControlFieldHasColor),HLP('~TPLControlBrowseBox_Colors')
           #PREPARE
             #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
           #ENDPREPARE
           #PROMPT('Create Greenbar Effect',CHECK),%ControlGreenBarColor,DEFAULT(%False),AT(10)
           #BOXED,SECTION
              #BOXED,WHERE(%ControlGreenBarColor=%False),AT(,0)
                 #BOXED('Default Colors')
                   #PROMPT('&Foreground Normal:',COLOR),%ControlFieldForegroundNormal,DEFAULT(-1)
                   #PROMPT('&Background Normal:',COLOR),%ControlFieldBackgroundNormal,DEFAULT(-1)
                   #PROMPT('&Foreground Selected:',COLOR),%ControlFieldForegroundSelected,DEFAULT(-1)
                   #PROMPT('&Background Selected:',COLOR),%ControlFieldBackgroundSelected,DEFAULT(-1)
                 #ENDBOXED
                 #BOXED('Conditional Color Assignments')
                   #BUTTON('Conditional Color Assignments'),MULTI(%ConditionalColors,%ColorCondition),INLINE,HLP('~TPLControlBrowseBox_Colors')
                     #PROMPT('&Condition:',EXPR),%ColorCondition
                     #!BOXED,SECTION
                     #!PROMPT('&Condition:',@S255),%ColorCondition,AT(,,78)
                     #!BUTTON('E'),WHENACCEPTED(%SVExpresionEditorWithFind(%ColorCondition,%ControlField,%ControlField,%Control)),AT(180,2,10,10)
                     #!ENDBUTTON
                     #!ENDBOXED
                     #PROMPT('&Foreground Normal:',COLOR),%ConditionalControlFieldForegroundNormal,DEFAULT(-1)
                     #PROMPT('&Background Normal:',COLOR),%ConditionalControlFieldBackgroundNormal,DEFAULT(-1)
                     #PROMPT('&Foreground Selected:',COLOR),%ConditionalControlFieldForegroundSelected,DEFAULT(-1)
                     #PROMPT('&Background Selected:',COLOR),%ConditionalControlFieldBackgroundSelected,DEFAULT(-1)
                   #ENDBUTTON
                 #ENDBOXED
              #ENDBOXED
              #BOXED,WHERE(%ControlGreenBarColor=%True),AT(,0)
                 #BOXED('First Colors')
                   #PROMPT('&Foreground Normal:',COLOR),%GreenBarOnForegroundNormal,DEFAULT(-1)
                   #PROMPT('&Background Normal:',COLOR),%GreenBarOnBackgroundNormal,DEFAULT(-1)
                   #PROMPT('&Foreground Selected:',COLOR),%GreenBarOnForegroundSelected,DEFAULT(-1)
                   #PROMPT('&Background Selected:',COLOR),%GreenBarOnBackgroundSelected,DEFAULT(-1)
                 #ENDBOXED
                 #BOXED('Second Colors')
                   #PROMPT('&Foreground Normal:',COLOR),%GreenBarOffForegroundNormal,DEFAULT(-1)
                   #PROMPT('&Background Normal:',COLOR),%GreenBarOffBackgroundNormal,DEFAULT(-1)
                   #PROMPT('&Foreground Selected:',COLOR),%GreenBarOffForegroundSelected,DEFAULT(-1)
                   #PROMPT('&Background Selected:',COLOR),%GreenBarOffBackgroundSelected,DEFAULT(-1)
                 #ENDBOXED
              #ENDBOXED
           #ENDBOXED
         #ENDBUTTON
      #ENDBOXED
      #BOXED,WHERE(%UseSameColorForAll=%True),AT(,40)
           #BOXED,SECTION
              #PROMPT('Create Greenbar Effect',CHECK),%AllControlGreenBarColor,DEFAULT(%False),AT(10,0)
              #ENABLE(%AllControlGreenBarColor)
              #PROMPT('Alternate columns',CHECK),%AllControlGreenBarColorAlternate,DEFAULT(%False),AT(110,0,80)
              #ENDENABLE
           #ENDBOXED
           #BOXED,SECTION
              #BOXED,WHERE(%AllControlGreenBarColor=%False),AT(,0)
                 #BOXED('Default Colors')
                   #PROMPT('&Foreground Normal:',COLOR),%AllControlFieldForegroundNormal,DEFAULT(-1)
                   #PROMPT('&Background Normal:',COLOR),%AllControlFieldBackgroundNormal,DEFAULT(-1)
                   #PROMPT('&Foreground Selected:',COLOR),%AllControlFieldForegroundSelected,DEFAULT(-1)
                   #PROMPT('&Background Selected:',COLOR),%AllControlFieldBackgroundSelected,DEFAULT(-1)
                 #ENDBOXED
                 #BOXED('Conditional Color Assignments')
                   #BUTTON('Conditional Color Assignments'),MULTI(%ConditionalColorsAll,%ColorConditionAll),INLINE,HLP('~TPLControlBrowseBox_Colors')
                     #PROMPT('&Condition:',EXPR),%ColorConditionAll,REQ
                     #!BOXED,SECTION
                     #!PROMPT('&Condition:',@S255),%ColorConditionAll,REQ,AT(,,78)
                     #!BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%ColorConditionAll)),AT(180,2,10,10)
                     #!ENDBUTTON
                     #!ENDBOXED
                     #PROMPT('&Foreground Normal:',COLOR),%ConditionalAllControlFieldForegroundNormal,DEFAULT(-1)
                     #PROMPT('&Background Normal:',COLOR),%ConditionalAllControlFieldBackgroundNormal,DEFAULT(-1)
                     #PROMPT('&Foreground Selected:',COLOR),%ConditionalAllControlFieldForegroundSelected,DEFAULT(-1)
                     #PROMPT('&Background Selected:',COLOR),%ConditionalAllControlFieldBackgroundSelected,DEFAULT(-1)
                   #ENDBUTTON
                 #ENDBOXED
              #ENDBOXED
              #BOXED,WHERE(%AllControlGreenBarColor=%True),AT(,0)
                 #BOXED('First Colors')
                   #PROMPT('&Foreground Normal:',COLOR),%AllGreenBarOnForegroundNormal,DEFAULT(-1)
                   #PROMPT('&Background Normal:',COLOR),%AllGreenBarOnBackgroundNormal,DEFAULT(-1)
                   #PROMPT('&Foreground Selected:',COLOR),%AllGreenBarOnForegroundSelected,DEFAULT(-1)
                   #PROMPT('&Background Selected:',COLOR),%AllGreenBarOnBackgroundSelected,DEFAULT(-1)
                 #ENDBOXED
                 #BOXED('Second Colors')
                   #PROMPT('&Foreground Normal:',COLOR),%AllGreenBarOffForegroundNormal,DEFAULT(-1)
                   #PROMPT('&Background Normal:',COLOR),%AllGreenBarOffBackgroundNormal,DEFAULT(-1)
                   #PROMPT('&Foreground Selected:',COLOR),%AllGreenBarOffForegroundSelected,DEFAULT(-1)
                   #PROMPT('&Background Selected:',COLOR),%AllGreenBarOffBackgroundSelected,DEFAULT(-1)
                 #ENDBOXED
              #ENDBOXED
           #ENDBOXED
      #ENDBOXED
    #ENDTAB
    #TAB('Co&lors'),WHERE(NOT %ControlHasColor),HLP('~TPLControlBrowseBox_Colors')
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #DISPLAY('Your BrowseBox is not set to use custom colors. To activate custom colors for your BrowseBox, follow these steps.'),AT(10,30,175,24)
      #DISPLAY('1.  If you aren''t in the window formatter, go there.'),AT(10,,175)
      #DISPLAY('2.  Right-click on the BrowseBox control, and select "List Box Format..."'),AT(10,,175,16)
      #DISPLAY('3.  Select the column you want to "colorize" from the left hand list.'),AT(10,,175,16)
      #DISPLAY('4.  Check the "Color" Checkbox in the Flags group.'),AT(10,,175)
      #DISPLAY('5.  Repeat steps 3 and 4 as necessary.'),AT(10,,175)
      #DISPLAY('6.  When you call up the BrowseBox actions window, this tab will show the columns you''ve colored.'),AT(10,,175,16)
    #ENDTAB
    #TAB('&Icons'),WHERE(%ControlHasIcon),HLP('~TPLControlBrowseBox_Icons')
      #DISPLAY
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #BUTTON('&Customize BrowseBox Icons'),FROM(%ControlField,%ControlField & ' - ' & %ControlFieldIcon),AT(,35),HLP('~TPLControlBrowseBox_Icons'),INLINE,WHERE(%ControlFieldHasIcon)
        #PREPARE
          #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
        #ENDPREPARE
        #BOXED('Default Icon')
          #PROMPT('Icon:',OPENDIALOG('Pick File','Icon|*.ICO')),%ControlFieldIcon
          #ENABLE(SUB(%ControlFieldIcon,1,1) = '!'),CLEAR
            #PROMPT('The expression is a number',CHECK),%ControlFieldIconIsNumber
          #ENDENABLE
        #ENDBOXED
        #BOXED('Conditional Icon Usage')
          #BUTTON('&Conditional Icon Usage'),MULTI(%ConditionalIcons,%IconCondition),INLINE,HLP('~TPLControlBrowseBox_Icons')
            #PROMPT('&Condition:',EXPR),%IconCondition,REQ
            #!BOXED,SECTION
            #!PROMPT('&Condition:',@S255),%IconCondition,REQ,AT(,,78)
            #!BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%IconCondition)),AT(180,2,10,10)
            #!ENDBUTTON
            #!ENDBOXED
            #PROMPT('Icon:',OPENDIALOG('Pick File','Icon|*.ICO')),%ConditionalControlFieldIcon
            #ENABLE(SUB(%ConditionalControlFieldIcon,1,1) = '!'),CLEAR
              #PROMPT('The expression is a number',CHECK),%ConditionalControlFieldIconIsNumber
            #ENDENABLE
          #ENDBUTTON
        #ENDBOXED
      #ENDBUTTON
    #ENDTAB
    #TAB('&Icons'),WHERE(NOT %ControlHasIcon),HLP('~TPLControlBrowseBox_Icons')
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #DISPLAY('Your BrowseBox is not set to use icons. To activate icons for your BrowseBox, follow these steps.'),AT(10,30,175,24)
      #DISPLAY('1.  If you aren''t in the window formatter, go there.'),AT(10,,175)
      #DISPLAY('2.  Right-click on the BrowseBox control, and select "List Box Format..."'),AT(10,,175,16)
      #DISPLAY('3.  Select the column you want to use an icon with from the left hand list.'),AT(10,,175,16)
      #DISPLAY('4.  Switch to "Appearance" tab.'),AT(10,,175)
      #DISPLAY('5.  Choose "Normal" or "Transparent" as an Icon mode.'),AT(10,,175)
      #DISPLAY('6.  Repeat steps 3-5 as necessary.'),AT(10,,175)
      #DISPLAY('7.  When you call up the BrowseBox actions window, this tab will show the columns you''ve added icons to.'),AT(10,,175,24)
    #ENDTAB
    #TAB('St&yles'),WHERE(%ControlHasStyle),HLP('~TPLControlBrowseBox_Styles')
      #DISPLAY
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #PROMPT('Use same Style for all columns',CHECK),%UseSameStyleForAll,DEFAULT(%False),AT(10)
      #BOXED,WHERE(%UseSameStyleForAll=%False),AT(,40)
         #BUTTON('&Customize BrowseBox Styles'),FROM(%ControlField,%ControlField & ' - ' & CHOOSE(%ControlFieldStyleType='Style Number',%ControlFieldStyle,%ControlFieldStyleLocalList)),HLP('~TPLControlBrowseBox_Styles'),INLINE,WHERE(%ControlFieldHasStyle)
           #PREPARE
             #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
           #ENDPREPARE
           #PROMPT('Create Greenbar Effect',CHECK),%ControlGreenBarStyle,DEFAULT(%False),AT(10)
           #BOXED,SECTION
              #BOXED,WHERE(%ControlGreenBarStyle=%True),AT(,0)
                 #BOXED('First Style')
                   #PROMPT('Style Type:',DROP('Local List|Style Number')),%GreenBarOnStyleType,DEFAULT('Local List')
                   #BOXED,SECTION
                      #BOXED,WHERE(%GreenBarOnStyleType='Local List'),AT(0,0)
                      #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%GreenBarOnStyleLocalList
                      #ENDBOXED
                      #BOXED,WHERE(%GreenBarOnStyleType='Style Number'),AT(0,0)
                      #PROMPT('Style Number:',SPIN(@n6,0,65535)),%GreenBarOnStyle
                      #ENDBOXED
                   #ENDBOXED
                 #ENDBOXED
                 #BOXED('Second Style')
                   #PROMPT('Style Type:',DROP('Local List|Style Number')),%GreenBarOffStyleType,DEFAULT('Local List')
                   #BOXED,SECTION
                      #BOXED,WHERE(%GreenBarOffStyleType='Local List'),AT(0,0)
                      #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%GreenBarOffStyleLocalList
                      #ENDBOXED
                      #BOXED,WHERE(%GreenBarOffStyleType='Style Number'),AT(0,0)
                      #PROMPT('Style Number:',SPIN(@n6,0,65535)),%GreenBarOffStyle
                      #ENDBOXED
                   #ENDBOXED
                 #ENDBOXED
              #ENDBOXED
              #BOXED,WHERE(%ControlGreenBarStyle=%False),AT(,0)
                 #BOXED('Default Style')
                   #PROMPT('Style Type:',DROP('Local List|Style Number')),%ControlFieldStyleType,DEFAULT('Local List')
                   #BOXED,SECTION
                      #BOXED,WHERE(%ControlFieldStyleType='Local List'),AT(0,0)
                      #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%ControlFieldStyleLocalList
                      #ENDBOXED
                      #BOXED,WHERE(%ControlFieldStyleType='Style Number'),AT(0,0)
                      #PROMPT('Style Number:',SPIN(@n6,0,65535)),%ControlFieldStyle
                      #ENDBOXED
                   #ENDBOXED
                 #ENDBOXED
                 #BOXED('Conditional Styles')
                   #BUTTON('&Conditional Styles'),MULTI(%ConditionalStyles,%StyleCondition),INLINE,HLP('~TPLControlBrowseBox_Styles')
                     #PROMPT('&Condition:',EXPR),%StyleCondition,REQ
                     #!BOXED,SECTION
                     #!PROMPT('&Condition:',@S255),%StyleCondition,REQ,AT(,,78)
                     #!BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%StyleCondition)),AT(180,2,10,10)
                     #!ENDBUTTON
                     #!ENDBOXED
                     #PROMPT('Style Type:',DROP('Local List|Style Number')),%ConditionalControlFieldStyleType,DEFAULT('Local List')
                     #BOXED,SECTION
                        #BOXED,WHERE(%ConditionalControlFieldStyleType='Local List'),AT(0,0)
                        #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%ConditionalControlFieldStyleLocalList
                        #ENDBOXED
                        #BOXED,WHERE(%ConditionalControlFieldStyleType='Style Number'),AT(0,0)
                        #PROMPT('Style Number:',SPIN(@n6,0,65535)),%ConditionalControlFieldStyle
                        #ENDBOXED
                     #ENDBOXED
                   #ENDBUTTON
                 #ENDBOXED
              #ENDBOXED
           #ENDBOXED
         #ENDBUTTON
      #ENDBOXED
      #BOXED,WHERE(%UseSameStyleForAll=%True),AT(,40)
      #DISPLAY
           #BOXED,SECTION
              #PROMPT('Create Greenbar Effect',CHECK),%AllControlGreenBarStyle,DEFAULT(%False),AT(10,0)
              #ENABLE(%AllControlGreenBarStyle)
              #PROMPT('Alternate columns',CHECK),%AllControlGreenBarStyleAlternate,DEFAULT(%False),AT(110,0,80)
              #ENDENABLE
           #ENDBOXED
           #BOXED,SECTION
              #BOXED,WHERE(%AllControlGreenBarStyle=%False),AT(,0)
                 #BOXED('Default Style')
                     #PROMPT('Style Type:',DROP('Local List|Style Number')),%AllControlFieldStyleType,DEFAULT('Local List')
                     #BOXED,SECTION
                        #BOXED,WHERE(%AllControlFieldStyleType='Local List'),AT(0,0)
                        #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%AllControlFieldStyleLocalList
                        #ENDBOXED
                        #BOXED,WHERE(%AllControlFieldStyleType='Style Number'),AT(0,0)
                        #PROMPT('Style Number:',SPIN(@n6,0,65535)),%AllControlFieldStyle
                        #ENDBOXED
                     #ENDBOXED
                 #ENDBOXED
                 #BOXED('Conditional Style Assignments')
                   #BUTTON('Conditional Style Assignments'),MULTI(%ConditionalStylesAll,%StyleConditionAll),INLINE,HLP('~TPLControlBrowseBox_Styles')
                     #PROMPT('&Condition:',EXPR),%StyleConditionAll,REQ
                     #!BOXED,SECTION
                     #!PROMPT('&Condition:',@S255),%StyleConditionAll,REQ,AT(,,78)
                     #!BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%StyleConditionAll)),AT(180,2,10,10)
                     #!ENDBUTTON
                     #!ENDBOXED
                     #PROMPT('Style Type:',DROP('Local List|Style Number')),%ConditionalAllControlFieldStyleType,DEFAULT('Local List')
                     #BOXED,SECTION
                        #BOXED,WHERE(%ConditionalAllControlFieldStyleType='Local List'),AT(0,0)
                        #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%ConditionalAllControlFieldStyleLocalList
                        #ENDBOXED
                        #BOXED,WHERE(%ConditionalAllControlFieldStyleType='Style Number'),AT(0,0)
                        #PROMPT('Style Number:',SPIN(@n6,0,65535)),%ConditionalAllControlFieldStyle
                        #ENDBOXED
                     #ENDBOXED
                   #ENDBUTTON
                 #ENDBOXED
              #ENDBOXED
              #BOXED,WHERE(%AllControlGreenBarStyle=%True),AT(,0)
                 #BOXED('First Style')
                     #PROMPT('Style Type:',DROP('Local List|Style Number')),%AllGreenBarOnStyleType,DEFAULT('Local List')
                     #BOXED,SECTION
                        #BOXED,WHERE(%AllGreenBarOnStyleType='Local List'),AT(0,0)
                        #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%AllGreenBarOnStyleLocalList
                        #ENDBOXED
                        #BOXED,WHERE(%AllGreenBarOnStyleType='Style Number'),AT(0,0)
                        #PROMPT('Style Number:',SPIN(@n6,0,65535)),%AllGreenBarOnStyle
                        #ENDBOXED
                     #ENDBOXED
                 #ENDBOXED
                 #BOXED('Second Style')
                     #PROMPT('Style Type:',DROP('Local List|Style Number')),%AllGreenBarOffStyleType,DEFAULT('Local List')
                     #BOXED,SECTION
                        #BOXED,WHERE(%AllGreenBarOffStyleType='Local List'),AT(0,0)
                        #PROMPT('Style:',FROM(%WindowStyles,,INSTANCE(%WindowStyles)&'-'&CHOOSE(%WindowStyleFontNameIsVariable,%WindowStyleFontNameVariable,%WindowStyleFontName)&','&CHOOSE(%WindowStyleFontSizeIsVariable,%WindowStyleFontSizeVariable,%WindowStyleFontSize))),%AllGreenBarOffStyleLocalList
                        #ENDBOXED
                        #BOXED,WHERE(%AllGreenBarOffStyleType='Style Number'),AT(0,0)
                        #PROMPT('Style Number:',SPIN(@n6,0,65535)),%AllGreenBarOffStyle
                        #ENDBOXED
                     #ENDBOXED
                 #ENDBOXED
              #ENDBOXED
           #ENDBOXED
      #ENDBOXED
    #ENDTAB
    #TAB('St&yles'),WHERE(NOT %ControlHasStyle),HLP('~TPLControlBrowseBox_Styles')
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #DISPLAY('Your BrowseBox is not set to use styles. To activate styles for your BrowseBox, follow these steps.'),AT(10,,175,24)
      #DISPLAY('1.  If you aren''t in the window formatter, go there.'),AT(10,,175)
      #DISPLAY('2.  Right-click on the BrowseBox control, and select "List Box Format..."'),AT(10,,175,16)
      #DISPLAY('3.  Select the column you want to use styles for from the left hand list.'),AT(10,,175,16)
      #DISPLAY('4.  Check the "Style" Checkbox in the Flags group.'),AT(10,,175)
      #DISPLAY('5.  Repeat steps 3 and 4 as necessary.'),AT(10,,175)
      #DISPLAY('6.  When you call up the BrowseBox actions window, this tab will show the columns you''ve added styles for.'),AT(10,,175,16)
    #ENDTAB
    #TAB('Toolti&ps'),WHERE(%ControlHasTip),HLP('~TPLControlBrowseBox_Tips')
      #DISPLAY
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #BUTTON('&Customize BrowseBox Tooltips'),FROM(%ControlField,%ControlField & ' - ' & %ControlFieldTipField),HLP('~TPLControlBrowseBox_Tips'),INLINE,WHERE(%ControlFieldHasTip)
        #PREPARE
          #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
        #ENDPREPARE
        #PROMPT('Tooltip &variable:',FIELD),%ControlFieldTipField
      #ENDBUTTON
    #ENDTAB
    #TAB('Toolti&ps'),WHERE(NOT %ControlHasTip),HLP('~TPLControlBrowseBox_Tips')
      #PREPARE
        #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
      #ENDPREPARE
      #DISPLAY('Your BrowseBox is not set to use tooltips. To activate tooltips for your BrowseBox, follow these steps.'),AT(10,,175,24)
      #DISPLAY('1.  If you aren''t in the window formatter, go there.'),AT(10,,175)
      #DISPLAY('2.  Right-click on the BrowseBox control, and select "List Box Format..."'),AT(10,,175,16)
      #DISPLAY('3.  Select the column you want to use styles for from the left hand list.'),AT(10,,175,16)
      #DISPLAY('4.  Check the "Tooltip" Checkbox in the Flags group.'),AT(10,,175)
      #DISPLAY('5.  Repeat steps 3 and 4 as necessary.'),AT(10,,175)
      #DISPLAY('6.  When you call up the BrowseBox actions window, this tab will show the columns you''ve added tooltips for.'),AT(10,,175,24)
    #ENDTAB
    #TAB('&Totaling'),HLP('~TPLControlBrowseBox_Totaling')
      #DISPLAY
      #PROMPT('Always Calculate Totals',CHECK),%BrowseAllTotalOnOff,DEFAULT(%True),AT(10)
      #ENABLE(NOT %BrowseAllTotalOnOff)
         #BOXED,SECTION
         #PROMPT('&Condition:',@S255),%BrowseAllTotalOnOffCondition,REQ,AT(,,75)
         #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%BrowseAllTotalOnOffCondition)),AT(174,2,10,10)
         #ENDBUTTON
         #ENDBOXED
      #ENDENABLE
      #DISPLAY
      #BUTTON('Browse Totaling'),MULTI(%BrowseTotals,%BrowseTotalTarget & ' (' & %BrowseTotalType & ')'),INLINE
        #PROMPT('Total Target Field:',FIELD),%BrowseTotalTarget,REQ
        #PROMPT('Total Type:',DROP('Count|Sum|Average')),%BrowseTotalType
        #ENABLE(%BrowseTotalType <> 'Count'),CLEAR
          #BOXED,SECTION
          #PROMPT('Field To Total:',@S255),%BrowseTotalField,REQ,AT(,,78)
          #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%BrowseTotalField)),AT(180,2,10,10)
          #ENDBUTTON
          #ENDBOXED
        #ENDENABLE
        #PROMPT('Total Based On:',DROP('Each Record Read|Specified Condition')),%BrowseTotalBasedOn
        #ENABLE(%BrowseTotalBasedOn = 'Specified Condition'),CLEAR
          #BOXED,SECTION
          #PROMPT('Total Condition:',@S255),%BrowseTotalCondition,REQ,AT(,,78)
          #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%BrowseTotalCondition)),AT(180,2,10,10)
          #ENDBUTTON
          #ENDBOXED
        #ENDENABLE
      #ENDBUTTON
    #ENDTAB
    #TAB('&Extended Options'),HLP('~TPLControlBrowseBox_Extended_Options')
       #DISPLAY
       #PREPARE
         #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
       #ENDPREPARE
       #PROMPT('Do not include Primary key in view', CHECK),%BrowseBoxDoNotIncludePrimaryKey,AT(10),DEFAULT(%False)
       #PROMPT('Disable Browse &Popup menu',CHECK),%DisableUsePopup,DEFAULT(0),AT(10,,180)
       #PROMPT('Enable Sort Header',CHECK),%EnableSortHeader,DEFAULT(0),AT(10)
       #ENABLE(%EnableSortHeader)
          #BUTTON('&Customize BrowseBox Sort Header'),AT(,,175),HLP('~TPLControlBrowseBox_SortHeader')
             #PROMPT('Save/Restore from INI/REG',CHECK),%ControlFieldSortHeaderSave,DEFAULT(%False),AT(10)
             #BUTTON('&Customize BrowseBox Sort Header'),FROM(%ControlField,CHOOSE(%ControlFieldSortHeaderOverride,%ControlField&'   (Overridden)'&CHOOSE(%ControlFieldSortHeaderDisableColumn OR NOT ITEMS(%ControlFieldSortHeaderFields),'  (Disable)',''),%ControlField)),AT(,,175),HLP('~TPLControlBrowseBox_SortHeader'),INLINE
               #PREPARE
                 #FIND(%ControlInstance,%ActiveTemplateInstance,%Control)
               #ENDPREPARE
               #DISPLAY('Column Field: '&%ControlField)
               #DISPLAY
               #PROMPT('Override default behavior',CHECK),%ControlFieldSortHeaderOverride,AT(10),DEFAULT(%False)
               #BOXED
                 #ENABLE(%ControlFieldSortHeaderOverride)
                     #PROMPT('Disable Column',CHECK),%ControlFieldSortHeaderDisableColumn,AT(10),DEFAULT(%False)
                     #ENABLE(NOT %ControlFieldSortHeaderDisableColumn)
                        #BOXED('Ascending Sorting Fields')
                           #BUTTON('Sorting Field'),MULTI(%ControlFieldSortHeaderFields, %ControlFieldSortHeaderFieldOrder & CHOOSE(%ControlFieldSortHeaderFieldCase,%ControlFieldSortHeaderField,'UPPER('&%ControlFieldSortHeaderField&')')),INLINE
                              #PROMPT('Field:',FIELD),%ControlFieldSortHeaderField,REQ
                              #PROMPT('Ascending Order:',DROP('Ascending[+]|Descending[-]')),%ControlFieldSortHeaderFieldOrder,DEFAULT('+')
                              #PROMPT('Case sensitive',CHECK),%ControlFieldSortHeaderFieldCase,DEFAULT(%False)
                              #DISPLAY('If the field is numeric it should have "case sensitive" checked')
                           #ENDBUTTON
                           #DISPLAY('If there are no fields in this list the column')
                           #DISPLAY('will be disabled for sorting.')
                           #DISPLAY('The descending order will be created changing the')
                           #DISPLAY('sign for each column to its opposite value.')
                           #DISPLAY('The Field should be in the listbox or defined as a Hot Field.')
                        #ENDBOXED
                     #ENDENABLE
                 #ENDENABLE
               #ENDBOXED
             #ENDBUTTON
          #ENDBUTTON
       #ENDENABLE
       #INSERT(%BrowseBoxExtendedOptionsPrompts)
    #ENDTAB
    #TAB('SQL Advanced'),WHERE(%isSQL()),HLP('~TPLControlBrowseBox_SQLAdvanced')
      #BOXED('Query Elements')
        #BUTTON('Elements'),MULTI(%SQLAssignments, %SQLViewField & ' - ' & %SQLViewFieldAssignment),INLINE,WHENACCEPTED(%SQLBuildViewFields())
          #PROMPT('View Field', FROM(%SQLViewFields)),%SQLViewField,REQ
          #BOXED,SECTION
          #PROMPT('Assignment', @S255),%SQLViewFieldAssignment,REQ,AT(,,78)
          #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%SQLViewFieldAssignment)),AT(180,2,10,10)
          #ENDBUTTON
          #ENDBOXED
        #ENDBUTTON
      #ENDBOXED
      #BOXED('Grouping')
        #ENABLE(%BrowseBoxDoNotIncludePrimaryKey),CLEAR
        #PROMPT('&Group', CHECK),%SQLHasGroupBy,AT(8)
        #ENDENABLE
        #ENABLE(%SQLHasGroupBy),CLEAR
          #BOXED,SECTION
          #PROMPT('G&rouping Definition:', @S255),%SQLGrouping,REQ,AT(,,75)
          #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%SQLGrouping)),AT(174,2,10,10)
          #ENDBUTTON
          #ENDBOXED
          #PROMPT('&Having', CHECK),%SQLHasHaving,AT(8)
          #ENABLE(%SQLHasHaving),CLEAR
            #BOXED,SECTION
            #PROMPT('H&aving Definition:', @S255),%SQLHas,REQ,AT(,,75)
            #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%SQLHas)),AT(174,2,10,10)
            #ENDBUTTON
            #ENDBOXED
          #ENDENABLE
        #ENDENABLE
      #ENDBOXED
    #ENDTAB
    #TAB('Cl&asses'),HLP('~TPLControlBrowseBox_Classes')
      #WITH(%ClassItem,'Default')
        #INSERT(%ClassPrompts)
      #END
    #ENDTAB
  #ENDSHEET
#ENDBUTTON
#!
#CLASS('Before Filter',%ActiveTemplateInstanceDescription & ' - Validate Record before Filter Code')
#CLASS('Before Range Limits',%ActiveTemplateInstanceDescription & ' - Validate Record before Range Limit Code')
#CLASS('Format Browse','Format a variable in the ' & %ActiveTemplateInstanceDescription)
#!
#AT(%CustomGlobalDeclarations)
  #INSERT(%FileControlSetFlags)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #FOR(%ControlField)
      #IF(%ControlFieldHasIcon)
        #IF(%ControlFieldIcon)
          #INSERT(%StandardAddIconToProject,%ControlFieldIcon)
        #ENDIF
        #FOR(%ConditionalIcons)
          #INSERT(%StandardAddIconToProject,%ConditionalControlFieldIcon)
        #ENDFOR
      #ENDIF
    #ENDFOR
  #ENDFOR
#ENDAT
#!
#AT(%GenerateInstanceUpdate)
  #CALL(%AddModuleIncludeFile,%PopupClass)
  #IF(%AcceptToolbarControl)
    #CALL(%AddModuleIncludeFile,%ToolbarListBoxType)
  #ENDIF
#ENDAT
#!
#!
#ATSTART
#MESSAGE('Initializing Browse',3)
#INSERT(%FileControlInitialize)
#CALL(%ReadABCFiles)
#CALL(%SetClassDefaults, 'Default', 'BRW' & %ActiveTemplateInstance, %BrowserType)
#CALL(%SetBothTypes,0)
#FOR(%SortOrder)
  #CALL(%SetBothTypes,%Sortorder)
#ENDFOR
#IF(%isSQL())
  #CALL(%SQLBuildViewFields)
#ENDIF
#!
#EQUATE(%InstancePrefix,'BRW'&%ActiveTemplateInstance&':')
#DECLARE(%AdditionObjectNumber,LONG)
#DECLARE(%ManagerName)
#FIX(%ClassItem,'Default')
#SET(%ManagerName,%ThisObjectName)
#DECLARE(%ListView)
#SET(%ListView,%InstancePrefix & ':View:Browse')
#DECLARE(%VerticalScrollBarFound)
#DECLARE(%ListControl)
#DECLARE(%UseValidateRoutine)
#DECLARE(%BeginningOffset)
#DECLARE(%EndingOffset)
#SET(%ListControl,%GetControlName())
#SET(%VerticalScrollBarFound,%ControlAttributePresent('VSCROLL')+%ControlAttributePresent('HVSCROLL'))
#!
#!
#DECLARE(%ListViewBoundField),UNIQUE
#DECLARE(%BrowseAccessID),MULTI
#DECLARE(%BrowseTotalKeys)
#DECLARE(%BrowseSortOrderInstance,%BrowseAccessID,LONG)         #!Stores the %SortOrder instance number or 0
#DECLARE(%BrowseKey,%BrowseAccessID)
#DECLARE(%BrowsePrefix,%BrowseAccessID)
#DECLARE(%BrowseCondition,%BrowseAccessID)
#DECLARE(%BrowseRecordFilter,%BrowseAccessID)
#DECLARE(%BrowseRangeField,%BrowseAccessID)
#DECLARE(%BrowseRangeLimitType,%BrowseAccessID)
#DECLARE(%BrowseRangeLimit,%BrowseAccessID)
#DECLARE(%BrowseRangeHigh,%BrowseAccessID)
#DECLARE(%BrowseRangeLow,%BrowseAccessID)
#DECLARE(%BrowseRangeFile,%BrowseAccessID)
#DECLARE(%BrowseRangeLimitField,%BrowseAccessID),MULTI
#DECLARE(%BrowseRangeLimitValue,%BrowseRangeLimitField)
#DECLARE(%BrowseResetField,%BrowseAccessID),UNIQUE
#DECLARE(%BrowseFreeElement,%BrowseAccessID)
#DECLARE(%BrowseFreeElementNumber,%BrowseAccessID)
#DECLARE(%BrowseFilterStatement,%BrowseAccessID)
#DECLARE(%BrowseOrderStatement,%BrowseAccessID)
#DECLARE(%BrowseLocatorType,%BrowseAccessID)
#DECLARE(%BrowseLocatorName,%BrowseAccessID)
#DECLARE(%BrowseLocatorField,%BrowseAccessID)
#DECLARE(%BrowseLocatorControl,%BrowseAccessID)
#DECLARE(%BrowseLocatorFindAny,%BrowseAccessID)
#DECLARE(%BrowseScrollBehavior,%BrowseAccessID)
#DECLARE(%BrowseScrollKeyDistribution,%BrowseAccessID)
#DECLARE(%BrowseScrollParameters,%BrowseAccessID)
#DECLARE(%BrowseKeyDistributionValue,%BrowseAccessID),MULTI
#DECLARE(%BrowseKeyDistributionCount,%BrowseAccessID)
#DECLARE(%Found,LONG)
#DECLARE(%ListQueue)
#DECLARE(%HelpControl)
#FOR(%Control)
  #IF(UPPER(EXTRACT(%ControlStatement,'STD',1))='STD:HELP')
    #SET(%HelpControl,%Control)
    #BREAK
  #ENDIF
#ENDFOR
#FIX(%Key,%PrimaryKey)
#FIX(%Control,%ListControl)
#SET(%ListQueue,EXTRACT(%ControlStatement,'FROM',1))
#DECLARE(%IconList),UNIQUE
#DECLARE(%IconListType,%IconList)
#DECLARE(%IconNameValue)
#DECLARE(%QueueField),MULTI
#DECLARE(%QueueFieldAssignment,%QueueField)
#DECLARE(%QueueFieldComment,%QueueField)
#DECLARE(%QueueFieldHasColor,%QueueField)
#DECLARE(%QueueFieldHasIcon,%QueueField)
#DECLARE(%QueueFieldHasTree,%QueueField)
#DECLARE(%QueueFieldHasStyle,%QueueField)
#DECLARE(%QueueFieldHasTip,%QueueField)
#CALL(%BuildQueueFields,%ManagerName,%ListControl,%BrowseBoxDoNotIncludePrimaryKey)
#INSERT(%SetupBrowseBehavior)
#IF(%RangeField)
   #CALL(%LoadHigherKeysComponets,%Primary,%PrimaryKey,%RangeField,%RangeLimitType)
#ENDIF
#IF(%RecordFilter)
    #CALL(%ProcedureBindParseText,%RecordFilter)
#ENDIF
#FOR(%SortOrder)
   #IF(%SortRecordFilter)
       #CALL(%ProcedureBindParseText,%SortRecordFilter)
   #ENDIF
   #IF(%SortKey AND %SortRangeField)
       #CALL(%LoadHigherKeysComponets,%Primary,%SortKey,%SortRangeField,%SortRangeLimitType,1)
   #ENDIF
#ENDFOR
#ENDAT
#!
#!#AT(%AfterAutoBindClean)
#!#IF(%RecordFilter)
#!    #CALL(%ProcedureBindParseText,%RecordFilter)
#!#ENDIF
#!#FOR(%SortOrder)
#!   #IF(%SortRecordFilter)
#!       #CALL(%ProcedureBindParseText,%SortRecordFilter)
#!   #ENDIF
#!#ENDFOR
#!#ENDAT
#!
#AT(%GatherObjects)
#CALL(%AddObjectList, 'Default')
#IF(%PrimaryKey)
  #CASE(%LocatorType)
  #OF('Step')
    #CALL(%AddObjectList, 'Locator0', %StepLocatorType)
  #OF('Entry')
    #CALL(%AddObjectList, 'Locator0', %EntryLocatorType)
  #OF('Incremental')
    #CALL(%AddObjectList, 'Locator0', %IncrementalLocatorType)
  #OF('Filtered')
    #CALL(%AddObjectList, 'Locator0', %FilteredLocatorType)
  #ENDCASE
#ENDIF
#FOR(%SortOrder)
  #CASE(%SortLocatorType)
  #OF('Step')
    #CALL(%AddObjectList, 'Locator' & %SortOrder, %StepLocatorType)
  #OF('Entry')
    #CALL(%AddObjectList, 'Locator' & %SortOrder, %EntryLocatorType)
  #OF('Incremental')
    #CALL(%AddObjectList, 'Locator' & %SortOrder, %IncrementalLocatorType)
  #OF('Filtered')
    #CALL(%AddObjectList, 'Locator' & %SortOrder, %FilteredLocatorType)
  #ENDCASE
#ENDFOR
#ENDAT
#!-------------------------------------------------------------------------
#AT(%CustomModuleDeclarations)
  #IF(%AcceptToolbarControl)
    #CALL(%AddModuleIncludeFile,%ToolbarClass)
  #ENDIF
#ENDAT
#!-------------------------------------------------------------------------
#!
#AT(%DataSection),PRIORITY(3500),DESCRIPTION('Browse View & Queue for ' & %Primary)
#FIX(%Control,%ListControl)
#INSERT(%ConstructView)
#EMBED(%BeforeConstructingBrowseQueue, ''),%ActiveTemplateInstance,HIDE
#INSERT(%ConstructQueue)
#ENDAT
#!-------------------------------------------------------------------------
#!-------------------------------------------------------------------------
#! Autosize
#!
#AT(%CustomModuleDeclarations)
#INSERT(%AutoSizeModuleIncludeList)
#ENDAT
#AT(%DataSection),PRIORITY(7000)
#INSERT(%AutoSizeData,'BRW' & %ActiveTemplateInstance)
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Kill','(),BYTE'),PRIORITY(7250)
#INSERT(%AutoSizeKill,'BRW' & %ActiveTemplateInstance)
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(9500)
#INSERT(%AutoSizeInit,'BRW' & %ActiveTemplateInstance,%ListControl,%ListQueue)
#ENDAT
#AT(%WindowManagerMethodCodeSection,'TakeEvent','(),BYTE'),PRIORITY(4400)
#INSERT(%AutoSizeTakeEvent,'BRW' & %ActiveTemplateInstance,1)
#ENDAT
#!
#!-------------------------------------------------------------------------
#! ListBox Format Manager
#!
#AT(%CustomGlobalDeclarations)
#INSERT(%FormatManagerIncludeIcons)
#ENDAT
#AT(%CustomModuleDeclarations)
#INSERT(%FormatManagerModuleIncludeList)
#ENDAT
#AT(%DataSectionBeforeWindow)
#INSERT(%FormatManagerDeclaration,'BRW' & %ActiveTemplateInstance)
#ENDAT
#AT(%PrepareAlerts)
#INSERT(%FormatManagerInit,'BRW' & %ActiveTemplateInstance)
#ENDAT
#AT(%BeforeWindowClosing)
#INSERT(%FormatManagerKill,'BRW' & %ActiveTemplateInstance)
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'TakeNewSelection','()'),PRIORITY(4800)
#INSERT(%FormatManagerPopupABCBefore,'BRW' & %ActiveTemplateInstance)
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'TakeNewSelection','()'),PRIORITY(7500)
#INSERT(%FormatManagerPopupABCAfter,'BRW' & %ActiveTemplateInstance)
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'SetSort','(BYTE NewOrder,BYTE Force),BYTE'),PRIORITY(7500)
#INSERT(%FormatManagerSortOrderABC,'BRW' & %ActiveTemplateInstance)
#ENDAT
#!-------------------------------------------------------------------------
#AT(%WindowManagerMethodCodeSection,'Kill','(),BYTE'),PRIORITY(7000)
#IF(%FuzzyMatchingEnabled)
  #FOR(%ActiveTemplate)
    #IF(%ActiveTemplate = 'BrowseFuzzyMatching(ABC)')
#!UNBIND('FuzzyMatch')
      #BREAK
    #ENDIF
  #ENDFOR
#ENDIF
#ENDAT
#!
#!
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(4400)
#IF(%FuzzyMatchingEnabled)
  #FOR(%ActiveTemplate)
    #IF(%ActiveTemplate = 'BrowseFuzzyMatching(ABC)')
#!BIND('FuzzyMatch', FuzzyMatch)
#CALL(%AddFieldToBindToList,'FuzzyMatch')
      #BREAK
    #ENDIF
  #ENDFOR
#ENDIF
#FOR(%HotFields),WHERE(%HotFieldBound)
  #FIND(%Field,%HotField)
  #IF(NOT %FieldFile OR %FieldName AND ~INLIST(%HotField,%ListViewBoundField))
    #SET(%ValueConstruct,%HotField)
    #INSERT(%CleanDimensions)
    #IF(~INLIST(%ValueConstruct,%QueueField))
#!BIND('%ValueConstruct',%HotField)
#CALL(%AddFieldToBindToList,%HotField)
    #ENDIF
  #ENDIF
#ENDFOR
#FOR(%ListViewBoundField)
  #FIND(%Field,%ListViewBoundField)
  #IF(NOT %FieldFile OR %FieldName)
    #SET(%ValueConstruct,%ListViewBoundField)
    #INSERT(%CleanDimensions)
#!BIND('%ValueConstruct',%ListViewBoundField)
#CALL(%AddFieldToBindToList,%ListViewBoundField)
  #ENDIF
#ENDFOR
#FOR(%QueueField)
  #FIND(%Field,%QueueFieldAssignment)
  #IF(NOT %FieldFile OR %FieldName)
    #IF(~INLIST(%QueueFieldAssignment,%ListViewBoundField))
#!BIND('%QueueField',%QueueFieldAssignment)
#CALL(%AddFieldToBindToList,%QueueFieldAssignment)
    #ENDIF
  #ENDIF
#ENDFOR
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(8040)
#IF(%InterLine)
%ListControl{Prop:LineHeight} = %InterLine
#ENDIF
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(7750),DESCRIPTION('Initialize browse')
#FIX(%Control,%ListControl)
%ManagerName.Init(%Control,%ListQueue.ViewPosition,%ListView,%ListQueue,Relate:%Primary,SELF)   #<! Initialize the browse manager
#IF(%DisableUsePopup)
%ManagerName.SetUsePopup(False)
#ENDIF
#IF(NOT %UseMRP)
%ManagerName.SetUseMRP(False)
#ENDIF
#PRIORITY(8125),DESCRIPTION('Filling in browse options')
#IF(%EnableRunTimeTranslator)
%ManagerName.Popup.SetTranslator(Translator)                    #<! The run-time translator is enabled, so make sure the popup dialog hooks it
#ENDIF
%ManagerName.Q &= %ListQueue
#IF(%LoadMethod='File')
%ManagerName.FileLoaded = 1                                     #<! This is a 'file loaded' browse
#ENDIF
#IF(%ActiveInvisible NOT=%SysActiveInvisible)
%ManagerName.ActiveInvisible = %ActiveInvisible
#ENDIF
#IF(%AllowUnFilled NOT=%SysAllowUnFilled)
%ManagerName.AllowUnfilled = %AllowUnFilled
#ENDIF
#IF(%RetainRow NOT=%SysRetainRow)
%ManagerName.RetainRow = %RetainRow
#ENDIF
#FIX(%File,%Primary)
#SUSPEND
#?IF SELF.Request <> SelectRecord
  #EMBED(%BrowsePrepNormal,'Browse Preparation, Request Normal Operation'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
#SUSPEND
#?ELSE
  #EMBED(%BrowsePrepSelectRecord,'Browse Preparation, Request to Select Record'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
#RESUME
#?END
#RESUME
#FOR(%BrowseAccessID)
  #IF(%BrowseSortOrderInstance)
    #SELECT(%SortOrder,%BrowseSortOrderInstance)
    #SET(%AdditionObjectNumber,%SortOrder)
  #ELSE
    #SET(%AdditionObjectNumber,0)
  #ENDIF
  #IF(%BrowseScrollBehavior = 'Movable Thumb')
    #FIX(%Key,%BrowseKey)
    #FIX(%KeyField,%BrowseFreeElement)
    #IF (%KeyFieldSequence <> 'ASCENDING')
      #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:Descending')
    #ENDIF
    #FIX(%Field,%BrowseFreeElement)
    #CASE(%FieldType)
    #OF('STRING')
    #OROF('CSTRING')
    #OROF('PSTRING')
    #OROF('GROUP')
      #IF (%BrowseScrollKeyDistribution='Runtime')
        #SET(%BrowseScrollParameters,%BrowseScrollParameters & ',ScrollBy:Runtime')
      #ELSIF(%BrowseScrollKeyDistribution='Last Names')
        #SET(%BrowseScrollParameters,%BrowseScrollParameters & ',ScrollBy:Name')
      #ELSIF(%BrowseScrollKeyDistribution='Alpha')
        #SET(%BrowseScrollParameters,%BrowseScrollParameters & ',ScrollBy:Alpha')
      #ENDIF
    #ENDCASE
    #CALL(%SetClassItem,'Step'&%AdditionObjectNumber)
%ThisObjectName.Init(%BrowseScrollParameters)                   #<! Moveable thumb based upon %Field for sort order %BrowseAccessID
    #IF(%BrowseScrollKeyDistribution='Custom')
      #FOR(%BrowseKeyDistributionValue)
        #SET(%ValueConstruct,INSTANCE(%BrowseKeyDistributionValue))
%ThisObjectName.AddItem(%BrowseKeyDistributionValue)            #<! Set browse key distribution value for sort order %BrowseAccessID
      #ENDFOR
    #ENDIF
%ManagerName.AddSortOrder(%ThisObjectName,%BrowseKey)           #<! Add the sort order for %BrowseKey for sort order %BrowseAccessID
  #ELSE
%ManagerName.AddSortOrder(,%BrowseKey)                          #<! Add the sort order for %BrowseKey for sort order %BrowseAccessID
  #ENDIF
  #IF (%BrowseRangeField)
    #CASE (%BrowseRangeLimitType)
    #OF ('Single Value')
%ManagerName.AddRange(%BrowseRangeField,%BrowseRangeLimit)      #<! Add single value range limit for sort order %BrowseAccessID
    #OF ('Range of Values')
%ManagerName.AddRange(%BrowseRangeField,%BrowseRangeLow,%BrowseRangeHigh) #<! Add 'range of values' range limit for sort order %BrowseAccessID
    #OF ('File Relationship')
%ManagerName.AddRange(%BrowseRangeField,Relate:%Primary,Relate:%BrowseRangeFile) #<! Add file relationship range limit for sort order %BrowseAccessID
    #OF ('Current Value')
%ManagerName.AddRange(%BrowseRangeField)                        #<! Add current value range limit for sort order %BrowseAccessID
    #ENDCASE
  #ENDIF
  #CALL(%SetClassItem,'Locator'&%AdditionObjectNumber)
  #IF (%BrowseLocatorType AND %BrowseLocatorType <> 'None')
%ManagerName.AddLocator(%ThisObjectName)                        #<! Browse has a locator for sort order %BrowseAccessID
#FIX(%Key,%BrowseKey)
#FIX(%KeyField,%BrowseLocatorName)
%ThisObjectName.Init(%BrowseLocatorControl,%BrowseLocatorName,%KeyNoCase,%ManagerName) #<! Initialize the browse locator using %BrowseLocatorControl using key: %Key , %KeyField
    #IF (%BrowseLocatorType = 'Filtered' AND %BrowseLocatorFindAny)
%ThisObjectName.FloatRight = 1
    #END
  #ENDIF
#IF (%BrowseOrderStatement)
%ManagerName.AppendOrder(%(%StripPling(%BrowseOrderStatement))) #<! Append an additional sort order
#ENDIF
#!#IF (%BrowseFilterStatement)
#!%ManagerName.SetFilter(%(%StripPling(%BrowseFilterStatement)))
#!#ENDIF
  #IF(%GetBrowseFilter() <> '')
%ManagerName.SetFilter(%(%StripPling(%GetBrowseFilter())))      #<! Apply filter expression to browse
  #ENDIF
  #FOR (%BrowseResetField)
%ManagerName.AddResetField(%BrowseResetField)                   #<! Apply the reset field
  #ENDFOR
#ENDFOR
#EMBED(%BrowseAfterSortStatement,'Browse After the initialization'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),HIDE
#FOR(%IconList),WHERE(%IconListType <> 'Index' AND %IconListType <> 'VarIndex')
  #SET(%ValueConstruct,INSTANCE(%IconList))
  #IF(%IconListType = 'Built-In')
%ListControl{PROP:IconList,%ValueConstruct} = %IconList
  #ELSIF(%IconListType = 'Variable')
    #SET(%IconNameValue, SUB(%IconList, 2, LEN(%IconList) - 1))
%ListControl{PROP:IconList,%ValueConstruct} = %IconNameValue
  #ELSIF(%IconListType = 'File')
    #IF(SUB(%IconList,1,1) = '~')
%ListControl{PROP:IconList,%ValueConstruct} = '%IconList'
    #ELSE
%ListControl{PROP:IconList,%ValueConstruct} = '~%IconList'
    #ENDIF
  #ENDIF
#ENDFOR
#FIX(%Control,%ListControl)
#EMBED(%AddFieldsToBrowse),%ActiveTemplateInstance,HIDE
#PRIORITY(8510),DESCRIPTION('Setting up browse toolbar control')
#IF(%AcceptToolbarControl)
%ManagerName.AddToolbarTarget(Toolbar)                          #<! Browse accepts toolbar control
  #IF ( %HelpControl )
%ManagerName.ToolbarItem.HelpButton = %HelpControl
  #ENDIF
#ENDIF
#EMBED(%BrowseInit,'Browse Initialization'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
#ENDAT
#!
#!
#AT(%AddFieldsToBrowse, %ActiveTemplateInstance),PRIORITY(5000)
#FOR(%QueueField)
  #FIND(%Field,%QueueFieldAssignment)
  #FIND(%HotField,%QueueFieldAssignment,%HotFields)
  #IF (%Field OR %HotField AND ~%HotFieldBindOnly OR INLIST(%QueueFieldAssignment,%ControlField))
%ManagerName.AddField(%QueueFieldAssignment,%ManagerName.Q.%QueueField)  #<! Field %QueueFieldAssignment is a hot field or requires assignment from browse
  #ENDIF
#ENDFOR
#ENDAT
#!
#!--------------------------------------------------------------------------
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'ApplyRange','(),BYTE'),PRIORITY(4000),DESCRIPTION('Asign Higher Key Values based on browse conditions')
#INSERT(%GenerateHigherKeyCode)
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'ResetSort','(BYTE Force),BYTE'),PRIORITY(2500),DESCRIPTION('Select sort order based on browse conditions')
#EMBED(%BeforeControlRefresh,'Before Refresh Window for Browse Box'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
  #IF(ITEMS(%BrowseAccessID) > 1)
    #FOR(%BrowseAccessID)
      #IF(%BrowseAccessID = 1)
IF %BrowseCondition
      #ELSIF(%BrowseAccessID = ITEMS(%BrowseAccessID))
ELSE
      #ELSE
ELSIF %BrowseCondition
      #ENDIF
  RETURN SELF.SetSort(%BrowseAccessID,Force)
    #ENDFOR
END
  #ENDIF
#EMBED(%AfterControlRefresh,'After Refresh Window for Browse Box'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
#ENDAT
#!
#AT(%BrowserMethodDataSection,%ActiveTemplateInstance,'ResetFromView','()')
  #FOR(%BrowseTotals)
    #CASE(%BrowseTotalType)
    #OF('Count')
      #SET(%ValueConstruct,%BrowseTotalTarget & ':Cnt')
#?%[20]ValueConstruct LONG                                      #<! Count variable for browse totals
    #OF('Sum')
      #SET(%ValueConstruct,%BrowseTotalTarget & ':Sum')
#?%[20]ValueConstruct REAL                                      #<! Sum variable for browse totals
    #OF('Average')
      #SET(%ValueConstruct,%BrowseTotalTarget & ':Cnt')
#?%[20]ValueConstruct LONG                                      #<! Count for average for browse totals
      #SET(%ValueConstruct,%BrowseTotalTarget & ':Sum')
#?%[20]ValueConstruct REAL                                      #<! Sum for average for browse totals
    #ENDCASE
  #ENDFOR
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'ResetFromView','()'),PRIORITY(1000)
#?SETCURSOR(Cursor:Wait)
#?Relate:%Primary.SetQuickScan(1)
#EMBED(%StartInitializeBrowseRoutine,'Browser, Start of Initialize ROUTINE'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),HIDE,LEGACY
#?SELF.Reset
#PRIORITY(2000)
#EMBED(%BeforeTotalLoop,'Before Browse Total Loop'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
#IF(NOT %BrowseAllTotalOnOff)
#?IF %BrowseAllTotalOnOffCondition THEN
#ENDIF
#?LOOP
  #?CASE SELF.Next()
  #?OF Level:Notify
    #?BREAK
  #?OF Level:Fatal
    #?SETCURSOR()
    #?RETURN
  #?END
#PRIORITY(2500)
  #?SELF.SetQueueRecord
#PRIORITY(3000)
  #FOR(%BrowseTotals)
    #IF(%BrowseTotalCondition)
  IF (%BrowseTotalCondition)
      #CASE(%BrowseTotalType)
      #OF('Count')
    %BrowseTotalTarget:Cnt += 1
      #OF('Sum')
    %BrowseTotalTarget:Sum += %BrowseTotalField
      #OF('Average')
    %BrowseTotalTarget:Cnt += 1
    %BrowseTotalTarget:Sum += %BrowseTotalField
      #ENDCASE
  END
    #ELSE
      #CASE(%BrowseTotalType)
      #OF('Count')
  %BrowseTotalTarget:Cnt += 1
      #OF('Sum')
  %BrowseTotalTarget:Sum += %BrowseTotalField
      #OF('Average')
  %BrowseTotalTarget:Cnt += 1
  %BrowseTotalTarget:Sum += %BrowseTotalField
      #ENDCASE
    #ENDIF
  #ENDFOR
  #EMBED(%TotalLoop,'Browse Total Loop'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
#PRIORITY(3500)
#?END
#PRIORITY(4000)
#EMBED(%AfterTotalLoop,'After Browse Total Loop'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateinstanceDescription),LEGACY
  #FOR(%BrowseTotals)
    #CASE(%BrowseTotalType)
    #OF('Count')
%BrowseTotalTarget = %BrowseTotalTarget:Cnt
    #OF('Sum')
%BrowseTotalTarget = %BrowseTotalTarget:Sum
    #OF('Average')
%BrowseTotalTarget = %BrowseTotalTarget:Sum/%BrowseTotalTarget:Cnt
    #ENDCASE
  #ENDFOR
#PRIORITY(7500)
#IF(NOT %BrowseAllTotalOnOff)
#?END !Conditional Totaling
#ENDIF
#?Relate:%Primary.SetQuickScan(0)
#EMBED(%EndInitializeBrowseRoutine,'Browser, End of Initialize ROUTINE'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),HIDE,LEGACY
#?SETCURSOR()
#ENDAT
#!
#!
#!
#!----------------------------------------------------------------------
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall)
#ENDAT
#!
#AT(%LocatorMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall)
#ENDAT
#!
#AT(%StepManagerMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall)
#ENDAT
#!
#!
#AT(%LocalProcedures)
#FIX(%File,%Primary)
#FOR(%BrowseAccessID)
  #IF(%BrowseSortOrderInstance)
    #SELECT(%SortOrder,%BrowseSortOrderInstance)
    #CALL(%SetClassItem,'Step'&%SortOrder)
  #ELSE
    #CALL(%SetClassItem,'Step0')
  #ENDIF
  #IF(%BrowseKey)
    #IF(%LoadMethod = 'Page' AND %VerticalScrollBarFound AND %BrowseFreeElement AND %BrowseScrollBehavior = 'Movable Thumb')
      #IF(%BrowseScrollKeyDistribution='Custom')
        #SET(%ActualDefaultBaseClassType,%StepManagerCustomType)
      #ELSE
        #FIND(%Field,%BrowseFreeElement)
        #CASE (%FieldType)
        #OF ('STRING')
        #OROF ('CSTRING')
        #OROF ('PSTRING')
        #OROF ('GROUP')
          #SET(%ActualDefaultBaseClassType,%StepManagerStringType)
        #OF ('BYTE')
        #OROF ('SHORT')
        #OROF ('USHORT')
        #OROF ('LONG')
          #SET(%ActualDefaultBaseClassType,%StepManagerLongType)
        #ELSE
          #SET(%ActualDefaultBaseClassType,%StepManagerRealType)
        #ENDCASE
      #END
    #ENDIF
  #ENDIF
#ENDFOR
#!
#!
#DECLARE(%Terminator,LONG)
#CALL(%SetClassItem,'Default')
#INSERT(%MakeDeclr,24,%OOPConstruct,'Q','&'&%ListQueue)
#INSERT(%MakeDeclr,55,%OOPConstruct,%OOPConstruct,'!Reference to browse queue')
#ADD(%ClassLines,%OOPConstruct)
#!
#CALL(%GenerateVirtuals, 'Default', 'Local Objects|Abc Objects|Browse on ' & %Primary & ' using ' & %ListControl, '%BrowseVirtuals(ABC)')
#IF(%PrimaryKey AND %LocatorType NOT='None')
  #CALL(%GenerateVirtuals, 'Locator0', 'Local Objects|Abc Objects|Browse on ' & %Primary & ' using ' & %ListControl & ', default locator', '%DefaultLocatorVirtuals(ABC)')
#ENDIF
#FOR(%SortOrder),WHERE(%SortKey)
  #IF(%SortLocatorType <> 'None')
    #CALL(%GenerateVirtuals, 'Locator' & %SortOrder, 'Local Objects|Abc Objects|Browse on ' & %Primary & ' using ' & %ListControl & ', locator when ' & %SortCondition, '%LocatorVirtuals(ABC)')
  #ENDIF
#ENDFOR
#IF(%ScrollBehavior='Movable Thumb' AND %LoadMethod = 'Page' )
  #CALL(%GenerateVirtuals, 'Step0', 'Local Objects|Abc Objects|Browse on ' & %Primary & ' using ' & %ListControl & ', default thumb manager', '%DefaultThumbManagerVirtuals(ABC)')
#ENDIF
#FOR(%SortOrder),WHERE(%LoadMethod = 'Page')
  #IF(%SortScrollBehavior = 'Movable Thumb')
    #CALL(%GenerateVirtuals, 'Step' & %SortOrder, 'Local Objects|Abc Objects|Browse on ' & %Primary & ' using ' & %ListControl & ', thumb manager when ' & %SortCondition, '%ThumbManagerVirtuals(ABC)')
  #ENDIF
#ENDFOR
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'ResetQueue','(BYTE ResetMode)'),PRIORITY(6000)
#SUSPEND
#?IF RECORDS(SELF.ListQueue)
  #EMBED(%BrowseBoxNotEmpty,'Browser, records found'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#?ELSE
  #EMBED(%BrowseBoxEmpty,'Browser, no records found'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#?END
#RESUME
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'Fetch','(BYTE Direction)'),PRIORITY(2500)
#SUSPEND
#?IF Direction=FillForward
  #EMBED(%StartFillForwardRoutine,'Browser, Start of Fetch VIRTUAL for FillForward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
  #EMBED(%StartFetchRoutineForward,'Browser, Start of Fetch VIRTUAL, reading forward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#?ELSE
  #EMBED(%StartBackwardRoutine,'Browser, Start of FillRecord VIRTUAL for FillBackward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
  #EMBED(%StartFillRecordRoutineBackward,'Browser,Start of FillRecord VIRTUAL, reading backward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#?END
#RESUME
#PRIORITY(7500)
#SUSPEND
#?IF Direction=FillForward
  #EMBED(%EndOfFillForwardRoutine,'Browser, End of FillRecord VIRTUAL for FillForward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
  #EMBED(%EndFillRecordRoutineForward,'Browser, Start of FillRecord VIRTUAL, reading forward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#?ELSE
  #EMBED(%EndBackwardRoutine,'Browser, End of FillRecord VIRTUAL, reading backward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
  #EMBED(%EndFillRoutineBackward,'Browser, End of FillRecord VIRTUAL for FillBackward'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#?END
#RESUME
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'TakeKey','(),BYTE'),PRIORITY(2500)
#SUSPEND
#?IF RECORDS(SELF.ListQueue)
  #?CASE KEYCODE()
  #EMBED(%AlertKeyCaseKEYCODE,'Browser, TakeKey inside CASE KEYCODE()'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
  #?OF MouseLeft2
    #EMBED(%BrowseBoxDoubleClickHandler,'Browser, Double Click Handler'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
  #?END
#?END
#RESUME
#ENDAT
#!
#AT(%BrowserMethodDataSection,%ActiveTemplateInstance,'ValidateRecord','(),BYTE')
#CALL(%MakeDeclr,22,%OOPConstruct,%InstancePrefix&':RecordStatus','BYTE,AUTO')
#?%OOPConstruct
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'ValidateRecord','(),BYTE'),PRIORITY(5100)
#?%InstancePrefix:RecordStatus=ReturnValue
#SUSPEND
#INSERT(%StandardFormula,'Before range limits')
#EMBED(%RecordOutOfRange,'Browser, Validate Record: Range Checking'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
#?IF %InstancePrefix:RecordStatus NOT=Record:OK THEN RETURN %InstancePrefix:RecordStatus.
#INSERT(%StandardFormula,'Before filter')
#PRIORITY(8000)
#EMBED(%RecordFilter,'Validate Record: Filter Checking'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
#EMBED(%AfterRangeFilterCheck,'After range and filter check'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#?ReturnValue=%InstancePrefix:RecordStatus
#RESUME
#ENDAT
#!
#AT(%BrowserMethodDataSection,%ActiveTemplateInstance,'Fetch','(BYTE Direction)')
GreenBarIndex   LONG
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'Fetch','(BYTE Direction)'),PRIORITY(9500)
#INSERT(%BrowseRoutineFillGreenBar)
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(6000)
  #IF(%isSQL())
    #FOR(%SQLAssignments)
      #IF(SUB(%SQLViewFieldAssignment, 1, 1) = '!')
        #SET(%ValueConstruct, SLICE(%SQLViewFieldAssignment, 2 , LEN(CLIP(%SQLViewFieldAssignment))))
      #ELSE
        #SET(%ValueConstruct, CLIP(%SQLViewFieldAssignment))
        #IF(SUB(%SQLViewFieldAssignment, 1, 1) ~= '''')
          #SET(%ValueConstruct, '''' & %ValueConstruct)
        #ENDIF
        #IF(SUB(%SQLViewFieldAssignment, LEN(CLIP(%SQLViewFieldAssignment)), 1) ~= '''')
          #SET(%ValueConstruct, %ValueConstruct & '''')
        #ENDIF
      #END
v{'%SQLViewField', PROP:Name} = %ValueConstruct
    #ENDFOR
    #IF(%SQLHasGroupBy)
      #IF(SUB(%SQLGrouping, 1, 1) = '!')
        #SET(%ValueConstruct, SLICE(%SQLGrouping, 2, LEN(CLIP(%SQLGrouping))))
      #ELSE
        #SET(%ValueConstruct, %SQLGrouping)
        #IF(SUB(%SQLGrouping, 1, 1) ~= '''')
          #SET(%ValueConstruct, '''' & %ValueConstruct)
        #ENDIF
        #IF(SUB(%SQLGrouping, LEN(CLIP(%SQLGrouping)), 1) ~= '''')
          #SET(%ValueConstruct, %ValueConstruct & '''')
        #ENDIF
      #ENDIF
v{PROP:GroupBy} = %ValueConstruct
      #IF(%SQLHasHaving)
        #IF(SUB(%SQLHas, 1, 1) = '!')
          #SET(%ValueConstruct, SLICE(%SQLHas, 2, LEN(CLIP(%SQLHas))))
        #ELSE
          #SET(%ValueConstruct, %SQLHas)
          #IF(SUB(%SQLHas, 1, 1) ~= '''')
            #SET(%ValueConstruct, '''' & %ValueConstruct)
          #ENDIF
          #IF(SUB(%SQLHas, LEN(CLIP(%SQLhas)), 1) ~= '''')
            #SET(%ValueConstruct, %ValueConstruct & '''')
          #ENDIF
        #ENDIF
v{PROP:Having} = %ValueConstruct
      #ENDIF
    #ENDIF
  #ENDIF
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'SetQueueRecord','()'),PRIORITY(2500)
#SUSPEND
#FOR(%Formula),WHERE(%FormulaClass='Format Browse' AND %FormulaInstance=0)
  #ERROR(%Formula&' formula is disconnected from browse. Please reselect browse instance!')
#ENDFOR
#FOR(%Formula),WHERE(%FormulaInstance=%ActiveTemplateInstance AND %FormulaClass='Format Browse')         #!Attempt to expand formula
#INSERT(%ExpandFormula,1)
#ENDFOR
#EMBED(%FormatBrowse,'Browser, Format an element of the queue'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#PRIORITY(6000)
#FIX(%Control,%ListControl)
#IF(%Control <> %ListControl)
  #ERROR('List box control not found!')
  #ABORT
#ENDIF

#IF(%UseSameColorForAll=%True)
    #IF(ITEMS(%ConditionalColorsAll) AND %AllControlGreenBarColor=%False)
#SUSPEND
      #FOR(%ConditionalColorsAll)
        #IF(INSTANCE(%ConditionalColorsAll) = 1)
#?IF (%ColorConditionAll)
        #ELSE
#?ELSIF (%ColorConditionAll)
        #ENDIF
           #FOR(%QueueField)
             #FIX(%ControlField,%QueueFieldAssignment)
             #SET(%ValueConstruct,%QueueField)
             #IF(%QueueFieldHasColor)
  SELF.Q.%ValueConstruct_NormalFG = %ConditionalAllControlFieldForegroundNormal    #<! Set conditional color values for %QueueField
  SELF.Q.%ValueConstruct_NormalBG = %ConditionalAllControlFieldBackgroundNormal
  SELF.Q.%ValueConstruct_SelectedFG = %ConditionalAllControlFieldForegroundSelected
  SELF.Q.%ValueConstruct_SelectedBG = %ConditionalAllControlFieldBackgroundSelected
             #ENDIF
           #ENDFOR
      #ENDFOR
#?ELSE
       #FOR(%QueueField)
         #FIX(%ControlField,%QueueFieldAssignment)
         #SET(%ValueConstruct,%QueueField)
         #IF(%QueueFieldHasColor)
  SELF.Q.%ValueConstruct_NormalFG = %AllControlFieldForegroundNormal               #<! Set color values for %QueueField
  SELF.Q.%ValueConstruct_NormalBG = %AllControlFieldBackgroundNormal
  SELF.Q.%ValueConstruct_SelectedFG = %AllControlFieldForegroundSelected
  SELF.Q.%ValueConstruct_SelectedBG = %AllControlFieldBackgroundSelected
         #ENDIF
       #ENDFOR
#?END
#RESUME
    #ELSE
       #FOR(%QueueField)
         #FIX(%ControlField,%QueueFieldAssignment)
         #SET(%ValueConstruct,%QueueField)
         #IF(%QueueFieldHasColor)
            #IF(NOT %AllControlGreenBarColor)
SELF.Q.%ValueConstruct_NormalFG = %AllControlFieldForegroundNormal               #<! Set color values for %QueueField
SELF.Q.%ValueConstruct_NormalBG = %AllControlFieldBackgroundNormal
SELF.Q.%ValueConstruct_SelectedFG = %AllControlFieldForegroundSelected
SELF.Q.%ValueConstruct_SelectedBG = %AllControlFieldBackgroundSelected
            #ENDIF
         #ENDIF
       #ENDFOR
    #ENDIF
#ENDIF
#IF(%UseSameStyleForAll=%True)
    #IF(ITEMS(%ConditionalStylesAll) AND %AllControlGreenBarStyle=%False)
#SUSPEND
      #FOR(%ConditionalStylesAll)
        #IF(INSTANCE(%ConditionalStylesAll) = 1)
#?IF (%StyleConditionAll)
        #ELSE
#?ELSIF (%StyleConditionAll)
        #ENDIF
           #FOR(%QueueField)
             #FIX(%ControlField,%QueueFieldAssignment)
             #SET(%ValueConstruct,%QueueField)
             #IF(%QueueFieldHasStyle)
  SELF.Q.%ValueConstruct_Style = %(%GetStyleNumber(%ConditionalAllControlFieldStyleType,%ConditionalAllControlFieldStyle,%ConditionalAllControlFieldStyleLocalList)) ! %ConditionalAllControlFieldStyle
             #ENDIF
           #ENDFOR
      #ENDFOR
#?ELSE
       #FOR(%QueueField)
         #FIX(%ControlField,%QueueFieldAssignment)
         #SET(%ValueConstruct,%QueueField)
         #IF(%QueueFieldHasStyle)
  SELF.Q.%ValueConstruct_Style = %(%GetStyleNumber(%AllControlFieldStyleType,%AllControlFieldStyle,%AllControlFieldStyleLocalList)) ! %AllControlFieldStyle
         #ENDIF
       #ENDFOR
#?END
#RESUME
    #ELSE
       #FOR(%QueueField)
         #FIX(%ControlField,%QueueFieldAssignment)
         #SET(%ValueConstruct,%QueueField)
         #IF(%QueueFieldHasStyle)
            #IF(NOT %AllControlGreenBarStyle)
SELF.Q.%ValueConstruct_Style = %(%GetStyleNumber(%AllControlFieldStyleType,%AllControlFieldStyle,%AllControlFieldStyleLocalList)) ! %AllControlFieldStyle
            #ENDIF
         #ENDIF
       #ENDFOR
    #ENDIF
#ENDIF
#FOR(%QueueField)
  #FIX(%ControlField,%QueueFieldAssignment)
  #SET(%ValueConstruct,%QueueField)
  #IF(%QueueFieldHasColor AND %UseSameColorForAll=%False)
    #IF(ITEMS(%ConditionalColors) AND %ControlGreenBarColor=%False)
      #FOR(%ConditionalColors)
        #IF(INSTANCE(%ConditionalColors) = 1)
IF (%ColorCondition)
        #ELSE
ELSIF (%ColorCondition)
        #ENDIF
  SELF.Q.%ValueConstruct_NormalFG = %ConditionalControlFieldForegroundNormal    #<! Set conditional color values for %QueueField
  SELF.Q.%ValueConstruct_NormalBG = %ConditionalControlFieldBackgroundNormal
  SELF.Q.%ValueConstruct_SelectedFG = %ConditionalControlFieldForegroundSelected
  SELF.Q.%ValueConstruct_SelectedBG = %ConditionalControlFieldBackgroundSelected
      #ENDFOR
ELSE
  SELF.Q.%ValueConstruct_NormalFG = %ControlFieldForegroundNormal                #<! Set color values for %QueueField
  SELF.Q.%ValueConstruct_NormalBG = %ControlFieldBackgroundNormal
  SELF.Q.%ValueConstruct_SelectedFG = %ControlFieldForegroundSelected
  SELF.Q.%ValueConstruct_SelectedBG = %ControlFieldBackgroundSelected
END
    #ELSE
       #IF(NOT %ControlGreenBarColor)
SELF.Q.%ValueConstruct_NormalFG = %ControlFieldForegroundNormal                 #<! Set color values for %QueueField
SELF.Q.%ValueConstruct_NormalBG = %ControlFieldBackgroundNormal
SELF.Q.%ValueConstruct_SelectedFG = %ControlFieldForegroundSelected
SELF.Q.%ValueConstruct_SelectedBG = %ControlFieldBackgroundSelected
       #ENDIF
    #ENDIF
  #ENDIF
  #IF(%QueueFieldHasIcon)
    #IF(ITEMS(%ConditionalIcons))
      #FOR(%ConditionalIcons)
        #IF(INSTANCE(%ConditionalIcons) = 1)
IF (%IconCondition)
        #ELSE
ELSIF (%IconCondition)
        #ENDIF
        #FIX(%IconList,%ConditionalControlFieldIcon)
        #IF(%IconList)
          #CASE(%IconListType)
          #OF('Index')
  SELF.Q.%ValueConstruct_Icon = %IconList
          #OF('VarIndex')
            #SET(%IconNameValue, SUB(%IconList, 2, LEN(%IconList) - 1))
  SELF.Q.%ValueConstruct_Icon = %IconNameValue
          #ELSE
  SELF.Q.%ValueConstruct_Icon = %(INSTANCE(%IconList))          #<! Set icon from icon list
          #ENDCASE
        #ELSE
  SELF.Q.%ValueConstruct_Icon = 0
        #ENDIF
      #ENDFOR
ELSE
      #FIX(%IconList,%ControlFieldIcon)
      #IF(%IconList)
        #CASE(%IconListType)
        #OF('Index')
  SELF.Q.%ValueConstruct_Icon = %IconList
        #OF('VarIndex')
          #SET(%IconNameValue, SUB(%IconList, 2, LEN(%IconList) - 1))
  SELF.Q.%ValueConstruct_Icon = %IconNameValue
        #ELSE
  SELF.Q.%ValueConstruct_Icon = %(INSTANCE(%IconList))          #<! Set icon from icon list
        #ENDCASE
      #ELSE
  SELF.Q.%ValueConstruct_Icon = 0
      #ENDIF
END
    #ELSE
      #FIX(%IconList,%ControlFieldIcon)
      #IF(%IconList)
        #CASE(%IconListType)
        #OF('Index')
  SELF.Q.%ValueConstruct_Icon = %IconList
        #OF('VarIndex')
          #SET(%IconNameValue, SUB(%IconList, 2, LEN(%IconList) - 1))
  SELF.Q.%ValueConstruct_Icon = %IconNameValue
        #ELSE
SELF.Q.%ValueConstruct_Icon = %(INSTANCE(%IconList))            #<! Set icon from icon list
        #ENDCASE
      #ELSE
SELF.Q.%ValueConstruct_Icon = 0
      #ENDIF
    #ENDIF
  #ENDIF
  #IF(%QueueFieldHasStyle AND %UseSameStyleForAll=%False)
    #IF(ITEMS(%ConditionalStyles) AND %ControlGreenBarStyle=%False)
      #FOR(%ConditionalStyles)
        #IF(INSTANCE(%ConditionalStyles) = 1)
IF (%StyleCondition)
        #ELSE
ELSIF (%StyleCondition)
        #ENDIF
  SELF.Q.%ValueConstruct_Style = %(%GetStyleNumber(%ConditionalControlFieldStyleType,%ConditionalControlFieldStyle,%ConditionalControlFieldStyleLocalList)) ! %ConditionalControlFieldStyle
      #ENDFOR
ELSE
  SELF.Q.%ValueConstruct_Style = %(%GetStyleNumber(%ControlFieldStyleType,%ControlFieldStyle,%ControlFieldStyleLocalList)) ! %ControlFieldStyle
END
    #ELSE
       #IF(NOT %ControlGreenBarStyle)
SELF.Q.%ValueConstruct_Style = %(%GetStyleNumber(%ControlFieldStyleType,%ControlFieldStyle,%ControlFieldStyleLocalList)) ! %ControlFieldStyle
       #ENDIF
    #ENDIF
  #ENDIF
  #IF(%QueueFieldHasTip)
    #IF(%ControlFieldTipField)
SELF.Q.%ValueConstruct_Tip = %ControlFieldTipField
    #ELSE
CLEAR (SELF.Q.%ValueConstruct_Tip)
    #ENDIF
  #ENDIF
#ENDFOR
#EMBED(%EndOfFormatBrowse,'End of Format an element of the browse queue'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription),LEGACY
#FOR(%QueueField),WHERE(INLIST(%QueueFieldAssignment,%Formula))
  #FOR(%Formula),WHERE(%Formula=%QueueFieldAssignment)
    #IF(%FormulaInstance=%ActiveTemplateInstance AND %FormulaClass='Format Browse' AND INLIST(%Formula,%LocalData))
SELF.Q.%QueueField = %Formula        #<!Assign formula result to display queue
    #ENDIF
  #ENDFOR
#ENDFOR
#INSERT(%BrowseRoutineFillGreenBar,%True)
#RESUME
#ENDAT
#!
#!
#AT(%LocalDataClasses)
#!
#INSERT(%GenerateClass, 'Default', 'Browse using '&%ListControl)
#IF(%PrimaryKey AND %LocatorType AND %LocatorType NOT='None')
#INSERT(%GenerateClass, 'Locator0', 'Default Locator')
#ENDIF
#FOR(%SortOrder),WHERE(%SortKey AND %SortLocatorType AND %SortLocatorType NOT='None')
#INSERT(%GenerateClass, 'Locator' & %SortOrder, 'Conditional Locator - '&%SortCondition)
#ENDFOR
#!FOR(%BrowseAccessId),WHERE(%BrowseScrollBehavior='Movable Thumb')
#!IF ( %BrowseSortOrderInstance )
#!INSERT(%GenerateClass, 'Step'&%BrowseSortOrderInstance, 'Step Manager - '&%BrowseCondition)
#!ELSE
#!INSERT(%GenerateClass, 'Step0', 'Step Manager - Default')
#!ENDIF
#IF(%ScrollBehavior='Movable Thumb' AND %LoadMethod = 'Page')
#INSERT(%GenerateClass, 'Step0', 'Default Step Manager')
#ENDIF
#FOR(%SortOrder),WHERE(%SortScrollBehavior='Movable Thumb' AND %LoadMethod = 'Page')
#INSERT(%GenerateClass, 'Step' & %SortOrder, 'Conditional Step Manager - '&%SortCondition)
#ENDFOR
#!
#!
#MESSAGE('BrowseBox Control Declarations',3)
#ENDAT
#!
#!-------------------------------------------------------------------------
#!
#!
#! Sort Header
#!
#!
#AT(%CustomModuleDeclarations),WHERE(%EnableSortHeader)
#ADD(%ModuleIncludeList,'BRWEXT.INC')
#ENDAT
#!
#AT(%DataSection),PRIORITY(5000),WHERE(%EnableSortHeader OR (%GlobalEnableListFormatManager AND NOT %DisableListFormatManager))
%('BRW' & %ActiveTemplateInstance&'::LastSortOrder')       BYTE
#ENDAT
#AT(%DataSection),PRIORITY(5050),WHERE(%EnableSortHeader)
%('BRW' & %ActiveTemplateInstance&'::SortHeader')  CLASS(SortHeaderClassType) !Declare SortHeader Class
QueueResorted          PROCEDURE(STRING pString),VIRTUAL
#FIX(%Control,%ListControl)
#FOR(%ControlField),WHERE(%ControlFieldSortHeaderOverride)
ValidField             PROCEDURE(STRING pColumnName),BYTE,VIRTUAL
   #BREAK
#ENDFOR
#FOR(%ControlField),WHERE(%ControlFieldSortHeaderOverride AND ITEMS(%ControlFieldSortHeaderFields))
GetSortingColumnString PROCEDURE(STRING pSign,STRING pColumnName,STRING pColumnPicture),STRING,VIRTUAL
   #BREAK
#ENDFOR
                  END
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(9600),WHERE(%EnableSortHeader)
!Initialize the Sort Header using the Browse Queue and Browse Control
#IF(%isSQL())
%('BRW' & %ActiveTemplateInstance&'::SortHeader').Init(%ListQueue,%ListControl,'','',%ListView,%(%SVSearchUniqueKey(%Primary)))
#ELSE
%('BRW' & %ActiveTemplateInstance&'::SortHeader').Init(%ListQueue,%ListControl,'','',%ListView)
#ENDIF
#IF(%ControlFieldSortHeaderSave)
    #IF(%INIType='NVD_INI')
%('BRW' & %ActiveTemplateInstance&'::SortHeader').SetStorageSettings('%'INIFileName','%'Procedure')
    #ELSE
%('BRW' & %ActiveTemplateInstance&'::SortHeader').SetStorageSettings(%REGRoot,'%'ININame'&'\'&'%'Procedure')
    #ENDIF
#ENDIF
#ENDAT
#AT(%WindowManagerMethodCodeSection,'SetAlerts','()'),PRIORITY(6500),WHERE(%EnableSortHeader)
!Initialize the Sort Header using the Browse Queue and Browse Control
%('BRW' & %ActiveTemplateInstance&'::SortHeader').SetAlerts()
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Kill','(),BYTE'),PRIORITY(6500),WHERE(%EnableSortHeader)
#!!Clear the sort and Restore the Header
#!%('BRW' & %ActiveTemplateInstance&'::SortHeader').ClearSort()
!Kill the Sort Header
%('BRW' & %ActiveTemplateInstance&'::SortHeader').Kill()
#ENDAT
#AT(%WindowManagerMethodCodeSection,'TakeEvent','(),BYTE'),PRIORITY(3500),WHERE(%EnableSortHeader)
!Take Sort Headers Events
IF %('BRW' & %ActiveTemplateInstance&'::SortHeader').TakeEvents()
   RETURN Level:Notify
END
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'SetSort','(BYTE NewOrder,BYTE Force),BYTE'),PRIORITY(5500),WHERE(%EnableSortHeader)
IF %('BRW' & %ActiveTemplateInstance&'::LastSortOrder')<>NewOrder THEN
   %('BRW' & %ActiveTemplateInstance&'::SortHeader').ClearSort()
END
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'SetSort','(BYTE NewOrder,BYTE Force),BYTE'),PRIORITY(7550),WHERE(%EnableSortHeader AND %ControlFieldSortHeaderSave)
IF %('BRW' & %ActiveTemplateInstance&'::LastSortOrder')=0 THEN
   %('BRW' & %ActiveTemplateInstance&'::LastSortOrder')=NewOrder
   %('BRW' & %ActiveTemplateInstance&'::SortHeader').LoadSort()
END
#ENDAT
#AT(%LocalProcedures),PRIORITY(8500),WHERE(%EnableSortHeader),AUTO
#DECLARE(%RetVal)
#DECLARE(%pStringContent)
#DECLARE(%lSortLocator),MULTI
#DECLARE(%lSortCondition,%lSortLocator)
#DECLARE(%lSortLocatorFiltered,%lSortLocator)
#DECLARE(%lPrimarySortLocator)
#DECLARE(%lPrimarySortLocatorFiltered)
#FIX(%Control,%ListControl)
#FOR(%SortOrder),WHERE(%SortKey AND %SortLocatorType AND %SortLocatorType NOT='None')
    #CALL(%SetClassItem,'Locator'&%SortOrder)
    #ADD(%lSortLocator,%ThisObjectName)
    #SET(%lSortCondition,%SortCondition)
    #IF(%SortLocatorType = 'Filtered')
        #SET(%lSortLocatorFiltered,1)
    #ELSE
        #SET(%lSortLocatorFiltered,0)
    #ENDIF
#ENDFOR
#SET(%lPrimarySortLocator,'')
#SET(%lPrimarySortLocatorFiltered,0)
#IF(%PrimaryKey)
  #IF(%LocatorType AND %LocatorType NOT='None')
#CALL(%SetClassItem,'Locator0')
#IF(NOT %ThisObjectName)
    #CALL(%SetClassItem,'Step0')
#ENDIF
#SET(%lPrimarySortLocator,%ThisObjectName)
    #IF(%LocatorType = 'Filtered')
        #SET(%lPrimarySortLocatorFiltered,1)
    #ELSE
        #SET(%lPrimarySortLocatorFiltered,0)
    #ENDIF
  #ENDIF
#ENDIF
%('BRW' & %ActiveTemplateInstance&'::SortHeader').QueueResorted       PROCEDURE(STRING pString)
  CODE
    IF pString = ''
       #FOR(%lSortLocator)
          #IF(%lSortLocatorFiltered)
          %lSortLocator.UseFreeElementOnly = True
          #ENDIF
       #ENDFOR
       #IF(%lPrimarySortLocator)
            #IF(%lPrimarySortLocatorFiltered)
       %lPrimarySortLocator.UseFreeElementOnly = True
            #ENDIF
       #ENDIF
       %ManagerName.RestoreSort()
       %ManagerName.ResetSort(True)
    ELSE
       #SET(%pStringContent,'pString')
       #IF(ITEMS(%lSortLocator))
          #FOR(%lSortLocator)
             #IF(INSTANCE(%lSortLocator)=1)
       IF %lSortCondition
             #ELSE
       ELSIF %lSortCondition
             #ENDIF
          #IF(%lSortLocatorFiltered)
          %lSortLocator.UseFreeElementOnly = False
          #ENDIF
          %ManagerName.ReplaceSort(%pStringContent,%lSortLocator)
          %ManagerName.SetLocatorFromSort()
          #IF(%lSortLocatorFiltered)
          %ManagerName.ResetFromBuffer()
          #ENDIF
          #ENDFOR
       ELSE
          #IF(%lPrimarySortLocator)
            #IF(%lPrimarySortLocatorFiltered)
          %lPrimarySortLocator.UseFreeElementOnly = False
            #ENDIF
          %ManagerName.ReplaceSort(%pStringContent,%lPrimarySortLocator)
          %ManagerName.SetLocatorFromSort()
            #IF(%lPrimarySortLocatorFiltered)
          %ManagerName.ResetFromBuffer()
            #ENDIF
          #ELSE
          %ManagerName.ReplaceSort(%pStringContent)
          #ENDIF
       #ELSE
          #IF(%lPrimarySortLocator)
       %ManagerName.ReplaceSort(%pStringContent,%lPrimarySortLocator)
       %ManagerName.SetLocatorFromSort()
            #IF(%lPrimarySortLocatorFiltered)
       %ManagerName.ResetFromBuffer()
            #ENDIF
          #ELSE
       %ManagerName.ReplaceSort(%pStringContent)
          #ENDIF
       #ENDIF
       #IF(ITEMS(%lSortLocator))
       END
       #ENDIF
    END
#FREE(%lSortLocator)
#!
#!
#FIX(%Control,%ListControl)
#SUSPEND
#?%Null
#?%Null
#?%('BRW' & %ActiveTemplateInstance&'::SortHeader').ValidField             PROCEDURE(STRING pColumnName)
 #?CODE
    #?CASE(UPPER(pColumnName))
#FOR(%ControlField),WHERE(%ControlFieldSortHeaderOverride)
    #RELEASE
    #BREAK
#ENDFOR
#FOR(%ControlField),WHERE(%ControlFieldSortHeaderOverride)
    #?OF '%'(UPPER(%ControlField))'
#IF(%ControlFieldSortHeaderDisableColumn OR ITEMS(%ControlFieldSortHeaderFields)=0)
       RETURN False
#ELSE
       RETURN True
#ENDIF
#ENDFOR
    #?END
    #?RETURN PARENT.ValidField(pColumnName)
#RESUME
#!
#!
#SUSPEND
#?%Null
#?%Null
#?%('BRW' & %ActiveTemplateInstance&'::SortHeader').GetSortingColumnString PROCEDURE(STRING pSign,STRING pColumnName,STRING pColumnPicture)
 #?CODE
    #?CASE(UPPER(pColumnName))
#FOR(%ControlField),WHERE(%ControlFieldSortHeaderOverride AND NOT %ControlFieldSortHeaderDisableColumn)
    #RELEASE
    #BREAK
#ENDFOR
#FOR(%ControlField),WHERE(%ControlFieldSortHeaderOverride AND NOT %ControlFieldSortHeaderDisableColumn)
    #?OF '%'(UPPER(%ControlField))'
#IF(ITEMS(%ControlFieldSortHeaderFields))
    #SET(%RetVal,'')
    #FOR(%ControlFieldSortHeaderFields)
       #IF(%ControlFieldSortHeaderField)
           #FIND(%QueueFieldAssignment,%ControlFieldSortHeaderField)
           #IF(NOT %QueueFieldAssignment)
               #ERROR(%Procedure&':The field "'&%ControlFieldSortHeaderField&'" should be in the listbox or defined as a hot field.')
           #ENDIF
       #ENDIF
       #IF(INSTANCE(%ControlFieldSortHeaderFields)>1)
         #SET(%RetVal,CLIP(%RetVal)&',')
       #ENDIF
       #SET(%RetVal,CLIP(%RetVal)&'''&CHOOSE(pSign=''+'',')
       #SET(%RetVal,CLIP(%RetVal)&''''&%ControlFieldSortHeaderFieldOrder&''',')
       #IF(%ControlFieldSortHeaderFieldOrder='+')
          #SET(%RetVal,CLIP(%RetVal)&'''-''')
       #ELSE
          #SET(%RetVal,CLIP(%RetVal)&'''+''')
       #ENDIF
       #SET(%RetVal,CLIP(%RetVal)&')&''')
       #IF(%ControlFieldSortHeaderFieldCase)
          #SET(%RetVal,CLIP(%RetVal)& %ControlFieldSortHeaderField)
       #ELSE
          #SET(%RetVal,CLIP(%RetVal)&'UPPER(' &%ControlFieldSortHeaderField&')')
       #ENDIF
       #!CALL(%AddFieldToBindToList,%ControlFieldSortHeaderField)
    #ENDFOR
       RETURN '%RetVal'
#ENDIF
#ENDFOR
    #?END
    #?RETURN PARENT.GetSortingColumnString(pSign,pColumnName,pColumnPicture)
#RESUME
#ENDAT
#AT(%BeforeGenereteAutoBind)
   #FOR(%ControlField),WHERE(%ControlFieldSortHeaderOverride AND NOT %ControlFieldSortHeaderDisableColumn)
       #IF(ITEMS(%ControlFieldSortHeaderFields))
          #FOR(%ControlFieldSortHeaderFields)
             #CALL(%AddFieldToBindToList,%ControlFieldSortHeaderField)
          #ENDFOR
       #ENDIF
   #ENDFOR
#ENDAT
#!
#AT(%ListFormatManagerPopupRecordsBeforeDispatchChoice,%ActiveTemplateInstance),PRIORITY(5000),WHERE(%EnableSortHeader)
%('BRW' & %ActiveTemplateInstance&'::SortHeader').RestoreHeaderText()
%ManagerName.RestoreSort()
#ENDAT
#AT(%ListFormatManagerPopupRecordsSelected,%ActiveTemplateInstance),PRIORITY(5000),WHERE(%EnableSortHeader)
%('BRW' & %ActiveTemplateInstance&'::SortHeader').ResetSort()
#!%BrowseObjectName.RestoreSort()
#ENDAT
#AT(%ListFormatManagerPopupRecordsSelectedElse,%ActiveTemplateInstance),PRIORITY(5000),WHERE(%EnableSortHeader)
%('BRW' & %ActiveTemplateInstance&'::SortHeader').SortQueue()
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'SetSort','(BYTE NewOrder,BYTE Force),BYTE'),PRIORITY(7600),WHERE(%EnableSortHeader OR (%GlobalEnableListFormatManager AND NOT %DisableListFormatManager))
%('BRW' & %ActiveTemplateInstance&'::LastSortOrder')=NewOrder
#ENDAT
#!
#!
#!----------------------------------------------------------------------------
#!
#GROUP(%BrowseVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%BrowserMethodDataSection,'Browser Method Data Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,LABEL,DATA,PREPARE(,%FixClassName(%FixBaseClassToUse('Default'))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%BrowserMethodCodeSection,'Browser Method Code Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,PREPARE(,%FixClassName(%FixBaseClassToUse('Default'))),TREE(%TreeText & %CodeText)
#!
#!
#GROUP(%DefaultLocatorVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%LocatorMethodDataSection,'Locator Method Data Section'),%ActiveTemplateInstance,''['Locator Default'],%pClassMethod,%pClassMethodPrototype,LABEL,DATA,PREPARE(,,%FixClassName(%FixBaseClassToUse('Locator0'))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%LocatorMethodCodeSection,'Locator Method Executable Code Section'),%ActiveTemplateInstance,''['Locator Default'],%pClassMethod,%pClassMethodPrototype,PREPARE(,,%FixClassName(%FixBaseClassToUse('Locator0'))),TREE(%TreeText & %CodeText)
#!
#!
#GROUP(%LocatorVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%LocatorMethodDataSection,'Locator Method Data Section'),%ActiveTemplateInstance,%SortOrder['Locator Condition: '&%SortCondition],%pClassMethod,%pClassMethodPrototype,PREPARE(,,%FixClassName(%FixBaseClassToUse('Locator'&%SortOrder))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%LocatorMethodCodeSection,'Locator Method Executable Code Section'),%ActiveTemplateInstance,%SortOrder['Locator Condition: '&%SortCondition],%pClassMethod,%pClassMethodPrototype,PREPARE(,,%FixClassName(%FixBaseClassToUse('Locator'&%SortOrder))),TREE(%TreeText & %CodeText)
#!
#!
#GROUP(%DefaultThumbManagerVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%StepManagerMethodDataSection,'Step Manager Method Data Section'),%ActiveTemplateInstance,''['Step Class Default'],%pClassMethod,%pClassMethodPrototype,LABEL,DATA,PREPARE(,,%FixClassName(%FixBaseClassToUse('Step0'))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%StepManagerMethodCodeSection,'Step Manager Method Executable Code Section'),%ActiveTemplateInstance,''['Step Class Default'],%pClassMethod,%pClassMethodPrototype,PREPARE(,,%FixClassName(%FixBaseClassToUse('Step0'))),TREE(%TreeText & %CodeText)
#!
#!
#GROUP(%ThumbManagerVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%StepManagerMethodDataSection,'Step Manager Method Executable Data Section'),%ActiveTemplateInstance,%SortOrder['Step Class Condition: '&%SortCondition],%pClassMethod,%pClassMethodPrototype,PREPARE(,,%FixClassName(%FixBaseClassToUse('Step'&%SortOrder))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%StepManagerMethodCodeSection,'Step Manager Executable Code Section'),%ActiveTemplateInstance,%SortOrder['Step Class Condition: '&%SortCondition],%pClassMethod,%pClassMethodPrototype,PREPARE(,,%FixClassName(%FixBaseClassToUse('Step'&%SortOrder))),TREE(%TreeText & %CodeText)
#!
#!
#!
#!
#GROUP(%AddBrowseIcon,%CurrentIcon,%IsNumber=%False)
#ADD(%IconList,%CurrentIcon)
#IF(UPPER(SUB(%CurrentIcon,1,5)) = 'ICON:')
  #SET(%IconListType,'Built-In')
#ELSIF(NUMERIC(%CurrentIcon))
  #SET(%IconListType,'Index')
#ELSIF(SUB(%CurrentIcon,1,1) <> '!')
  #SET(%IconListType,'File')
#ELSIF(%IsNumber)
  #SET(%IconListType,'VarIndex')
#ELSE
  #SET(%IconListType,'Variable')
#ENDIF
#!-------------------------------------------------------------------------
#GROUP(%ConstructQueue)
  #DECLARE(%Lb,LONG)
  #DECLARE(%QFieldType)
  #DECLARE(%QFieldTipComment)
  #DECLARE(%LocAnyHasColor)
  #SET(%LocAnyHasColor,0)
  #INSERT(%MakeDeclr,22,%OOPConstruct,%ListQueue,'QUEUE')
%[53]OOPConstruct !Queue declaration for browse/combo box using %ListControl
  #FIND(%ModuleProcedure, %Procedure)
  #FOR(%QueueField)
    #SET(%Lb, INSTRING('[', %QueueFieldAssignment, 1, 1))
    #IF(%Lb > 0)
      #SET(%QFieldType, %GetQueueDataType(SLICE(%QueueFieldAssignment, 1, %Lb - 1), %QueueFieldComment))
    #ELSE
      #SET(%QFieldType, %GetQueueDataType(%QueueFieldAssignment, %QueueFieldComment))
    #ENDIF
    #EMBED(%AfterCalculatingQueueDataType, ''),%ActiveTemplateInstance, %QueueField,HIDE
#INSERT(%MakeField, %QueueField, '', %QFieldType, %QueueFieldComment)
    #IF(%QueueFieldHasColor)
       #SET(%LocAnyHasColor,1)
#INSERT(%MakeField, %QueueField, 'NormalFG', 'LONG', 'Normal forground color')
#INSERT(%MakeField, %QueueField, 'NormalBG', 'LONG', 'Normal background color')
#INSERT(%MakeField, %QueueField, 'SelectedFG', 'LONG', 'Selected forground color')
#INSERT(%MakeField, %QueueField, 'SelectedBG', 'LONG', 'Selected background color')
    #ENDIF
    #IF(%QueueFieldHasIcon)
#INSERT(%MakeField, %QueueField, 'Icon', 'LONG', 'Entry''s icon ID')
    #ENDIF
    #IF(%QueueFieldHasTree)
#INSERT(%MakeField, %QueueField, 'Level', 'LONG', 'Tree level')
    #ENDIF
    #IF(%QueueFieldHasStyle)
#INSERT(%MakeField, %QueueField, 'Style', 'LONG', 'Field style')
    #ENDIF
    #IF(%QueueFieldHasTip)
      #FIX(%ControlField,%QueueFieldAssignment)
      #SET(%QFieldTipComment, 'Field tooltip')
      #IF(%ControlFieldTipField)
        #SET(%Lb, INSTRING('[', %ControlFieldTipField, 1, 1))
        #IF(%Lb > 0)
          #SET(%QFieldType, %GetQueueDataType(SLICE(%ControlFieldTipField, 1, %Lb - 1), %QFieldTipComment))
        #ELSE
          #SET(%QFieldType, %GetQueueDataType(%ControlFieldTipField, %QFieldTipComment))
        #ENDIF
      #ELSE
        #SET(%QFieldType, 'STRING(80)')
      #ENDIF
#INSERT(%MakeField, %QueueField, 'Tip', %QFieldType, %QFieldTipComment)
    #ENDIF
  #ENDFOR
#INSERT(%MakeField, 'Mark', '', 'BYTE' ,'Entry''s marked status')
#INSERT(%MakeField, 'ViewPosition', '', 'STRING(1024)','Entry''s view position')
%[20]NULL END
#!---------------------------------------------------------
#GROUP(%MakeField, %Lbl, %PostFix, %dType, %Cmt)
  #CALL(%MakeDeclr, 24, %OOPConstruct, %Lbl & CHOOSE(%PostFix = '', '', '_' & %PostFix), %dType)
  #IF(%Cmt <> '')
    #CALL(%MakeDeclr, 55, %OOPConstruct, %OOPConstruct, '!' & %Cmt)
  #ENDIF
%OOPConstruct
#!---------------------------------------------------------------------
#GROUP(%SetupBrowseBehavior)
#EMBED(%TopOfSetupBrowseBehavior,'INTERNAL Top of SetupBrowseBehavior GROUP'),HIDE
#DECLARE(%BrowseFreeElementFound)
#DECLARE(%ValidRangeKey)
#DECLARE(%BrowseFiltersExist)
#DECLARE(%FieldIsString)
#FOR(%SortOrder)
  #ADD(%BrowseAccessID,ITEMS(%BrowseAccessID)+1)
  #SET(%BrowseSortOrderInstance,INSTANCE(%SortOrder))
  #SET(%BrowseKey,%SortKey)
  #SET(%BrowsePrefix,%InstancePrefix & ':Sort' & %BrowseAccessID)
  #SET(%BrowseCondition,%SortCondition)
  #SET(%BrowseRecordFilter,%SortRecordFilter)
  #SET(%BrowseOrderStatement,%GetSortAddSortFields())
  #FOR(%SortResetFields)
    #ADD(%BrowseResetField,%SortResetField)
  #ENDFOR
  #IF(%BrowseKey)
    #SET(%BrowseRangeField,%SortRangeField)
    #SET(%BrowseRangeLimitType,%SortRangeLimitType)
    #SET(%BrowseRangeLimit,%SortRangeLimit)
    #SET(%BrowseRangeHigh,%SortRangeHigh)
    #SET(%BrowseRangeLow,%SortRangeLow)
    #SET(%BrowseRangeFile,%SortRangeFile)
    #SET(%BrowseLocatorType,%SortLocatorType)
    #SET(%BrowseLocatorFindAny,%SortFindAnywhere)
    #IF(%BrowseLocatorType = 'Entry' OR %BrowseLocatorType = 'Incremental' OR %BrowseLocatorType = 'Filtered')
      #IF(%SortOverrideDefaultLocator)
    #SET(%BrowseLocatorControl,%SortOverrideLocator)
      #ENDIF
    #ENDIF
    #IF(%VerticalScrollBarFound)
      #SET(%BrowseScrollBehavior,CHOOSE(%LoadMethod='Page',%SortScrollBehavior,'Fixed Thumb'))
      #IF(%BrowseScrollBehavior = 'Movable Thumb')
        #SET(%BrowseScrollKeyDistribution,%SortScrollKeyDistribution)
        #FIX(%File,%Primary)
        #FIX(%Key,%BrowseKey)
        #IF(%BrowseScrollKeyDistribution = 'Custom')
          #FOR(%SortCustomKeyDistribution)
            #ADD(%BrowseKeyDistributionValue,%SortKeyDistributionValue)
          #ENDFOR
          #SET(%BrowseKeyDistributionCount,ITEMS(%BrowseKeyDistributionValue))
        #ELSIF(%BrowseScrollKeyDistribution = 'Runtime')
          #IF(%SortScrollAlpha)
            #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowAlpha')
            #IF(NOT %KeyNoCase)
              #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:CaseSensitive')
            #ENDIF
          #ENDIF
          #IF(%SortScrollNumeric)
            #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowNumeric')
          #ENDIF
          #IF(%SortScrollAlt)
            #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowAlt')
          #ENDIF
        #ELSE
          #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowAlpha')
        #ENDIF
      #ENDIF
    #ENDIF
  #ELSE
    #SET(%BrowseScrollBehavior,'Fixed Thumb')
  #ENDIF
#ENDFOR
#ADD(%BrowseAccessID,ITEMS(%BrowseAccessID)+1)
#SET(%BrowseKey,%PrimaryKey)
#SET(%BrowseTotalKeys,%BrowseAccessID)
#SET(%BrowsePrefix,%InstancePrefix & ':Sort' & %BrowseAccessID)
#SET(%BrowseCondition,%False)
#SET(%BrowseRecordFilter,%RecordFilter)
#SET(%BrowseOrderStatement,%GetAddSortFields())
#FOR(%ResetFields)
  #ADD(%BrowseResetField,%ResetField)
#ENDFOR
#IF(%BrowseKey)
  #SET(%BrowseRangeField,%RangeField)
  #SET(%BrowseRangeLimitType,%RangeLimitType)
  #SET(%BrowseRangeLimit,%RangeLimit)
  #SET(%BrowseRangeHigh,%RangeHigh)
  #SET(%BrowseRangeLow,%RangeLow)
  #SET(%BrowseRangeFile,%RangeFile)
  #SET(%BrowseLocatorType,%LocatorType)
  #SET(%BrowseLocatorFindAny,%FindDefaultAnywhere)
  #IF(%BrowseLocatorType = 'Entry' OR %BrowseLocatorType = 'Incremental' OR %BrowseLocatorType = 'Filtered')
    #IF(%OverrideDefaultLocator)
  #SET(%BrowseLocatorControl,%OverrideLocator)
    #ENDIF
  #ENDIF
  #IF(%VerticalScrollBarFound)
    #SET(%BrowseScrollBehavior,CHOOSE(%LoadMethod='Page',%ScrollBehavior,'Fixed Thumb'))
    #IF(%BrowseScrollBehavior = 'Movable Thumb')
      #SET(%BrowseScrollKeyDistribution,%ScrollKeyDistribution)
      #FIX(%File,%Primary)
      #FIX(%Key,%BrowseKey)
      #IF(%BrowseScrollKeyDistribution = 'Custom')
        #FOR(%CustomKeyDistribution)
          #ADD(%BrowseKeyDistributionValue,%KeyDistributionValue)
        #ENDFOR
        #SET(%BrowseKeyDistributionCount,ITEMS(%BrowseKeyDistributionValue))
      #ELSIF(%BrowseScrollKeyDistribution = 'Runtime')
        #IF(%ScrollAlpha)
          #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowAlpha')
          #IF(NOT %KeyNoCase)
            #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:CaseSensitive')
          #ENDIF
        #ENDIF
        #IF(%ScrollNumeric)
          #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowNumeric')
        #ENDIF
        #IF(%ScrollAlt)
          #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowAlt')
        #ENDIF
      #ELSE
        #SET(%BrowseScrollParameters,%BrowseScrollParameters & '+ScrollSort:AllowAlpha')
      #ENDIF
    #ENDIF
  #ENDIF
#ELSE
  #SET(%BrowseScrollBehavior,'Fixed Thumb')
#ENDIF
#FIX(%File,%Primary)
#SET(%BrowseFiltersExist,%False)
#FOR(%BrowseAccessID),WHERE(%BrowseKey)
  #FIX(%Key,%BrowseKey)
  #FOR(%KeyField)
    #SET(%ValueConstruct,%KeyField)
    #IF(~INLIST(%ValueConstruct,%QueueField))
      #ADD(%QueueField,%ValueConstruct)
      #SET(%QueueFieldAssignment,%KeyField)
      #SET(%QueueFieldComment,'Browse key field')
    #ENDIF
  #ENDFOR
  #FIX(%Key,%BrowseKey)
  #SET(%BrowseLocatorName,%Null)
  #IF(%BrowseLocatorType <> 'None')
    #IF(%BrowseRangeField)
      #FOR(%KeyField)
        #IF(%BrowseLocatorName)
          #IF(%BrowseRangeLimitType <> 'Range of Values')
            #SET(%BrowseLocatorName,%KeyField)
          #ENDIF
          #BREAK
        #ELSE
          #IF(UPPER(%KeyField)=UPPER(%BrowseRangeField))
            #SET(%BrowseLocatorName,%KeyField)
          #ENDIF
        #ENDIF
      #ENDFOR
    #ELSE
      #SELECT(%KeyField,1)
      #SET(%BrowseLocatorName,%KeyField)
    #ENDIF
    #IF(%BrowseLocatorType = 'Entry' OR %BrowseLocatorType = 'Incremental' OR %BrowseLocatorType = 'Filtered')
      #IF(%BrowseLocatorControl)
        #IF (~INLIST(%BrowseLocatorControl,%Control))
          #SET(%BrowseLocatorControl,%Null)
        #ENDIF
      #ELSE
        #FOR(%Control)
          #IF(UPPER(%ControlUse)=UPPER(%BrowseLocatorName))
            #SET(%BrowseLocatorControl,%Control)
            #SET(%ForceWindowRefresh,%False)
            #BREAK
          #ENDIF
        #ENDFOR
      #ENDIF
    #ENDIF
    #IF(%BrowseLocatorName=%Null)
      #INSERT(%ErrorBrowseLocatorNoFreeKey)
      #SET(%BrowseLocatorType,'None')
    #ELSIF(%BrowseLocatorControl = %Null AND %BrowseLocatorType = 'Entry')
      #INSERT(%ErrorBrowseLocatorNoEntryControl)
      #SET(%BrowseLocatorType,'Step')
    #ENDIF
    #IF(%BrowseLocatorName)
      #SET(%BrowseFreeElement,%BrowseLocatorName)
    #ENDIF
  #ENDIF
  #FIX(%Control,%ListControl)
  #IF(%BrowseFreeElement=%Null)
    #SELECT(%KeyField,1)
    #SET(%BrowseFreeElement,%KeyField)
    #SET(%BrowseFreeElementNumber,1)
  #ELSE
    #FIX(%KeyField,%BrowseFreeElement)
    #SET(%BrowseFreeElementNumber,INSTANCE(%KeyField))
  #ENDIF
  #IF(%BrowseFilterStatement)
    #SET(%BrowseFiltersExist,%True)
  #ENDIF
#ENDFOR
#FOR(%BrowseAccessID)
  #IF(%BrowseRecordFilter)
    #IF(SUB(%BrowseRecordFilter,1,1)='!')
      #SET(%BrowseFilterStatement,%BrowseRecordFilter)
    #ELSE
      #SET(%BrowseFilterStatement,%BrowseFilterStatement & '(' & %BrowseRecordFilter & ')')
    #ENDIF
  #ENDIF
  #IF(%BrowseFilterStatement OR %BrowseRecordFilter)
    #SET(%BrowseFiltersExist,%True)
  #ENDIF
#ENDFOR
#EMBED(%BottomofSetupBrowseBehavior,'INTERNAL Bottom of SetupBrowseBehavior GROUP'),HIDE,%ActiveTemplateInstance
#!
#!
#!
#!---------------------------------------------------------------------
#GROUP(%GetAddSortFields,%pSortInstance=0),AUTO,PRESERVE
#DECLARE(%TempSort)
#DECLARE(%IndexNum)
#IF(%AdditionalSortType='Manual')
   #RETURN(%AddSortFields)
#ELSIF(%AdditionalSortType='Assisted')
   #SET(%TempSort,'')
   #FOR(%AddSortFieldsAssisted)
      #IF(%TempSort)
         #SET(%TempSort,%TempSort&',')
      #ENDIF
      #SET(%TempSort,%TempSort&%AddSortFieldAssistedOrder&%AddSortFieldAssisted)
   #ENDFOR
   #RETURN(%TempSort)
#ELSIF(%AdditionalSortType='ConditionalAssisted')
   #IF(%pSortInstance<>0)
       #SET(%IndexNum,0)
       #FOR(%AddConditionalSort)
          #SET(%IndexNum,%IndexNum+1)
          #IF(%IndexNum=%pSortInstance)
             #SET(%TempSort,'')
             #FOR(%AddConditionalSortFieldsAssisted)
                #IF(%TempSort)
                   #SET(%TempSort,%TempSort&',')
                #ENDIF
                #SET(%TempSort,%TempSort&%AddConditionalSortFieldAssistedOrder&%AddConditionalSortFieldAssisted)
             #ENDFOR
             #RETURN(%TempSort)
          #ENDIF
       #ENDFOR
       #RETURN('')
   #ELSE
       #RETURN('')
   #ENDIF
#ELSIF(%AdditionalSortType='DynamicNamed')
   #IF(%pSortInstance<>0)
       #SET(%IndexNum,0)
       #FOR(%AddSortDynamicNamed)
          #SET(%IndexNum,%IndexNum+1)
          #IF(%IndexNum=%pSortInstance)
             #SET(%TempSort,'')
             #FOR(%AddSortFieldsDinName)
                #IF(%TempSort)
                   #SET(%TempSort,%TempSort&',')
                #ENDIF
                #SET(%TempSort,%TempSort&%AddSortFieldDinNameOrder&%AddSortFieldDinName)
             #ENDFOR
             #RETURN(%TempSort)
          #ENDIF
       #ENDFOR
       #RETURN('')
   #ELSE
       #RETURN('')
   #ENDIF
#ELSE
   #RETURN('SORTTYPE:'&%AdditionalSortType)
#ENDIF
#!---------------------------------------------------------------------
#GROUP(%GetSortAddSortFields),AUTO
#DECLARE(%TempSort)
#IF(%SortAdditionalSortType='Manual')
   #RETURN(%SortAddSortFields)
#ELSIF(%SortAdditionalSortType='Assisted')
   #SET(%TempSort,'')
   #FOR(%SortAddSortFieldsAssisted)
      #IF(%TempSort)
         #SET(%TempSort,%TempSort&',')
      #ENDIF
      #SET(%TempSort,%TempSort&%SortAddSortFieldAssistedOrder&%SortAddSortFieldAssisted)
   #ENDFOR
   #RETURN(%TempSort)
#ELSE
   #RETURN('SORTTYPE:'&%SortAdditionalSortType)
#ENDIF
#!---------------------------------------------------------------------
#GROUP(%BrowseRoutineFillGreenBar,%pPrimeRecord=0),AUTO
#FIX(%Control,%ListControl)
#DECLARE(%LocAlternate)
#DECLARE(%LocGreenBarIndex)
#DECLARE(%GenerateGreenbarColor)
#DECLARE(%GenerateGreenbarStyle)
#SET(%GenerateGreenbarColor,0)
#SET(%GenerateGreenbarStyle,0)
  #FOR(%QueueField)
      #FIX(%ControlField,%QueueFieldAssignment)
      #IF(%QueueFieldHasColor)
        #IF(%UseSameColorForAll=%True)
           #IF(%AllControlGreenBarColor)
              #SET(%GenerateGreenbarColor,1)
              #BREAK
           #ENDIF
        #ELSE
           #IF(%ControlGreenBarColor)
              #SET(%GenerateGreenbarColor,1)
              #BREAK
           #ENDIF
        #ENDIF
      #ENDIF
  #ENDFOR
  #FOR(%QueueField)
      #FIX(%ControlField,%QueueFieldAssignment)
      #IF(%QueueFieldHasStyle)
        #IF(%UseSameStyleForAll=%True)
           #IF(%AllControlGreenBarStyle)
              #SET(%GenerateGreenbarStyle,1)
              #BREAK
           #ENDIF
        #ELSE
           #IF(%ControlGreenBarStyle)
              #SET(%GenerateGreenbarStyle,1)
              #BREAK
           #ENDIF
        #ENDIF
      #ENDIF
  #ENDFOR
#IF(%GenerateGreenbarColor OR %GenerateGreenbarStyle)
!----------------------------------------------------------------------
 #IF(NOT %pPrimeRecord)
    #SET(%LocGreenBarIndex,'GreenBarIndex')
 LOOP GreenBarIndex=1 TO RECORDS(SELF.Q)
      GET(SELF.Q,GreenBarIndex)
 #ELSE
    #SET(%LocGreenBarIndex,'CHOICE('&%ListControl&')')
 #ENDIF
#SET(%LocAlternate,1)
#IF(%UseSameColorForAll=%True)
    #IF(NOT(ITEMS(%ConditionalColorsAll) AND %AllControlGreenBarColor=%False))
       #FOR(%QueueField)
         #FIX(%ControlField,%QueueFieldAssignment)
         #SET(%ValueConstruct,%QueueField)
         #IF(%QueueFieldHasColor)
            #IF(%AllControlGreenBarColor)
               #IF(%AllControlGreenBarColorAlternate)
                  #SET(%LocAlternate,CHOOSE(%LocAlternate,2,1))
                  #IF(%LocAlternate=1)
      SELF.Q.%ValueConstruct_NormalFG   = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOffForegroundNormal,%AllGreenBarOnForegroundNormal)               #<! Set color values for %QueueField
      SELF.Q.%ValueConstruct_NormalBG   = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOffBackgroundNormal,%AllGreenBarOnBackgroundNormal)
      SELF.Q.%ValueConstruct_SelectedFG = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOffForegroundSelected,%AllGreenBarOnForegroundSelected)
      SELF.Q.%ValueConstruct_SelectedBG = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOffBackgroundSelected,%AllGreenBarOnBackgroundSelected)
                  #ELSE
      SELF.Q.%ValueConstruct_NormalFG   = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnForegroundNormal,%AllGreenBarOffForegroundNormal)               #<! Set color values for %QueueField
      SELF.Q.%ValueConstruct_NormalBG   = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnBackgroundNormal,%AllGreenBarOffBackgroundNormal)
      SELF.Q.%ValueConstruct_SelectedFG = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnForegroundSelected,%AllGreenBarOffForegroundSelected)
      SELF.Q.%ValueConstruct_SelectedBG = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnBackgroundSelected,%AllGreenBarOffBackgroundSelected)
                  #ENDIF
               #ELSE
      SELF.Q.%ValueConstruct_NormalFG   = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnForegroundNormal,%AllGreenBarOffForegroundNormal)               #<! Set color values for %QueueField
      SELF.Q.%ValueConstruct_NormalBG   = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnBackgroundNormal,%AllGreenBarOffBackgroundNormal)
      SELF.Q.%ValueConstruct_SelectedFG = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnForegroundSelected,%AllGreenBarOffForegroundSelected)
      SELF.Q.%ValueConstruct_SelectedBG = CHOOSE(%LocGreenBarIndex % 2,%AllGreenBarOnBackgroundSelected,%AllGreenBarOffBackgroundSelected)
               #ENDIF
            #ENDIF
         #ENDIF
       #ENDFOR
    #ENDIF
#ELSE
  #FOR(%QueueField)
    #IF(%QueueFieldHasColor AND %UseSameColorForAll=%False)
      #FIX(%ControlField,%QueueFieldAssignment)
      #SET(%ValueConstruct,%QueueField)
      #IF(NOT(ITEMS(%ConditionalColors) AND %ControlGreenBarColor=%False))
         #IF(%ControlGreenBarColor)
      SELF.Q.%ValueConstruct_NormalFG   = CHOOSE(%LocGreenBarIndex % 2,%GreenBarOnForegroundNormal,%GreenBarOffForegroundNormal)               #<! Set color values for %QueueField
      SELF.Q.%ValueConstruct_NormalBG   = CHOOSE(%LocGreenBarIndex % 2,%GreenBarOnBackgroundNormal,%GreenBarOffBackgroundNormal)
      SELF.Q.%ValueConstruct_SelectedFG = CHOOSE(%LocGreenBarIndex % 2,%GreenBarOnForegroundSelected,%GreenBarOffForegroundSelected)
      SELF.Q.%ValueConstruct_SelectedBG = CHOOSE(%LocGreenBarIndex % 2,%GreenBarOnBackgroundSelected,%GreenBarOffBackgroundSelected)
         #ENDIF
      #ENDIF
    #ENDIF
  #ENDFOR
#ENDIF
#SET(%LocAlternate,1)
#IF(%UseSameStyleForAll=%True)
    #IF(NOT(ITEMS(%ConditionalStylesAll) AND %AllControlGreenBarStyle=%False))
       #FOR(%QueueField)
         #FIX(%ControlField,%QueueFieldAssignment)
         #SET(%ValueConstruct,%QueueField)
         #IF(%QueueFieldHasStyle)
            #IF(%AllControlGreenBarStyle)
               #IF(%AllControlGreenBarStyleAlternate)
                  #SET(%LocAlternate,CHOOSE(%LocAlternate,2,1))
                  #IF(%LocAlternate=1)
      SELF.Q.%ValueConstruct_Style = CHOOSE(%LocGreenBarIndex % 2,%(%GetStyleNumber(%AllGreenBarOffStyleType,%AllGreenBarOffStyle,%AllGreenBarOffStyleLocalList)),%(%GetStyleNumber(%AllGreenBarOnStyleType,%AllGreenBarOnStyle,%AllGreenBarOnStyleLocalList))) ! %GreenBarOffStyle - %GreenBarOnStyle
                  #ELSE
      SELF.Q.%ValueConstruct_Style = CHOOSE(%LocGreenBarIndex % 2,%(%GetStyleNumber(%AllGreenBarOnStyleType,%AllGreenBarOnStyle,%AllGreenBarOnStyleLocalList)),%(%GetStyleNumber(%AllGreenBarOffStyleType,%AllGreenBarOffStyle,%AllGreenBarOffStyleLocalList))) ! %GreenBarOnStyle - %GreenBarOffStyle
                  #ENDIF
               #ELSE
      SELF.Q.%ValueConstruct_Style = CHOOSE(%LocGreenBarIndex % 2,%(%GetStyleNumber(%AllGreenBarOnStyleType,%AllGreenBarOnStyle,%AllGreenBarOnStyleLocalList)),%(%GetStyleNumber(%AllGreenBarOffStyleType,%AllGreenBarOffStyle,%AllGreenBarOffStyleLocalList))) ! %GreenBarOnStyle - %GreenBarOffStyle
               #ENDIF
            #ENDIF
         #ENDIF
       #ENDFOR
    #ENDIF
#ELSE
  #FOR(%QueueField)
    #IF(%QueueFieldHasStyle AND %UseSameStyleForAll=%False)
      #FIX(%ControlField,%QueueFieldAssignment)
      #SET(%ValueConstruct,%QueueField)
      #IF(NOT(ITEMS(%ConditionalStyles) AND %ControlGreenBarStyle=%False))
         #IF(%ControlGreenBarStyle)
      SELF.Q.%ValueConstruct_Style = CHOOSE(%LocGreenBarIndex % 2,%(%GetStyleNumber(%GreenBarOnStyleType,%GreenBarOnStyle,%GreenBarOnStyleLocalList)),%(%GetStyleNumber(%GreenBarOffStyleType,%GreenBarOffStyle,%GreenBarOffStyleLocalList))) ! %GreenBarOnStyle - %GreenBarOffStyle
         #ENDIF
      #ENDIF
    #ENDIF
  #ENDFOR
#ENDIF
 #IF(NOT %pPrimeRecord)
      PUT(SELF.Q)
 END
 #ENDIF
!----------------------------------------------------------------------
#ENDIF
#!---------------------------------------------------------------------
#CONTROL(BrowseSelectButton,'Select record from a Browse Box'),DESCRIPTION('Select a Record from Browse on ' & %Primary),REQ(BrowseBox),FIRST,HLP('~TPLControlBrowseSelectButton')
  CONTROLS
    BUTTON('&Select'),USE(?Select)
  END
#BOXED('Select Button')
  #PROMPT('Hide the Select button when not applicable',CHECK),%HideIfDisabled,AT(10,,150)
  #PROMPT('&Allow Select via Popup',CHECK),%SelectViaPopup,DEFAULT(1),AT(10,,150)
#ENDBOXED
#!
#!
#AT(%GenerateInstanceUpdate),WHERE(%AcceptToolbarControl AND %GenerateSelectInstance=0)
  #SET(%GenerateSelectInstance,%ActiveTemplateInstance)
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(2800)
  #IF(%GetControlName() <> '')
SELF.SelectControl = %(%GetControlName())
      #IF(%HideIfDisabled)
SELF.HideSelect = 1                                             #<! Hide the select button when disabled
      #ENDIF
  #ENDIF
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateInstance,'TakeEvent','()'),PRIORITY(4000)
#?IF ACCEPTED()=%SelectControl
  #EMBED(%BrowseBoxProcessSelected,'Browse Box, process selected record'),LEGACY
#?END
#ENDAT
#!
#!
#CONTROL(BrowsePrintButton,'Print record from a Browse Box'),DESCRIPTION('Print a Record from Browse on ' & %Primary),REQ(BrowseBox),FIRST,HLP('~TPLControlBrowsePrintButton')
  CONTROLS
    BUTTON('&Print'),USE(?Print)
  END
#BOXED('Print Button')
  #PROMPT('Report Procedure',PROCEDURE),%PrintProcedure,REQ,PROP(PROP:DropWidth,140)
#ENDBOXED
#ATSTART
  #DECLARE(%PrintControl)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #SET(%PrintControl,%Control)
  #ENDFOR
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(8525)
  #ADD(%ProcsCalled,%PrintProcedure)
%ManagerName.PrintProcedure = %(INSTANCE(%ProcsCalled))
%ManagerName.PrintControl = %PrintControl
#ENDAT
#!
#!
#!
#!
#CONTROL(BrowseToolboxButton,'Start toolbox'),DESCRIPTION('Start toolbox for Browse on ' & %Primary),REQ(BrowseBox),FIRST,HLP('~TPLControlBrowseToolboxButton')
  CONTROLS
    BUTTON('&Toolbox'),USE(?Toolbox)
  END
#ATSTART
  #DECLARE(%TBControl)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #SET(%TBControl,%Control)
  #ENDFOR
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(8525)
SELF.ToolControl = %TBControl
#ENDAT
#!
#!
#CONTROL(BrowseQBEButton,'QBE Filter'),DESCRIPTION('Call a QBE filter for ' & %Primary),FIRST,HLP('~TPLControlBrowseQBEButton'),REQ(BrowseBox)
  CONTROLS
    BUTTON('&Query'),USE(?Query)
  END
#INSERT(%QBEPrompts)
#!
#ATSTART
#INSERT(%QBEStart)
#ENDAT
#!
#AT(%CustomGlobalDeclarations) #! Specific to Browse
 #IF(%QkMenuIcon)
   #PROJECT(%QkMenuIcon)
 #ENDIF
 #IF(%QkIcon)
  #PROJECT(%QkIcon)
 #ENDIF
#ENDAT
#!
#AT(%GatherObjects)
#INSERT(%QBEGatherObjects)
#ENDAT
#!
#!
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(8125),AUTO
#INSERT(%QBEWinManInit)
#IF(%QkSupport) #! jvn specific to Browse.
%ThisObjectName.QkSupport = True
#IF(%QkMenuIcon)
%ThisObjectName.QkMenuIcon = '%QkMenuIcon'
#ENDIF
#IF(%QkIcon)
%ThisObjectName.QkIcon = '%QkIcon'
#ENDIF
#ENDIF
#PRIORITY(8500)
#INSERT(%QBEWinManAfterWinOpen)
#ENDAT
#!
#AT(%QBEMethodCodeSection,%ActiveTemplateInstance,'Ask','(BYTE UseLast=1),BYTE'),PRIORITY(2500),WHERE(~%RetainQuery)
#INSERT(%QBEAsk)
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(7500)
#INSERT(%QBERelationManagerInit)
#!---------------------------------------------------------------------
#ENDAT
#!
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE')
#PRIORITY(9500)
#INSERT(%QBETakeLocate)
#ENDAT
#!
#AT(%QBEMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall)
#ENDAT
#!
#AT(%QBEVisualMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall)
#ENDAT
#!
#AT(%LocalDataClasses)
#INSERT(%QBELocalDataClasses)
#ENDAT
#!
#!
#AT(%LocalProcedures)
#INSERT(%QBELocalProcedures)
#ENDAT
#!
#!
#CONTROL(BrowseViewButton, 'View records from a Browse Box'),DESCRIPTION('View a Record from Browse Box on ' & %Primary),REQ(BrowseBox),HLP('~TPLControlBrowseViewButton')
#!
  CONTROLS
       BUTTON('&View'),AT(,,42,12),USE(?View)
  END
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(8550)
SELF.ViewControl = %(%GetControlName())                         #<! Setup the control used to initiate view only mode
#ENDAT
#!
#!
#!----------------------------------------------------------------
#CONTROL(BrowseNoRecordsButton,'Button which is disabled or hidden when no records exist in the Browse Box'),DESCRIPTION('Button disabled or hidden when no records exist in ' & %Primary&%ActiveTemplateInstance),REQ(BrowseBox(ABC)),MULTI,HLP('~TPLControlBrowseNoRecordsButton')
  CONTROLS
    BUTTON('Button'),AT(,,52,12),USE(?ButtonNoRecords)
  END
#BOXED('No Records Button')
  #PROMPT('&Select from Popup',CHECK),%SelectFromPopup,DEFAULT(1),AT(10,,150)
  #PROMPT('When no Records',OPTION),%NoRecordsAction,DEFAULT('Disable')
  #PROMPT('Disable',RADIO)
  #PROMPT('Hide',RADIO)
#ENDBOXED
#PROMPT('Refresh Window After Action',CHECK),%DoWindowRefresh,DEFAULT(1),AT(30,)
#ATSTART
  #DECLARE(%NoRecordsControl)
  #DECLARE(%NoRecordsControlText)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #SET(%NoRecordsControl,%Control)
    #IF(%SelectFromPopup)
      #SET(%NoRecordsControlText,EXTRACT(%ControlStatement,'BUTTON',1))
      #SET(%NoRecordsControlText,SUB(%NoRecordsControlText,2,LEN(%NoRecordsControlText)-2))
    #ENDIF
  #ENDFOR
#ENDAT
#!
#AT(%BrowserMethodCodeSection, %ActiveTemplateParentInstance, 'ResetQueue','(BYTE ResetMode)'),LAST
IF NOT RECORDS(SELF.ListQueue)
    #IF (%NoRecordsAction='Disable')
%NoRecordsControl{Prop:Disable} = 1
    #ELSE
%NoRecordsControl{Prop:Hide} = 1
    #ENDIF
END
IF RECORDS(SELF.ListQueue)
    #IF (%NoRecordsAction='Disable')
%NoRecordsControl{Prop:Disable} = 0
    #ELSE
%NoRecordsControl{Prop:Hide} = 0
    #ENDIF
END
#ENDAT
#AT(%WindowManagerMethodCodeSection, 'Init','(),byte'),PRIORITY(9550),WHERE(%SelectFromPopup)
%ManagerName.Popup.AddItemMimic('%'NoRecordsControlText',%NoRecordsControl)
#ENDAT
#AT(%ControlEventHandling,%NoRecordsControl,'Accepted'),LAST
  #IF(%DoWindowRefresh)
  %WindowManager.Reset(True)
  #END
#ENDAT
#!----------------------------------------------------------------
#!
#CONTROL(BrowseUpdateButtons,'Update records from a Browse Box'),DESCRIPTION('Update a Record from Browse Box on ' & %Primary),REQ(BrowseBox),HLP('~TPLControlBrowseUpdateButtons')
#PREPARE
  #CALL(%ReadABCFiles)
  #CALL(%SetClassDefaults, 'BrowseEIPManager', 'BRW' & %ActiveTemplateParentInstance & '::EIPManager', %BrowseEIPManagerType)
#ENDPREPARE
  CONTROLS
       BUTTON('&Insert'),AT(,,42,12),USE(?Insert)
       BUTTON('&Change'),AT(42,0,42,12),USE(?Change)
       BUTTON('&Delete'),AT(42,0,42,12),USE(?Delete)
  END
#BOXED('Update Buttons')
  #PROMPT('Use Edit &in Place',CHECK),%EditInPlace,DEFAULT(%False),AT(10)
  #ENABLE(%EditInPlace = %True)
    #BUTTON('&Configure Edit in place'),AT(,,180)
      #BOXED
        #SHEET,ADJUST
           #TAB('&General')
              #BOXED('EIP prompts'),AT(0,0),WHERE(%False),HIDE
                #INSERT(%OOPHiddenPrompts)
              #ENDBOXED
              #BUTTON('Browse &EIP Manager'),AT(,,180)
                #WITH(%ClassItem, 'BrowseEIPManager')
                  #INSERT(%ClassPrompts)
                #ENDWITH
              #ENDBUTTON
              #BOXED('Action upon tab at end of row')
                #PROMPT('Save',DROP('Default|Always|Never|Prompted')),%EIPTabAction,DEFAULT('Default')
                #PROMPT('Remain editing',CHECK),%EIPTabRemain,DEFAULT(0)
              #ENDBOXED
              #BOXED('Action upon ENTER key')
                #PROMPT('Save',DROP('Default|Always|Never|Prompted')),%EIPEnterAction,DEFAULT('Default')
                #PROMPT('Remain editing',CHECK),%EIPEnterRemain,DEFAULT(0)
              #ENDBOXED
              #BOXED('Default action upon arrow key')
                #PROMPT('Save',DROP('Default|Always|Never|Prompted')),%EIPArrowAction,DEFAULT('Default')
                #PROMPT('Remain editing',CHECK),%EIPArrowRemain,DEFAULT(1)
                #PROMPT('Retain column',CHECK),%EIPArrowRetain,DEFAULT(1)
              #ENDBOXED
              #BOXED('Action upon focus loss')
                #PROMPT('Save',DROP('Default|Always|Never|Prompted')),%EIPFocusAction,DEFAULT('Default')
              #ENDBOXED
              #PROMPT('Insertion point',DROP('Before|After|Append')),%EIPInsertionPoint,DEFAULT('After')
              #PROMPT('Action on Delete:',DROP('Always|Prompted|Never')),%EIPAskOnDelete,DEFAULT('Always')
              #BUTTON('Field Priming on Insert'),MULTI(%PrimingFields,%PrimedField & ' = ' & %PrimedValue),AT(,,180)
                #PROMPT('Field to Prime:',FIELD),%PrimedField,REQ
                #PROMPT('Initial Value:',@S255),%PrimedValue,REQ
              #ENDBUTTON
           #ENDTAB
           #TAB('Column &Specific'),WHERE(%EditInPlaceInterface='Detailed')
              #PREPARE
                #FIND(%ControlInstance,%ActiveTemplateParentInstance,%Control)
              #ENDPREPARE
              #BUTTON('Column &Specific'),FROM(%ControlField,%ControlField&' - '&%GetEIPStatusExt()),AT(,35),INLINE
                #PREPARE
                  #FIND(%ControlInstance,%ActiveTemplateParentInstance,%Control)
                  #IF(%AllowEIPExt AND %EditInPlace = %True AND %ControlField AND %EditInPlaceInterface='Detailed')
                     #CALL(%SetEIPDefaultsExt)
                  #ENDIF
                #ENDPREPARE
                #BOXED
                   #SHEET
                       #TAB('General')
                         #PROMPT('&Allow Edit-In-Place',CHECK),%AllowEIPExt,DEFAULT(%True),AT(45)
                         #ENABLE(%AllowEIPExt)
                            #PROMPT('&Type:',DROP('Entry|Text|Check|Spin|DropList|DropCombo|Color|File|Font|MultiSelect|Calendar|Lookup|Other')),%EditInPlaceTypeExt,DEFAULT('Entry'),AT(45),PROMPTAT(5,,40)
                            #BOXED,SECTION
                               #BOXED,AT(0,0),WHERE(%EditInPlaceTypeExt='Text' OR %EditInPlaceTypeExt='Font' OR %EditInPlaceTypeExt='Color' OR %EditInPlaceTypeExt='MultiSelect' OR %EditInPlaceTypeExt='File')
                                   #PROMPT('Title:',@s20),%EditInPlaceFEQTitle,AT(45,5),PROMPTAT(5,5,40)
                                   #BOXED,SECTION
                                      #PROMPT('Justification:',DROP('Default|Left|Right|Centered|Decimal')),%EditInPlaceFEQJust,DEFAULT('Default'),AT(45,5,50),PROMPTAT(5,5,40)
                                      #PROMPT('Offset:',@n4),%EditInPlaceFEQOffset,DEFAULT(0),AT(140,5,50),PROMPTAT(100,5,40)
                                   #ENDBOXED
                                   #BOXED('Options'),SECTION
                                      #PROMPT('Transparent',CHECK),%EditInPlaceFEQTransparent,DEFAULT(0),AT(10,3)
                                      #PROMPT('ReadOnly',CHECK),%EditInPlaceFEQReadOnly,DEFAULT(0),AT(100,3)
                                      #PROMPT('Required',CHECK),%EditInPlaceFEQRequired,DEFAULT(0),AT(10,13)
                                   #ENDBOXED
                                   #BOXED,SECTION
                                      #BOXED,WHERE(%EditInPlaceTypeExt='MultiSelect'),AT(10,0)
                                         #BUTTON('MultiSelect Options')
                                            #PROMPT('Data Source:',DROP('Queue|Fixed')),%EditInPlaceFEQDataSource,DEFAULT('Fixed')
                                            #BOXED,SECTION
                                               #BOXED,WHERE(%EditInPlaceFEQDataSource='Fixed'),AT(0,0)
                                                  #BUTTON('Fixed Data'),MULTI(%EditInPlaceFEQFixedDataSource,CHOOSE(%EditInPlaceFEQFixedDataSourceSelected=1,'X','')&%EditInPlaceFEQFixedDataSourceValue),INLINE
                                                     #PROMPT('Value:',@S100),%EditInPlaceFEQFixedDataSourceValue,REQ
                                                     #PROMPT('Selected',CHECK),%EditInPlaceFEQFixedDataSourceSelected,DEFAULT(0)
                                                  #ENDBUTTON
                                               #ENDBOXED
                                               #BOXED,WHERE(%EditInPlaceFEQDataSource='Queue'),AT(0,0)
                                                  #PROMPT('Queue Name:',FIELD),%EditInPlaceFEQQueueDataSourceQN,REQ
                                                  #PROMPT('Value Field:',FIELD),%EditInPlaceFEQQueueDataSourceV,REQ
                                                  #PROMPT('Selected Field:',FIELD),%EditInPlaceFEQQueueDataSourceS
                                               #ENDBOXED
                                            #ENDBOXED
                                            #PROMPT('Auto Serialize Field',CHECK),%EditInPlaceFEQAutoSerializeField,DEFAULT(0)
                                            #ENABLE(%EditInPlaceFEQAutoSerializeField)
                                                #PROMPT('Field Delimiter:',@S10),%EditInPlaceFEQAutoSerializeFieldDelimiter,REQ
                                            #ENDENABLE
                                         #ENDBUTTON
                                      #ENDBOXED
                                      #BOXED,WHERE(%EditInPlaceTypeExt='File'),AT(10,0)
                                         #BUTTON('File Dialog Options')
                                            #PROMPT('&Return to original directory when done.',CHECK),%ReturnToOriginalDir,AT(10)
                                            #PROMPT('&Long Filenames',CHECK),%AllowLongFilenames,AT(10),DEFAULT(%True)
                                            #PROMPT('Dialog type',DROP('Open|Save|Directory')),%DOSFileDialogType,DEFAULT('Open')
                                            #ENABLE(%DOSFileDialogType<>'Directory'),CLEAR
                                            #PROMPT('Don''t report &errors',CHECK),%AllowNoError,AT(10),DEFAULT(%False)
                                            #ENDENABLE
                                            #ENABLE(%DOSFileDialogType='Open'),CLEAR
                                               #PROMPT('Multi-Select',CHECK),%AllowMultiSelect,AT(10)
                                            #ENDENABLE
                                            #PROMPT('F&ile Mask Description:',@S40),%DOSMaskDesc,REQ,DEFAULT('All Files')
                                            #PROMPT('Fi&le Mask',@S100),%DOSMask,REQ,DEFAULT('*.*')
                                            #BUTTON('More Fil&e Masks'),AT(98),MULTI(%DOSMoreMasks,%DOSMoreMaskDesc & ' - ' & %DOSMoreMask)
                                              #PROMPT('File Mask Description:',@S40),%DOSMoreMaskDesc,REQ
                                              #PROMPT('File Mask',@S100),%DOSMoreMask,REQ
                                            #ENDBUTTON
                                         #ENDBUTTON
                                      #ENDBOXED
                                   #ENDBOXED
                                   #BOXED('Color'),SECTION
                                      #PROMPT('&Foreground Normal:',COLOR),%EditInPlaceFEQForegroundNormal,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Background Normal:',COLOR),%EditInPlaceFEQBackgroundNormal,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Foreground Selected:',COLOR),%EditInPlaceFEQForegroundSelected,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Background Selected:',COLOR),%EditInPlaceFEQBackgroundSelected,DEFAULT(-1),PROMPTAT(10)
                                   #ENDBOXED
                               #ENDBOXED
                               #BOXED,AT(0,0),WHERE(%EditInPlaceTypeExt='DropList' OR %EditInPlaceTypeExt='DropCombo')
                                   #PROMPT('From:',EXPR),%EditInPlaceFEQFrom,AT(45,5),PROMPTAT(5,5,40)
                                   #BOXED,SECTION,WHERE(%EditInPlaceTypeExt='DropCombo')
                                      #PROMPT('FromColumn:',EXPR),%EditInPlaceFEQColumnFrom,AT(45),PROMPTAT(5,5,40)
                                   #ENDBOXED
                                   #BOXED,SECTION,WHERE(%EditInPlaceTypeExt='DropCombo')
                                      #PROMPT('Picture:',PICTURE),%EditInPlaceFEQPicture,AT(45),PROMPTAT(5,5,40)
                                   #ENDBOXED
                                   #PROMPT('Format:',FORMAT),%EditInPlaceFEQListFormat,AT(45),PROMPTAT(5,,40)
                                   #BOXED,SECTION
                                      #PROMPT('Justification:',DROP('Default|Left|Right|Centered|Decimal')),%EditInPlaceFEQJust,DEFAULT('Default'),AT(45,5,50),PROMPTAT(5,5,40)
                                      #PROMPT('Offset:',@n4),%EditInPlaceFEQOffset,DEFAULT(0),AT(140,5,50),PROMPTAT(100,5,40)
                                   #ENDBOXED
                                   #BOXED,SECTION
                                      #PROMPT('Drop:',@n4),%EditInPlaceFEQDrop,DEFAULT(0),AT(45,5,50),PROMPTAT(5,5,40)
                                      #PROMPT('Width:',@n4),%EditInPlaceFEQWidth,DEFAULT(0),AT(140,5,50),PROMPTAT(100,5,40)
                                   #ENDBOXED
                                   #BOXED,SECTION,WHERE(%EditInPlaceTypeExt='DropCombo')
                                      #PROMPT('Case:',DROP('Default|Uppercase|Capitalize')),%EditInPlaceFEQCase,DEFAULT('Default'),AT(45,5,50),PROMPTAT(5,5,40)
                                   #ENDBOXED
                                   #BOXED('Options'),SECTION
                                      #PROMPT('Flat',CHECK),%EditInPlaceFEQFlat,DEFAULT(0),AT(10,3)
                                      #PROMPT('Transparent',CHECK),%EditInPlaceFEQTransparent,DEFAULT(0),AT(100,3)
                                      #PROMPT('HScroll',CHECK),%EditInPlaceFEQHorizontal,DEFAULT(0),AT(10,13)
                                      #PROMPT('VScroll',CHECK),%EditInPlaceFEQVertical,DEFAULT(0),AT(100,13)
                                      #PROMPT('ReadOnly',CHECK),%EditInPlaceFEQReadOnly,DEFAULT(0),AT(10,23)
                                      #PROMPT('Required',CHECK),%EditInPlaceFEQRequired,DEFAULT(0),AT(100,23)
                                      #BOXED,WHERE(%EditInPlaceTypeExt='DropCombo'),HIDE
                                         #PROMPT('Immediate',CHECK),%EditInPlaceFEQImmediate,DEFAULT(0),AT(10,33)
                                         #PROMPT('Entry Completion',CHECK),%EditInPlaceFEQEntryCompletion,DEFAULT(0),AT(100,33)
                                      #ENDBOXED
                                   #ENDBOXED
                                   #BOXED('Color'),SECTION
                                      #PROMPT('&Foreground Normal:',COLOR),%EditInPlaceFEQForegroundNormal,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Background Normal:',COLOR),%EditInPlaceFEQBackgroundNormal,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Foreground Selected:',COLOR),%EditInPlaceFEQForegroundSelected,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Background Selected:',COLOR),%EditInPlaceFEQBackgroundSelected,DEFAULT(-1),PROMPTAT(10)
                                   #ENDBOXED
                               #ENDBOXED
                               #BOXED,AT(0,0),WHERE(%EditInPlaceTypeExt='Check')
                                   #PROMPT('Text:',@S100),%EditInPlaceFEQFixedDataSourceText,AT(45),PROMPTAT(5,,40)
                                   #BOXED,SECTION
                                      #PROMPT('Justification:',DROP('Default|Left|Right')),%EditInPlaceFEQCheckJust,DEFAULT('Default'),AT(45,5,50),PROMPTAT(5,5,40)
                                   #ENDBOXED
                                   #BOXED,SECTION
                                      #PROMPT('True:',@s20),%EditInPlaceFEQTrue,AT(45,5,50),PROMPTAT(5,5,40)
                                      #PROMPT('False:',@s20),%EditInPlaceFEQFalse,AT(140,5,50),PROMPTAT(100,5,40)
                                   #ENDBOXED
                                   #BOXED('Options'),SECTION
                                      #PROMPT('Flat',CHECK),%EditInPlaceFEQFlat,DEFAULT(0),AT(10,3)
                                      #PROMPT('Transparent',CHECK),%EditInPlaceFEQTransparent,DEFAULT(0),AT(100,3)
                                      #PROMPT('ReadOnly',CHECK),%EditInPlaceFEQReadOnly,DEFAULT(0),AT(10,13)
                                      #PROMPT('Required',CHECK),%EditInPlaceFEQRequired,DEFAULT(0),AT(100,13)
                                   #ENDBOXED
                                   #BOXED('Color'),SECTION
                                      #PROMPT('&Foreground:',COLOR),%EditInPlaceFEQForegroundNormal,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Background:',COLOR),%EditInPlaceFEQBackgroundNormal,DEFAULT(-1),PROMPTAT(10)
                                   #ENDBOXED
                               #ENDBOXED
                               #BOXED,AT(0,0),WHERE(%EditInPlaceTypeExt='Spin' OR %EditInPlaceTypeExt='Entry' OR %EditInPlaceTypeExt='Calendar' OR %EditInPlaceTypeExt='Other' OR %EditInPlaceTypeExt='Lookup')
                                   #PROMPT('Picture:',PICTURE),%EditInPlaceFEQPicture,AT(45),PROMPTAT(5,,40)
                                   #BOXED,SECTION
                                      #PROMPT('Justification:',DROP('Default|Left|Right|Centered|Decimal')),%EditInPlaceFEQJust,DEFAULT('Default'),AT(45,5,50),PROMPTAT(5,5,40)
                                      #PROMPT('Offset:',@n4),%EditInPlaceFEQOffset,DEFAULT(0),AT(140,5,50),PROMPTAT(100,5,40)
                                   #ENDBOXED
                                   #BOXED,SECTION
                                      #PROMPT('Case:',DROP('Default|Uppercase|Capitalize')),%EditInPlaceFEQCase,DEFAULT('Default'),AT(45,5,50),PROMPTAT(5,5,40)
                                      #PROMPT('Entry Mode:',DROP('Default|Insert|Overwrite')),%EditInPlaceFEQEntryMode,DEFAULT('Default'),AT(140,5,50),PROMPTAT(100,5,40)
                                   #ENDBOXED
                                   #BOXED,SECTION,WHERE(%EditInPlaceTypeExt='Spin')
                                      #PROMPT('Lower:',@S12),%EditInPlaceFEQLower,DEFAULT(0),AT(45,5,50),PROMPTAT(5,5,40)
                                      #VALIDATE(%EditInPlaceFEQLower AND NUMERIC(%EditInPlaceFEQLower),'Lower value must be a number')
                                      #PROMPT('Upper:',@S12),%EditInPlaceFEQUpper,DEFAULT(0),AT(140,5,50),PROMPTAT(100,5,40)
                                      #VALIDATE(%EditInPlaceFEQUpper AND NUMERIC(%EditInPlaceFEQUpper),'Upper value must be a number')
                                      #PROMPT('Step:',@S12),%EditInPlaceFEQStep,DEFAULT(0),AT(45,20,50),PROMPTAT(5,20,40)
                                      #VALIDATE(%EditInPlaceFEQStep AND NUMERIC(%EditInPlaceFEQStep),'Step value must be a number')
                                   #ENDBOXED
                                   #BOXED('Options'),SECTION
                                      #PROMPT('Password',CHECK),%EditInPlaceFEQPassword,DEFAULT(0),AT(10,3)
                                      #PROMPT('Transparent',CHECK),%EditInPlaceFEQTransparent,DEFAULT(0),AT(100,3)
                                      #PROMPT('ReadOnly',CHECK),%EditInPlaceFEQReadOnly,DEFAULT(0),AT(10,13)
                                      #PROMPT('Required',CHECK),%EditInPlaceFEQRequired,DEFAULT(0),AT(100,13)
                                   #ENDBOXED
                                   #BOXED,WHERE(%EditInPlaceTypeExt='Lookup')
                                      #BUTTON('Lookup Options')
                                           #PROMPT('',OPTION),%LookupType,DEFAULT('Related Field')
                                           #PROMPT('Related Field',RADIO),AT(10,5)
                                           #PROMPT('Non Related Field',RADIO),AT(100,5)
                                           #ENABLE(%LookupType='Related Field')
                                           #PROMPT('Lookup Key',KEY),%PostLookupKey,AT(,25),PROMPTAT(,25)
                                           #ENDENABLE
                                           #BOXED,SECTION
                                             #BOXED,WHERE(%LookupType='Related Field'),AT(0,0)
                                                #PROMPT('Lookup Field',COMPONENT(%PostLookupKey)),%PostLookupField,REQ
                                             #ENDBOXED
                                             #BOXED,WHERE(%LookupType<>'Related Field'),AT(0,0)
                                                #PROMPT('Lookup Field',FIELD),%PostLookupFieldNoRelated
                                             #ENDBOXED
                                           #ENDBOXED
                                           #!ENABLE(%PostLookupKey),CLEAR
                                             #PROMPT('Lookup Procedure',PROCEDURE),%PostLookupProcedure,REQ,PROP(PROP:DropWidth,140)
                                             #PROMPT('Procedure Parameters',@S255),%PostLookupProcedureParameters
                                             #DISPLAY('If you want to use the column value like a parameter')
                                             #DISPLAY('use SELF.UseVar')
                                             #!ENABLE(%LookupType='Related Field')
                                             #PROMPT('Procedure Return Value',@S255),%PostLookupProcedureReturnValue
                                             #!ENDENABLE
                                           #!ENDENABLE
                                           #!PROMPT('Advanced...',EMBEDBUTTON(%ControlPostEventHandling,%Control,'Accepted')),AT(100)
                                           #BUTTON('More Field Assignments...'),Multi(%LookupAssign,%MoreTarget&'  =  '&%MoreField),AT(10,,180)
                                             #PROMPT('Target field:',FIELD),%MoreTarget,REQ
                                             #PROMPT('Field to fill from:',EXPR),%MoreField,REQ
                                             #!BOXED,SECTION
                                             #!PROMPT('Field to fill from:',@s255),%MoreField,REQ,AT(,,78)
                                             #!BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%MoreField)),AT(180,2,10,10)
                                             #!ENDBUTTON
                                             #!ENDBOXED
                                           #ENDBUTTON
                                      #ENDBUTTON
                                   #ENDBOXED
                                   #BOXED('Color'),SECTION
                                      #PROMPT('&Foreground Normal:',COLOR),%EditInPlaceFEQForegroundNormal,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Background Normal:',COLOR),%EditInPlaceFEQBackgroundNormal,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Foreground Selected:',COLOR),%EditInPlaceFEQForegroundSelected,DEFAULT(-1),PROMPTAT(10)
                                      #PROMPT('&Background Selected:',COLOR),%EditInPlaceFEQBackgroundSelected,DEFAULT(-1),PROMPTAT(10)
                                   #ENDBOXED
                               #ENDBOXED
                            #ENDBOXED
                         #ENDENABLE
                       #ENDTAB
                       #TAB('Class')
                         #ENABLE(%AllowEIPExt AND %ControlField AND %EditInPlaceInterface='Detailed')
                           #WITH(%ClassItem,'EIP_'&%ControlField)
                             #INSERT(%ClassPrompts)
                           #ENDWITH
                         #ENDENABLE
                         #BOXED,WHERE(%False),AT(0,0,0,0)
                            #PROMPT('',@S240),%EIPThisObjectName
                         #ENDBOXED
                       #ENDTAB
                   #ENDSHEET
                #ENDBOXED
              #ENDBUTTON
           #ENDTAB
           #TAB('Column &Specific'),WHERE(%EditInPlaceInterface='Original')
              #BUTTON('Column &Specific'),MULTI(%EditInPlaceList,%EditInPlaceField&' - '&%GetEIPStatus()),AT(,,180),INLINE
                #PROMPT('&Field',FIELD),%EditInPlaceField,WHENACCEPTED(%SetEIPDefaults())
                #PROMPT('&Allow Edit-In-Place',CHECK),%AllowEIP,DEFAULT(%True)
                #ENABLE(%AllowEIP AND %EditInPlaceInterface='Original')
                  #WITH(%ClassItem,'EIP'&%EditInPlaceList)
                    #ENABLE(%EditInPlaceField AND %EditInPlaceInterface='Original')
                      #INSERT(%ClassPrompts)
                    #ENDENABLE
                  #ENDWITH
                #ENDENABLE
              #ENDBUTTON
           #ENDTAB
        #ENDSHEET
      #ENDBOXED
    #ENDBUTTON
  #ENDENABLE
  #PROMPT('&Update Procedure',PROCEDURE),%UpdateProcedure,PROP(PROP:DropWidth,140)
  #BOXED,SECTION
  #PROMPT('Procedure Parameters',@S255),%UpdateProcedureParameters,AT(,,78)
  #BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%UpdateProcedureParameters)),AT(180,2,10,10)
  #ENDBUTTON
  #ENDBOXED
  #PROMPT('&Allow Edit via Popup',CHECK),%EditViaPopup,DEFAULT(1)
#ENDBOXED
#!
#ATSTART
  #EQUATE(%lFoundEIPClass,%False)
  #EQUATE(%lFoundEIPClassMgr,%False)
  #CALL(%ReadABCFiles)
  #FIND(%ControlInstance,%ActiveTemplateParentInstance,%Control)
  #! This will remove the old entries in the ClassItem symbol
  #SET(%lFoundEIPClassMgr,%False)
  #FOR(%ClassItem)
     #SET(%lFoundEIPClass,%False)
     #IF(%ClassItem = 'BrowseEIPManager' AND %lFoundEIPClassMgr = %False)
         #SET(%lFoundEIPClass,%True)
         #SET(%lFoundEIPClassMgr,%True)
     #ELSE
         #IF(%EditInPlaceInterface='Original')
            #FOR(%EditInPlaceList)
                #IF(%ClassItem = 'EIP'&%EditInPlaceList)
                    #SET(%lFoundEIPClass,%True)
                    #BREAK
                #ENDIF
            #ENDFOR
         #ELSE
            #FOR(%ControlField),WHERE(%AllowEIPExt)
                #IF(%ClassItem = 'EIP_'&%ControlField)
                    #SET(%lFoundEIPClass,%True)
                    #BREAK
                #ENDIF
            #ENDFOR
         #ENDIF
     #ENDIF
     #IF(%lFoundEIPClass=%False)
       #DELETE(%ClassItem)
     #ENDIF
  #ENDFOR
  #CALL(%SetClassItem, 'BrowseEIPManager')
  #CALL(%SetClassDefaults, 'BrowseEIPManager', 'BRW' & %ActiveTemplateParentInstance & '::EIPManager', %BrowseEIPManagerType)
  #IF(%EditInPlaceInterface='Original')
    #FOR(%EditInPlaceList)
        #CALL(%SetEIPDefaults)
    #ENDFOR
  #ENDIF
  #IF(%EditInPlaceInterface='Detailed')
    #FOR(%ControlField)
        #IF(%AllowEIPExt)
          #SET(%lFoundEIPClass,%False)
          #FOR(%ClassItem)
              #IF(%ClassItem = 'EIP_'&%ControlField)
                  #SET(%lFoundEIPClass,%True)
                  #BREAK
              #ENDIF
          #ENDFOR
          #IF(%lFoundEIPClass=%False)
            #ADD(%ClassItem,'EIP_'&%ControlField)
          #ENDIF
          #CALL(%SetEIPDefaultsExt)
          #CALL(%SetClassItem, 'EIP_' & %ControlField)
          #SET(%EIPThisObjectName,%ThisObjectName)
        #ENDIF
    #ENDFOR
  #ENDIF
  #DECLARE(%InsertControl)
  #DECLARE(%ChangeControl)
  #DECLARE(%DeleteControl)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #CASE(%ControlOriginal)
    #OF('?Insert')
      #SET(%InsertControl,%Control)
    #OF('?Change')
      #SET(%ChangeControl,%Control)
    #OF('?Delete')
      #SET(%DeleteControl,%Control)
    #ENDCASE
  #ENDFOR
#ENDAT
#!
#!
#AT(%WindowManagerMethodCodeSection,'Init','(),BYTE'),PRIORITY(8500)
  #IF(%UpdateProcedure)
    #IF(%UpdateProcedureParameters)
        #ADD(%ProcsCalled,%UpdateProcedure&'('&%UpdateProcedureParameters&')')
    #ELSE
        #ADD(%ProcsCalled,%UpdateProcedure)
    #ENDIF
    #IF(~%EditInPlace)
%ManagerName.AskProcedure = %(INSTANCE(%ProcsCalled))
    #ENDIF
  #ENDIF
#ENDAT
#!
#AT(%GenerateInstanceUpdate),WHERE(%AcceptToolbarControl AND %GenerateUpdateInstance=0)
  #SET(%GenerateUpdateInstance,%ActiveTemplateInstance)
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'PrimeRecord','(BYTE SuppressClear = 0),BYTE'),PRIORITY(5500)
    #FOR(%PrimingFields)
%PrimedField = %PrimedValue
    #ENDFOR
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'SetAlerts','()'),PRIORITY(4800)
#IF(NOT %EditViaPopup)
SELF.EditViaPopup = False
#ENDIF
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(8500),WHERE(%EditInPlace OR %UpdateProcedure)
#! Insert user defined EditInPlaceClasses
  #FIND(%ControlInstance,%ActiveTemplateParentInstance,%Control)
  #!FIX(%Control,%ListControl)
  #IF (%EditInPlace)
    #IF(%EditInPlaceInterface='Original')
      #FOR(%EditInPlaceList)
        #FIX(%ControlField,%EditInPlaceField)
        #IF (%ControlField)
          #CALL(%SetClassItem,'EIP'&%EditInPlaceList)
          #IF(%AllowEIP)
SELF.AddEditControl(%ThisObjectName,%(%ControlFieldFieldNo()))
          #ELSE
SELF.AddEditControl(,%(%ControlFieldFieldNo())) ! %ControlField Disable
          #ENDIF
        #ELSE
            #ERROR('Unable to find edit-in-place field in list box '&%EditInPlaceField)
        #ENDIF
      #ENDFOR
  #! Disable edit in place for secondary fields (unless overridden by user)
      #FIX(%File,%Primary)
      #FOR(%ControlField),WHERE(~INLIST(%ControlField,%Field))
        #FIND (%EditInPlaceField,%ControlField,%EditInPlaceList)
        #IF (~%EditInPlaceField)
SELF.AddEditControl(,%(%ControlFieldFieldNo()))
        #END
      #ENDFOR
    #ELSE
      #FOR(%ControlField)
        #IF(%AllowEIPExt)
SELF.AddEditControl(%EIPThisObjectName,%(%ControlFieldFieldNo()))
        #ELSE
SELF.AddEditControl(,%(%ControlFieldFieldNo())) ! %ControlField Disable
        #ENDIF
      #ENDFOR
    #ENDIF
    #IF (%EIPTabRemain OR %EIPTabAction <> 'Default')
SELF.TabAction = EIPAction:%EIPTabAction%(CHOOSE(%EIPTabRemain,'+EIPAction:Remain',''))
    #ENDIF
    #IF (%EIPEnterRemain OR %EIPEnterAction <> 'Default')
SELF.EnterAction = EIPAction:%EIPEnterAction%(CHOOSE(%EIPEnterRemain,'+EIPAction:Remain',''))
    #ENDIF
SELF.DeleteAction = EIPAction:%EIPAskOnDelete
    #IF (%EIPFocusAction <> 'Default')
SELF.FocusLossAction = EIPAction:%EIPFocusAction
    #ENDIF
    #IF (%EIPArrowAction <> 'Default' OR %EIPArrowRemain OR %EIPArrowRetain)
SELF.ArrowAction = EIPAction:%EIPArrowAction%(CHOOSE(%EIPArrowRemain,'+EIPAction:Remain',''))%(CHOOSE(%EIPArrowRetain,'+EIPAction:RetainColumn',''))
    #ENDIF
    #IF (%EIPInsertionPoint <> 'After')
SELF.EIP.Insert = EIPAction:%EIPInsertionPoint
    #ENDIF
  #ENDIF
#! Plug control equates into browse engine
#SUSPEND
#?IF WM.Request <> ViewRecord                                   #<! If called for anything other than ViewMode, make the insert, change & delete controls available
  #IF(%InsertControl)
  SELF.InsertControl=%InsertControl
  #ENDIF
  #IF(%ChangeControl)
  SELF.ChangeControl=%ChangeControl
  #ENDIF
  #IF(%DeleteControl)
  SELF.DeleteControl=%DeleteControl
  #ENDIF
#?END
#RESUME
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(6000),WHERE(%EditInPlace)
  #CALL(%SetClassItem, 'BrowseEIPManager')
SELF.EIP &= %ThisObjectName                                     #<! Set the EIP manager
#ENDAT
#!
#!
#AT(%BeforeProcedureCall),WHERE(%ProcsCalled=CHOOSE(%UpdateProcedureParameters,%UpdateProcedure&'('&%UpdateProcedureParameters&')',%UpdateProcedure))
#SUSPEND
#?CASE Request
  #SUSPEND
#?OF InsertRecord
  #EMBED(%BrowseBeforeInsert,'Browser, Before Insert'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
  #RESUME
  #SUSPEND
#?OF DeleteRecord
  #EMBED(%BrowseBeforeDelete,'Browser, Before Delete'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
  #RESUME
  #SUSPEND
#?OF ChangeRecord
  #EMBED(%BrowseBeforeChange,'Browser, Before Change'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
  #RESUME
#?END
#EMBED(%BrowseBoxBeforeUpdate,'Browse Box, before calling the update procedure'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
#RESUME
#ENDAT
#!
#!
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'ResetFromAsk','(*BYTE Request,*BYTE Response)'),PRIORITY(4000)
#EMBED(%BrowseBoxAfterUpdate,'Browse Box, returning from the update procedure'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
#PRIORITY(6000)
#SUSPEND
#?IF VCRRequest=VCR:None
  #SUSPEND
#?CASE Request
    #SUSPEND
#?OF InsertRecord
  #EMBED(%BrowseAfterInsert,'Browser, After Insert'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
    #RESUME
    #SUSPEND
#?OF DeleteRecord
  #EMBED(%BrowseAfterDelete,'Browser, After Delete'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
    #RESUME
    #SUSPEND
#?OF ChangeRecord
  #EMBED(%BrowseAfterChange,'Browser, After Change'),%ActiveTemplateInstance,MAP(%ActiveTemplateInstance,%ActivetemplateInstanceDescription),LEGACY
    #RESUME
#?END
  #RESUME
#?END
#RESUME
#ENDAT
#!
#!
#AT(%EditInPlaceManagerMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall)
#ENDAT
#!
#!
#AT(%BrowserEIPManagerMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall)
#ENDAT
#!
#!
#AT(%LocalProcedures),WHERE(%EditInPlace)
  #FIND(%ControlInstance,%ActiveTemplateParentInstance,%Control)
  #CALL(%GenerateVirtuals, 'BrowseEIPManager', 'Local Objects|Abc Objects|EIP Manager for Browse Using ' & %ListControl, '%BrowseEIPManagerVirtuals(ABC)')
  #IF(%EditInPlaceInterface='Original')
     #FOR(%EditInPlaceList),WHERE(%AllowEIP)
       #CALL(%GenerateVirtuals, 'EIP' & %EditInPlaceList, 'Local Objects|Abc Objects|EIP Field Manager for Browse Using ' & %ListControl & ' for field ' & %EditInPlaceField, '%EIPFieldVirtuals(ABC)')
     #ENDFOR
  #ELSE
     #!FIND(%ControlInstance,%ActiveTemplateParentInstance,%Control)
     #!FIX(%Control,%ListControl)
     #FOR(%ControlField),WHERE(%AllowEIPExt)
       #CALL(%GenerateVirtuals, 'EIP_' & %ControlField, 'Local Objects|Abc Objects|EIP Field Manager for Browse Using ' & %ListControl & ' for field ' & %ControlField, '%EIPFieldVirtualsExt(ABC)')
     #ENDFOR
  #ENDIF
#ENDAT
#!
#!
#AT(%LocalDataClasses),WHERE(%EditInPlace)
  #FIND(%ControlInstance,%ActiveTemplateParentInstance,%Control)
  #!FIX(%Control,%ListControl)
  #IF(%Control=%ListControl)
     #IF(ITEMS(%ControlField))
        #CALL(%GenerateClass, 'BrowseEIPManager', 'Browse EIP Manager for Browse using ' & %ListControl)
        #IF(%EditInPlaceInterface='Original')
           #FOR(%EditInPlaceList)
             #IF(NOT %AllowEIP)
                #CYCLE
             #ENDIF
             #CALL(%GenerateClass, 'EIP'&%EditInPlaceList, 'Edit-in-place class for field '&%EditInPlaceField)
           #ENDFOR
        #ELSE
           #FOR(%ControlField)
             #IF(NOT %ControlField OR NOT %AllowEIPExt)
                #CYCLE
             #ENDIF
             #CALL(%GenerateClass, 'EIP_'&%ControlField, 'Edit-in-place class for field '&%ControlField)
             #IF(%EditInPlaceTypeExt='Calendar')
EIP_%ControlField_Calendar  %CalendarManagerType
             #ENDIF
           #ENDFOR
        #ENDIF
     #ENDIF
  #ENDIF
#ENDAT
#!
#!
#!------------------------------------
#!
#AT(%EditInPlaceManagerMethodDataSection,%ActiveTemplateInstance),PRIORITY(5500)
#!,WHERE(%EditInPlaceInterface='Detailed')
#IF(%EditInPlaceInterface='Detailed')
    #IF(%EditInPlace AND %pClassMethod='Init' AND %pClassMethodPrototype='(UNSIGNED FieldNumber,UNSIGNED ListBox,*? UseVar)')
#INSERT(%EIPConfigureControlData)
    #ENDIF
#ENDIF
#ENDAT
#AT(%EditInPlaceManagerMethodCodeSection,%ActiveTemplateInstance),PRIORITY(5500)
#!,WHERE(%EditInPlaceInterface='Detailed')
#IF(%EditInPlaceInterface='Detailed')
    #IF(%EditInPlace)
        #IF(%pClassMethod='CreateControl' AND %pClassMethodPrototype='()')
#INSERT(%EIPConfigureControlListbox)
        #ENDIF
        #IF(%pClassMethod='Init' AND %pClassMethodPrototype='(UNSIGNED FieldNumber,UNSIGNED ListBox,*? UseVar)')
#INSERT(%EIPConfigureControl)
#INSERT(%EIPConfigureControlMultiSelect)
        #ENDIF
    #ENDIF
#ENDIF
#ENDAT
#AT(%EditInPlaceManagerMethodCodeSection,%ActiveTemplateInstance),PRIORITY(4500),WHERE(%EditInPlaceInterface='Detailed' AND %EditInPlace AND %pClassMethod='AskLookup' AND %pClassMethodPrototype='(BYTE pForce),BYTE' AND %EditInPlaceTypeExt='Lookup')
#!,WHERE(%EditInPlaceInterface='Detailed')
#IF(%EditInPlaceInterface='Detailed')
   #IF(%EditInPlace AND %pClassMethod='AskLookup' AND %pClassMethodPrototype='(BYTE pForce),BYTE' AND %EditInPlaceTypeExt='Lookup')
      #IF(%LookupType='Related Field')
         #FIND(%Key,%PostLookupKey)
         #IF(%Key)
            #FIND(%Field,%ControlField)
            #IF(%File)
               #FOR(%Relation),WHERE(%RelationKey = %PostLookupKey)
                  #IF(%FileRelationType = 'MANY:1')
                     #FOR(%FileKeyField),WHERE(%FileKeyFieldLink)
                        #IF(%FileKeyFieldLink = %PostLookupField)
                           #BREAK
                        #ENDIF
    %FileKeyFieldLink = %FileKeyField
                     #ENDFOR
                  #ENDIF
               #ENDFOR
    UPDATE(SELF.FEQ)
            #ENDIF
         #ENDIF
      #ELSE
    IF pForce
       GlobalRequest = SelectRecord
       UPDATE(SELF.FEQ)
      #ENDIF
   #ENDIF
#ENDIF
    #PRIORITY(4550),DESCRIPTION('Lookup Field Assignment')
#IF(%EditInPlaceInterface='Detailed')
   #IF(%EditInPlace AND %pClassMethod='AskLookup' AND %pClassMethodPrototype='(BYTE pForce),BYTE' AND %EditInPlaceTypeExt='Lookup')
      #IF(%LookupType='Related Field')
         #FIND(%Key,%PostLookupKey)
         #IF(%Key)
            #FIND(%Field,%ControlField)
            #IF(%File)
    %PostLookupField = SELF.UseVar
               #FIND(%Key,%PostLookupKey)
    IF Access:%File.TryFetch(%Key) OR pForce
       GlobalRequest = SelectRecord
               #IF(%PostLookupProcedureParameters)
       %PostLookupProcedure(%PostLookupProcedureParameters)
               #ELSE
       %PostLookupProcedure
               #ENDIF
       IF GlobalResponse = RequestCompleted
               #FIND(%Field,%ControlField)
               #FOR(%Relation),WHERE(%RelationKey = %PostLookupKey)
                  #IF(%FileRelationType = 'MANY:1')
                     #FOR(%FileKeyField),WHERE(%FileKeyFieldLink)
                        #IF(%FileKeyFieldLink = %PostLookupField)
                           #BREAK
                        #ENDIF
           %FileKeyField = %FileKeyFieldLink
                     #ENDFOR
                  #ENDIF
               #ENDFOR
            #ENDIF
         #ENDIF
      #ELSE
               #IF(%PostLookupFieldNoRelated)
       %PostLookupFieldNoRelated = SELF.UseVar
               #ENDIF
               #IF(%PostLookupProcedureParameters)
                  #IF(%PostLookupProcedureReturnValue)
       %PostLookupProcedureReturnValue = %PostLookupProcedure(%PostLookupProcedureParameters)
                  #ELSE
       %PostLookupProcedure(%PostLookupProcedureParameters)
                  #ENDIF
               #ELSE
                  #IF(%PostLookupProcedureReturnValue)
       %PostLookupProcedureReturnValue = %PostLookupProcedure
                  #ELSE
       %PostLookupProcedure
                  #ENDIF
               #ENDIF
       IF GlobalResponse = RequestCompleted
      #ENDIF
    #ENDIF
#ENDIF
           #PRIORITY(4600),DESCRIPTION('Target Field Assignment')
#IF(%EditInPlaceInterface='Detailed')
   #IF(%EditInPlace AND %pClassMethod='AskLookup' AND %pClassMethodPrototype='(BYTE pForce),BYTE' AND %EditInPlaceTypeExt='Lookup')
      #IF(%LookupType='Related Field')
         #FIND(%Key,%PostLookupKey)
         #IF(%Key)
            #FIND(%Field,%ControlField)
            #IF(%File)
           #INSERT(%MoreAssignEIP)
           SELF.UseVar = %PostLookupField
           ReturnValue = EditAction:Ignore
       ELSE
           ReturnValue = EditAction:None
       END
    ELSE
       #INSERT(%MoreAssignEIP)
       ReturnValue = EditAction:Ignore
    END
    RETURN ReturnValue
            #ENDIF
         #ENDIF
      #ELSE
           #INSERT(%MoreAssignEIP)
               #IF(%PostLookupFieldNoRelated)
           SELF.UseVar = %PostLookupFieldNoRelated
               #ENDIF
           ReturnValue = EditAction:Ignore
       ELSE
           ReturnValue = EditAction:None
       END
    ELSE
       #INSERT(%MoreAssignEIP)
       ReturnValue = EditAction:Ignore
    END
    RETURN ReturnValue
      #ENDIF
   #ENDIF
#ENDIF
#ENDAT
#!-----------------------------------------------------------------------
#!
#GROUP(%BrowseEIPManagerVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%BrowserEIPManagerMethodDataSection,'Browse EIP Manager Method Data Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,LABEL,DATA,PREPARE(,,%FixClassName(%FixBaseClassToUse('BrowseEIPManager'))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%BrowserEIPManagerMethodCodeSection,'Browse EIP Manager Method Executable Code Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,PREPARE(,,%FixClassName(%FixBaseClassToUse('BrowseEIPManager'))),TREE(%TreeText & %CodeText)
#!
#!
#GROUP(%EIPFieldVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%EditInPlaceManagerMethodDataSection,'Edit-In-Place Manager Method Executable Data Section'),%ActiveTemplateInstance,%EditInPlaceList,%pClassMethod,%pClassMethodPrototype,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription&' using '&%BaseClassToUse()),MAP(%EditInPlaceList,'Edit-In-Place field '&%EditInPlaceField),PREPARE(,,%FixClassName(%FixBaseClassToUse('EIP'&%EditInPlaceList))),WHERE(%AllowEIP AND %MethodEmbedPointValid()),TREE(%TreeText & %DataText),NOORDER
  #?CODE
  #EMBED(%EditInPlaceManagerMethodCodeSection,'Edit-In-Place Manager Executable Code Section'),%ActiveTemplateInstance,%EditInPlaceList,%pClassMethod,%pClassMethodPrototype,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription&' using '&%BaseClassToUse()),MAP(%EditInPlaceList,'Edit-In-Place field '&%EditInplaceField),WHERE(%AllowEIP AND %MethodEmbedPointValid()),PREPARE(,,%FixClassName(%FixBaseClassToUse('EIP'&%EditInPlaceList))),TREE(%TreeText & %CodeText),NOORDER
#!
#!
#GROUP(%EIPFieldVirtualsExt, %TreeText, %DataText, %CodeText)
#EMBED(%EditInPlaceManagerMethodDataSection,'Edit-In-Place Manager Method Executable Data Section'),%ActiveTemplateInstance,%ControlField,%pClassMethod,%pClassMethodPrototype,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription&' using '&%BaseClassToUse()),MAP(%ControlField,'Edit-In-Place field '&%ControlField),PREPARE(,,%FixClassName(%FixBaseClassToUse('EIP_'&%ControlField))),WHERE(%AllowEIPExt AND %MethodEmbedPointValid()),TREE(%TreeText & %DataText),NOORDER
  #?CODE
  #EMBED(%EditInPlaceManagerMethodCodeSection,'Edit-In-Place Manager Executable Code Section'),%ActiveTemplateInstance,%ControlField,%pClassMethod,%pClassMethodPrototype,MAP(%ActiveTemplateInstance,%ActiveTemplateInstanceDescription&' using '&%BaseClassToUse()),MAP(%ControlField,'Edit-In-Place field '&%ControlField),WHERE(%AllowEIPExt AND %MethodEmbedPointValid()),PREPARE(,,%FixClassName(%FixBaseClassToUse('EIP_'&%ControlField))),TREE(%TreeText & %CodeText),NOORDER
#!
#!----------------------------------------------------------------
#!
#! Grid Extension
#!
#CONTROL(BrowseGrid,'Grid Browse'),DESCRIPTION('Cause Browse to act as grid '),REQ(BrowseBox),HLP('~TPLControlBrowseGrid')
#PREPARE
  #CALL(%ReadABCFiles)
  #CALL(%SetClassDefaults, 'Default', 'BRW' & %ActiveTemplateParentInstance, %GridClass)
  #DECLARE(%GridChildren),MULTI
  #DECLARE(%GridChildrenEvents),MULTI
  #FOR(%Control),WHERE(%ControlParent = %GetControlName())
    #ADD(%GridChildren,%Control)
  #ENDFOR
    #CALL(%FillEventList,%UpdateControl)
#ENDPREPARE
  CONTROLS
       GROUP(''),AT(,,40,40),USE(?GridCell)
  END
  END
#!
#BOXED,SECTION
#PROMPT('Expression for Group Title:',@s255),%GroupTitle,AT(,,78)
#BUTTON('E'),WHENACCEPTED(%SVExpresionEditor(%GroupTitle)),AT(180,2,10,10)
#ENDBUTTON
#ENDBOXED
#PROMPT('Color of Selected Group',Color),%GroupColor
#PROMPT('Update on control event',CHECK),%HaveUpdate
#ENABLE(%HaveUpdate)
  #PROMPT('Update Control:',FROM(%GridChildren)),%UpdateControl,WHENACCEPTED(%FillEventList(%UpdateControl))
  #ENABLE(%UpdateControl),CLEAR
    #PROMPT('Update Control Event:',FROM(%GridChildrenEvents)),%UpdateControlEvent
  #ENDENABLE
#ENDENABLE
#PROMPT('Make group selectable',CHECK),%GroupSelect,DEFAULT(%True)
#ENABLE(%GroupSelect)
  #PROMPT('Forward other control clicks',CHECK),%ForwardClick,DEFAULT(%False)
  #ENABLE(%ForwardClick)
    #PROMPT('Forward other control clicks to :',Control),%GroupPress1
  #ENDENABLE
#ENDENABLE
#!
#!
#ATSTART
  #CALL(%ReadABCFiles)
  #CALL(%SetClassDefaults, 'Default', 'BRW' & %ActiveTemplateParentInstance, %GridClass)
  #DECLARE(%GroupControl)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #SET(%GroupControl,%Control)
  #ENDFOR
  #FIX(%ClassItem, 'Default')
  #EQUATE(%GridObject, %ThisObjectName)
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(8000)
SELF.GroupControl = %GroupControl
#IF (%GroupTitle)
SELF.GroupTitle = %(%StripPling(%GroupTitle))
#ENDIF
#IF (%GroupColor)
SELF.SelColor = %GroupColor
#ENDIF
#IF (%GroupSelect)
SELF.Selectable = %GroupSelect
#ENDIF
#IF (%ForwardClick AND %GroupPress1)
SELF.ClickPress = %GroupPress1
#ENDIF
#IF (%HaveUpdate AND %UpdateControl)
SELF.UpdateControl = %UpdateControl
SELF.UpdateControlEvent = EVENT:%UpdateControlEvent
#ENDIF
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'IsSkelActive','(),BYTE'),PRIORITY(8000)
#EMBED(%InsideIsSkelActive,''),%ActiveTemplateInstance,HIDE
#ENDAT
#AT(%BrowserMethodCodeSection,%ActiveTemplateParentInstance,'AddChildren','()'),PRIORITY(6000)
#FOR(%Control),WHERE(%ControlParent=%GroupControl)
#IF(%ControlUse)
SELF.AddChild(%Control,%ControlUse)
#ELSE
SELF.AddChild(%Control)
#ENDIF
#ENDFOR
#ENDAT
#!
#!----------------------------------------------------------------
#CONTROL(DynamicImage,'Dynamic Image Control'),DESCRIPTION('An image control that changes for each record'),WINDOW,MULTI,HLP('~TPLControlDynamicImage'),REQ(BrowseGrid)
#PREPARE
  #CALL(%ReadABCFiles)
  #CALL(%SetClassDefaults, 'DynImage', 'DynImage'&%ActiveTemplateInstance,%ImageClass)
#ENDPREPARE
   CONTROLS
     IMAGE(),AT(,,40,40),USE(?DynImage)
   END
#BOXED('Dynamic Image Prompts')
  #INSERT(%OOPPrompts)
  #PROMPT('Field to drive image:',FIELD),%ImageField
  #BUTTON('&Classes'),AT(,,170),HLP('~TPLDynamicImage_Classes')
    #WITH(%ClassItem,'DynImage')
      #INSERT(%ClassPrompts)
    #ENDWITH
  #ENDBUTTON
#ENDBOXED
#!
#!
#ATSTART
  #CALL(%ReadABCFiles)
  #CALL(%SetClassDefaults, 'DynImage','DynImage'&%ActiveTemplateInstance,%ImageClass)
  #DECLARE(%ImageControl)
  #SET(%ImageControl,%GetControlName())
  #EQUATE(%BrowseBCT,%ParentInstanceFind('BrowseBox(ABC)'))
#ENDAT
#!
#!
#AT(%GatherObjects)
#CALL(%AddObjectList, 'DynImage')
#ENDAT
#!
#AT(%BrowserMethodCodeSection,%BrowseBCT,'Init','(SIGNED ListBox,*STRING Posit,VIEW V,QUEUE Q,RelationManager RM,WindowManager WM)'),PRIORITY(8000)
SELF.AddItem(%ThisObjectName.RecordProcessor)
%ThisObjectName.AddItem(%ImageControl,%ImageField)
#ENDAT
#!
#AT(%LocalDataClasses)
#INSERT(%GenerateClass, 'DynImage')
#ENDAT
#!
#AT(%DynImageMethodCodeSection),PRIORITY(5000),DESCRIPTION('Parent Call'),WHERE(%ParentCallValid())
  #CALL(%GenerateParentCall(ABC))
#ENDAT
#!
#AT(%LocalProcedures)
  #CALL(%GenerateVirtuals, 'DynImage', 'Local Objects|Abc Objects|Dynamic Image ' & %ImageControl, '%DynImageVirtuals(ABC)')
#ENDAT
#!
#!
#GROUP(%DynImageVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%DynImageMethodDataSection,'Dynamic Image Method Data Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,LABEL,DATA,PREPARE(,%FixClassName(%FixBaseClassToUse('DynImage'))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%DynImageMethodCodeSection,'Dynamic Image Method Executable Code Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,PREPARE(,%FixClassName(%FixBaseClassToUse('DynImage'))),TREE(%TreeText & %CodeText)
#!
#!
#GROUP(%GetEIPStatus),PRESERVE
#IF(%AllowEIP AND %EditInPlaceField AND %EditInPlaceInterface='Original')
  #CALL(%SetClassItem,'EIP'&%EditInPlaceList)
  #RETURN('Enabled using '&%BaseClassToUse())
#ENDIF
#RETURN('Disabled')
#!
#!
#GROUP(%SetEIPDefaults),PRESERVE
  #IF(%EditInPlaceList AND %EditInPlaceField AND %EditInPlaceInterface='Original')
    #CALL(%SetClassDefaults,'EIP'&%EditInPlaceList ,'EditInPlace::'&%EditInPlaceField,%EditInPlaceType)
  #ENDIF
#!
#!----------------------------------------------------------------
#GROUP(%GetEIPStatusExt),PRESERVE,AUTO
#DECLARE(%lFoundS)
  #IF(%EditInPlaceInterface='Detailed')
     #IF(%ControlField AND %AllowEIPExt AND %EditInPlace = %True)
       #SET(%lFoundS,%False)
       #FOR(%ClassItem)
        #IF(%ClassItem='EIP_'&%ControlField)
            #SET(%lFoundS,%True)
            #BREAK
        #ENDIF
       #ENDFOR
       #IF(%lFoundS=%False)
          #ADD(%ClassItem,'EIP_'&%ControlField)
       #ENDIF
       #CALL(%SetClassItem,'EIP_'&%ControlField)
       #IF(NOT %DefaultBaseClassType)
          #SET(%DefaultBaseClassType,%GetEIPDefaultsExt(%EditInPlaceTypeExt))
       #ENDIF
       #RETURN('Enabled using '&%BaseClassToUse())
     #ENDIF
  #ENDIF
#RETURN('Disabled')
#!
#!----------------------------------------------------------------
#GROUP(%GetEIPDefaultsExt,%pEIPType)
    #CASE(UPPER(%pEIPType))
    #OF('ENTRY')
        #RETURN(%EditInPlaceEntryType)
    #OF('TEXT')
        #RETURN(%EditInPlaceTextType)
    #OF('CHECK')
        #RETURN(%EditInPlaceCheckType)
    #OF('SPIN')
        #RETURN(%EditInPlaceSpinType)
    #OF('DROPLIST')
        #RETURN(%EditInPlaceDropListType)
    #OF('DROPCOMBO')
        #RETURN(%EditInPlaceDropComboType)
    #OF('COLOR')
        #RETURN(%EditInPlaceColorType)
    #OF('FILE')
        #RETURN(%EditInPlaceFileType)
    #OF('FONT')
        #RETURN(%EditInPlaceFontType)
    #OF('MULTISELECT')
        #RETURN(%EditInPlaceMultiSelectType)
    #OF('CALENDAR')
        #RETURN(%EditInPlaceCalendarType)
    #OF('LOOKUP')
        #RETURN(%EditInPlaceLookupType)
    #OF('OTHER')
        #RETURN(%EditInPlaceOtherType)
    #ELSE
        #RETURN(%EditInPlaceEntryType)
    #ENDCASE
#!
#!----------------------------------------------------------------
#!DMB
#GROUP(%SetEIPDefaultsExt),PRESERVE,AUTO
#DECLARE(%lFoundS)
  #IF(%EditInPlaceInterface='Detailed')
     #IF(%ControlField AND %AllowEIPExt AND %EditInPlace = %True)
       #SET(%lFoundS,%False)
       #FOR(%ClassItem)
        #IF(%ClassItem='EIP_'&%ControlField)
            #SET(%lFoundS,%True)
            #BREAK
        #ENDIF
       #ENDFOR
       #IF(%lFoundS=%False)
          #ADD(%ClassItem,'EIP_'&%ControlField)
       #ENDIF
       #CALL(%SetClassItem, 'EIP_' & %ControlField)
       #IF(%ClassItem='EIP_' & %ControlField)
          #CALL(%SetClassDefaults,'EIP_'&%ControlField ,'EditInPlace::'&%ControlField,%GetEIPDefaultsExt(%EditInPlaceTypeExt))
       #ENDIF
     #ENDIF
  #ENDIF
#!------------------------------------------------------------------------------------------------------
#GROUP(%BuildQueueFields,%ManagerName,%ControlID,%pDoNotIncludePrimaryKey=0),PRESERVE
#!First add browse display fields to queue
  #FIX(%Control,%ControlID)
  #FOR(%ControlField)
    #SET(%ValueConstruct,%ControlField)
    #INSERT(%CleanDimensions)
    #ADD(%QueueField,%ValueConstruct)
    #SET(%QueueFieldAssignment,%ControlField)
    #SET(%QueueFieldComment,'List box control field')
    #SET(%QueueFieldHasColor,%ControlFieldHasColor)
    #SET(%QueueFieldHasTree,%ControlFieldHasTree)
    #SET(%QueueFieldHasStyle,%ControlFieldHasStyle)
    #SET(%QueueFieldHasTip,%ControlFieldHasTip)
    #SET(%QueueFieldHasIcon,%ControlFieldHasIcon)
    #IF(%ControlFieldHasIcon)
      #IF(%ControlFieldIcon)
        #INSERT(%AddBrowseIcon,%ControlFieldIcon,%ControlFieldIconIsNumber)
      #ENDIF
      #FOR(%ConditionalIcons)
        #INSERT(%AddBrowseIcon,%ConditionalControlFieldIcon,%ConditionalControlFieldIconIsNumber)
      #ENDFOR
    #ENDIF
  #ENDFOR
#!
#!2nd append hot field to queue
  #FOR(%HotFields),WHERE(~%HotFieldBindOnly)
    #SET(%ValueConstruct,%HotField)
    #INSERT(%CleanDimensions)
    #IF(~INLIST(%ValueConstruct,%QueueField))
      #ADD(%QueueField,%ValueConstruct)
      #SET(%QueueFieldAssignment,%HotField)
      #SET(%QueueFieldComment,'Browse hot field')
    #ENDIF
  #ENDFOR
#!
#IF(NOT %pDoNotIncludePrimaryKey)
#!3rd append primary key fields to queue
  #FIX(%File,%Primary)
  #FIX(%Key,%FilePrimaryKey)
  #FOR(%KeyField)
    #IF(~INLIST(%KeyField,%QueueField))
      #ADD(%QueueField,%KeyField)
      #SET(%QueueFieldAssignment,%KeyField)
      #SET(%QueueFieldComment,'Primary key field')
    #ENDIF
  #ENDFOR
#ENDIF
#!--------------------------------------------------------------
#GROUP(%ErrorBrowseInvalidRangeField)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('    The range field specified is not in the current key!')
#IF(%BrowseCondition)
  #ERROR('   Browse Condition: ' & %BrowseCondition)
#ELSE
  #ERROR('   Browse Condition: Default Browse Behavior')
#ENDIF
#ERROR('   Current Key: ' & %BrowseKey)
#IF(%RangeField)
  #ERROR('   Range Field: ' & %RangeField)
#ELSE
  #ERROR('   Range Field: None')
#ENDIF
#!--------------------------------------------------------------
#GROUP(%ErrorRelationshipMissing)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('A file relationship range limit was specified, but')
#ERROR('no relationship to the file specified could be found!')
#ERROR('Range Field: ' & %RangeField)
#ERROR('Range File:  ' & %RangeFile)
#!--------------------------------------------------------------
#GROUP(%ErrorLimitFieldMissing)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('A single value range limit was specified, but')
#ERROR('no value was provided!')
#ERROR('   Range Field: ' & %RangeField)
#!--------------------------------------------------------------
#GROUP(%ErrorBrowseLimitFieldMissing)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('A single value range limit was specified, but')
#ERROR('no value was provided!')
#IF(%BrowseCondition)
  #ERROR('Browse Condition: ' & %BrowseCondition)
#ELSE
  #ERROR('Browse Condition: Default Browse Behavior')
#ENDIF
#ERROR('Current Key: ' & %BrowseKey)
#ERROR('   Range Field: ' & %RangeField)
#!--------------------------------------------------------------
#GROUP(%ErrorBrowseLowLimitMissing)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('A range of values range limit was specified, but')
#ERROR('no low value was provided!')
#IF(%BrowseCondition)
  #ERROR('Browse Condition: ' & %BrowseCondition)
#ELSE
  #ERROR('Browse Condition: Default Browse Behavior')
#ENDIF
#ERROR('Current Key: ' & %BrowseKey)
#ERROR('   Range Field: ' & %RangeField)
#!--------------------------------------------------------------
#GROUP(%ErrorBrowseHighLimitMissing)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('A range of values range limit was specified, but')
#ERROR('no high value was provided!')
#IF(%BrowseCondition)
  #ERROR('Browse Condition: ' & %BrowseCondition)
#ELSE
  #ERROR('Browse Condition: Default Browse Behavior')
#ENDIF
#ERROR('Current Key: ' & %BrowseKey)
#ERROR('   Range Field: ' & %RangeField)
#!--------------------------------------------------------------
#GROUP(%ErrorBrowseRelationshipMissing)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('A file relationship range limit was specified, but')
#ERROR('no relationship to the file specified could be found!')
#IF(%BrowseCondition)
  #ERROR('Browse Condition: ' & %BrowseCondition)
#ELSE
  #ERROR('Browse Condition: Default Browse Behavior')
#ENDIF
#ERROR('Current Key: ' & %BrowseKey)
#ERROR('Range Field: ' & %RangeField)
#ERROR('Range File:  ' & %RangeFile)
#!--------------------------------------------------------------
#GROUP(%ErrorBrowseLocatorNoFreeKey)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('A locator was specified, but no free key element')
#ERROR('exists!')
#IF(%BrowseCondition)
  #ERROR('Browse Condition: ' & %BrowseCondition)
#ELSE
  #ERROR('Browse Condition: Default Browse Behavior')
#ENDIF
#ERROR('Current Key: ' & %BrowseKey)
#ERROR('Locator Type:' & %BrowseLocatorType)
#ERROR('Range Field: ' & %BrowseRangeField)
#!--------------------------------------------------------------
#GROUP(%ErrorBrowseLocatorNoEntryControl)
#ERROR('Template Error in Procedure: ' & %Procedure)
#ERROR('An Entry locator was specified, but no entry control')
#ERROR('exists for the free key element!  Using STEP locator')
#IF(%BrowseCondition)
  #ERROR('Browse Condition: ' & %BrowseCondition)
#ELSE
  #ERROR('Browse Condition: Default Browse Behavior')
#ENDIF
#ERROR('Current Key: ' & %BrowseKey)
#ERROR('Locator Type:' & %LocatorType)
#ERROR('Range Field: ' & %RangeField)
#!
#!
#GROUP(%SetBothTypes,%InstanceNumber)
  #IF(%InstanceNumber=0)
    #CALL(%SetLocatorClass,%InstanceNumber,%LocatorType)
  #ELSE
    #CALL(%SetLocatorClass,%InstanceNumber,%SortLocatorType)
  #ENDIF
  #CALL(%SetStepClass,%InstanceNumber)
#!
#!
#GROUP(%SetLocatorClass,%InstanceNumber,%LocatorType,%pParentPrefix='')
#IF(%pParentPrefix='')
    #SET(%pParentPrefix,'BRW'&%ActiveTemplateInstance&'::Sort')
#ENDIF
#CASE(%LocatorType)
#OF('')
#OROF('None')
#OROF('Step')
  #CALL(%SetClassDefaults, 'Locator'&%InstanceNumber,%pParentPrefix&%InstanceNumber&':Locator',%StepLocatorType)
#OF('Entry')
  #CALL(%SetClassDefaults, 'Locator'&%InstanceNumber,%pParentPrefix&%InstanceNumber&':Locator',%EntryLocatorType)
#OF('Incremental')
  #CALL(%SetClassDefaults, 'Locator'&%InstanceNumber,%pParentPrefix&%InstanceNumber&':Locator',%IncrementalLocatorType)
#OF('Filtered')
  #CALL(%SetClassDefaults, 'Locator'&%InstanceNumber,%pParentPrefix&%InstanceNumber&':Locator',%FilteredLocatorType)
#ELSE
  #ASSERT(%False,'%SetLocatorType: %LocatorType contains unknown value '&%LocatorType)
#ENDCASE
#CLEAR(%ActualDefaultBaseClassType)
#!
#!
#GROUP(%SetStepClass,%InstanceNumber)
#IF(%ScrollBehavior='Movable Thumb' AND %LoadMethod='Page')
  #CALL(%SetClassDefaults,'Step'&%InstanceNumber,'BRW'&%ActiveTemplateInstance&'::Sort'&%InstanceNumber&':StepClass',%StepManagerType)
#ENDIF
#CLEAR(%ActualDefaultBaseClassType)
#!
#!
#GROUP(%SetQBEs,%Interface)
  #CALL(%SetClassDefaults, 'QBEClass','QBE'&%ActiveTemplateInstance,%GetQBEClass(%Interface))
  #CALL(%SetClassDefaults, 'QBEVisual','QBV'&%ActiveTemplateInstance,%GetQBEVisualClass(%Interface))
#!
#!
#GROUP(%GetQBEClass,%Interface)
  #CASE(%Interface)
  #OF('FORM')
    #RETURN(%QBEFormType)
  #OF('LIST')
    #RETURN(%QBEListType)
  #ELSE
    #ASSERT(%False,'Unknown QBE form type')
  #END
#!
#!
#GROUP(%GetQBEVisualClass,%Interface)
  #CASE(%Interface)
  #OF('FORM')
    #RETURN(%QBEFormVisualType)
  #OF('LIST')
    #RETURN(%QBEListVisualType)
  #ELSE
    #ASSERT(%False,'Unknown QBE visual type')
  #END
#!
#!
#!
#!
#GROUP(%QueryPopulationPrompts)
#BUTTON('Fields'),MULTI(%QBEFields,%QBETitle & '-' & %QBEField),AT(100)
  #PROMPT('Field :',FIELD),%QBEField,WHENACCEPTED(%QBESetPictureAndField(%QBEField,%QBEPicture,%QBETitle))
  #PREPARE
     #IF(%QBEField)
         #CALL(%QBESetTitle,%QBEField,%QBETitle)
         #CALL(%QBESetPicture,%QBEField,%QBEPicture)
     #ENDIF
  #ENDPREPARE
  #PROMPT('Title :',@S40),%QBETitle
  #PROMPT('Picture :',PICTURE),%QBEPicture
  #ENABLE(UPPER(SUB(%QBEPicture,2,1))='S')
   #PROMPT('Caseless',CHECK),%QBENoCase,DEFAULT(1)
  #ENDENABLE
  #ENABLE(%Interface='FORM' AND UPPER(SUB(%QBEPicture,2,1))<>'S')
   #PROMPT('Disable Begins\Contains',CHECK),%QBEForceEditPicture,Default(1)
  #ENDENABLE
#ENDBUTTON
#GROUP(%QueryPopulation)
#FOR(%QBEFields)
    #CALL(%QBESetTitle,%QBEField,%QBETitle)
    #IF(%QBEPicture)
%ThisObjectName.AddItem('%(CHOOSE(%QBENoCase,'UPPER('&%QBEField&')',%QBEField))','%'QBETitle','%QBEPicture',%QBEForceEditPicture)
    #ELSE
       #CALL(%QBESetPicture,%QBEField,%QBEPicture)
%ThisObjectName.AddItem('%(CHOOSE(%QBENoCase,'UPPER('&%QBEField&')',%QBEField))','%'QBETitle','%QBEPicture',%QBEForceEditPicture)
    #ENDIF
#ENDFOR
#!
#GROUP(%QBESetPictureAndField,%pQBEField,*%pQBEPicture,*%pQBETitle),AUTO
#CALL(%QBESetPicture,%pQBEField,%pQBEPicture)
#CALL(%QBESetTitle,%pQBEField,%pQBETitle)
#!
#GROUP(%QBESetTitle,%pQBEField,*%pQBETitle),AUTO
#IF(CLIP(%pQBETitle)='')
   #FIND(%Field, %pQBEField)
   #IF(%Field)
       #SET(%pQBETitle,%FieldID)
   #ENDIF
#ENDIF
#!
#GROUP(%QBESetPicture,%pQBEField,*%pQBEPicture),AUTO
#IF(CLIP(%pQBEPicture)='')
   #FIND(%Field, %pQBEField)
   #IF(%Field)
      #SET(%pQBEPicture,%FieldDisplayPicture)
   #ENDIF
#ENDIF
#!-------------------------------------------------------------------------
#GROUP(%QBEParseView)
#DECLARE(%PreviouslyAddedField),MULTI
#DECLARE(%QField)
#DECLARE(%LB,LONG)
#EQUATE(%QBEFieldFound,%False)
#FIX(%File,%Primary)
#FOR(%QueueField)
  #SET(%LB, INSTRING('[',%QueueFieldAssignment,1,1))
  #IF(%LB > 1)
    #SET(%QField, SLICE (%QueueFieldAssignment, 1, %LB-1))
  #ELSE
    #SET(%QField, %QueueFieldAssignment)
  #ENDIF
  #FIX(%Field,%QField)
  #IF(%Field)
    #FIX(%PreviouslyAddedField,%Field)
    #IF(NOT(%PreviouslyAddedField))
      #ADD(%PreviouslyAddedField,%Field)
%ThisObjectName.AddItem('%Field','%FieldHeader','%FieldPicture')
    #ENDIF
  #ENDIF
#ENDFOR
#FOR(%Secondary),WHERE(%SecondaryTo=%Primary)
  #INSERT(%QBEParseSecondary,%Primary,%Secondary)
#ENDFOR
#IF(~ITEMS(%PreviouslyAddedField)) #! View is empty all fields are PROJECTED.
 #FIX(%File,%Primary)
 #FOR(%Field)
  #ADD(%PreviouslyAddedField,%Field)
%ThisObjectName.AddItem('%Field','%FieldHeader','%FieldPicture')
 #ENDFOR
 #FOR(%Secondary),WHERE(%SecondaryTo=%Primary)
  #INSERT(%QBEParseSecondaryFile,%Primary,%Secondary)
 #ENDFOR
#ENDIF
#!-------------------------------------------------------------------------
#GROUP(%QBEParseSecondary,%CurrentPrimary,%CurrentSecondary)
#FIX(%File,%CurrentSecondary)
#FIX(%Relation,%CurrentPrimary)
#FOR(%RelationKeyField),WHERE(%RelationKeyFieldLink AND %RelationKeyField)
  #FIX(%QueueField,%RelationKeyField)
  #IF(NOT %QueueField)
    #FIX(%PreviouslyAddedField,%RelationKeyField)
    #IF(NOT(%PreviouslyAddedField))
      #ADD(%PreviouslyAddedField,%RelationKeyField)
%ThisObjectName.AddItem('%Field','%FieldHeader','%FieldPicture')
    #ENDIF
  #ENDIF
#ENDFOR
#!---------------------------------------------------------------------
#GROUP(%QBEParseSecondaryFile,%CurrentPrimary,%CurrentSecondary)
#FIX(%File,%CurrentSecondary)
#FIX(%PreviouslyAddedField,%Field)
#IF(NOT(%PreviouslyAddedField))
 #ADD(%PreviouslyAddedField,%Field)
 #SET(%QBEFieldFound,%True)
%ThisObjectName.AddItem('%Field','%FieldHeader','%FieldPicture')
#ENDIF
#!---------------------------------------------------------------------
#GROUP(%QBEPrompts)
#RESTRICT
 #IF(UPPER(%ProcedureTemplate)='REPORT' OR UPPER(%ProcedureTemplate) = 'PROCESS')
  #ACCEPT
 #ELSE
  #FOR(%ActiveTemplate),WHERE(%ActiveTemplate='BrowseBox(ABC)')
   #ACCEPT
  #ENDFOR
  #REJECT
 #ENDIF
#ENDRESTRICT
#PREPARE
  #CALL(%ReadABCFiles)
  #CALL(%SetQBEs,%Interface)
#ENDPREPARE
#BUTTON('&QBE Options'),AT(,,180),HLP('~TPLControlBrowseQBEButton')
  #BOXED('QBE Prompts'),AT(0,0),WHERE(%False),HIDE
    #INSERT(%OOPHiddenPrompts)
  #ENDBOXED
  #SHEET,HSCROLL
    #TAB('&General')
     #BOXED('')
      #PROMPT('QBE Family:',@s255),%QBEFamily,REQ,DEFAULT(%Procedure)
      #PROMPT('QBE &Interface',DROP('Form[FORM]|List[LIST]')),%Interface,WHENACCEPTED(%SetQBEs(%Interface)),DEFAULT('FORM')
      #PROMPT('Auto Populate',CHECK),%AutoPopulate,DEFAULT(1)
      #ENABLE(%AutoPopulate)
       #PROMPT('Caseless Auto Populate',CHECK),%CaselessAutoPopulate,DEFAULT(1)
      #ENDENABLE
      #ENABLE(~%AutoPopulate)
        #INSERT(%QueryPopulationPrompts)
      #ENDENABLE
      #BOXED,WHERE(UPPER(%ProcedureTemplate)='REPORT' OR UPPER(%ProcedureTemplate)='PROCESS')
       #PROMPT('Use current query',CHECK),%UseMRU
      #ENDBOXED
      #PROMPT('Retain Query',CHECK),%RetainQuery,DEFAULT(1)
      #PROMPT('Use on startup',CHECK),%StartQuery,DEFAULT(0)
      #PROMPT('Result Control',CONTROL),%QueryResultControl
      #ENABLE(~(UPPER(%ProcedureTemplate)='REPORT' OR UPPER(%ProcedureTemplate)='PROCESS'))
       #PROMPT('Auto-share between tabs',CHECK),%AutoShare,DEFAULT(0)
       #BOXED('Quick QBE Settings')
        #PROMPT('Quick QBE Support',CHECK),%QkSupport,DEFAULT(1)
        #ENABLE(%QkSupport)
         #PROMPT('Submenu Icon:',@s255),%QkMenuIcon,DEFAULT('QkQBE.ico')
         #PROMPT('Query Icon:',@s255),%QkIcon,DEFAULT('QkLoad.ico')
        #ENDENABLE
       #ENDBOXED
      #ENDENABLE
     #ENDBOXED
    #ENDTAB
    #TAB('&QBE Class')
      #WITH(%ClassItem,'QBEClass')
        #INSERT(%ClassPrompts)
      #ENDWITH
    #ENDTAB
    #TAB('QBE &Visual Class')
      #WITH(%ClassItem,'QBEVisual')
        #INSERT(%ClassPrompts)
      #ENDWITH
    #ENDTAB
  #ENDSHEET
#ENDBUTTON
#!---------------------------------------------------------------------
#GROUP(%QBEStart)
  #IF(UPPER(%ProcedureTemplate)='REPORT' OR UPPER(%ProcedureTemplate) = 'PROCESS')
   #EQUATE(%PauseFound,%False)
   #FOR(%ActiveTemplate),WHERE(%ActiveTemplate='PauseButton(ABC)')
    #SET(%PauseFound,%True)
   #ENDFOR
   #IF(~%PauseFound)
    #ERROR('A Pause button is required for the Process\Report to wait for the user to be able to use the QBE functionality.')
   #ENDIF
  #ENDIF
  #CALL(%ReadABCFiles)
  #CALL(%SetQBEs,%Interface)
  #DECLARE(%QControl)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #SET(%QControl,%Control)
  #ENDFOR
#!---------------------------------------------------------------------
#GROUP(%QBEGatherObjects)
  #CALL(%AddObjectList, 'QBEClass')
  #CALL(%AddObjectList, 'QBEVisual')
#!---------------------------------------------------------------------
#GROUP(%QBEWinManInit)
#CALL(%SetClassItem,'QBEVisual')
#EQUATE(%VisualClass,%ThisObjectName)
#CALL(%SetClassItem,'QBEClass')
%ThisObjectName.Init(%VisualClass, INIMgr,'%QBEFamily', GlobalErrors)
#!---------------------------------------------------------------------
#GROUP(%QBEWinManAfterWinOpen)
#IF(UPPER(%ProcedureTemplate)='PROCESS' OR UPPER(%ProcedureTemplate) = 'REPORT')
SELF.QueryControl = %QControl
#ELSE
%ManagerName.QueryControl = %QControl
#ENDIF
#IF(%AutoPopulate)
 #IF(UPPER(%ProcedureTemplate)='PROCESS' OR UPPER(%ProcedureTemplate) = 'REPORT')
%ProcessObjectName.Query &= %ThisObjectName
#INSERT(%QBEParseView)
#IF(%UseMRU)
%ThisObjectName.Restore('tsMRU')
%ProcessObjectName.SetFilter(%ThisObjectName.GetFilter())
#ENDIF
 #ELSE
%ManagerName.UpdateQuery(%ThisObjectName,%CaselessAutoPopulate)
 #ENDIF
#ELSE
%ManagerName.Query &= %ThisObjectName
#INSERT(%QueryPopulation)
#ENDIF
#!---------------------------------------------------------------------
#GROUP(%QBEAsk)
SELF.Reset
#!---------------------------------------------------------------------
#GROUP(%QBETakeLocate)
#IF(%StartQuery)
%ManagerName.TakeLocate
#ENDIF
#!---------------------------------------------------------------------
#GROUP(%QBELocalDataClasses)
#INSERT(%GenerateClass, 'QBEClass', 'QBE List Class. ')
#INSERT(%GenerateClass, 'QBEVisual', 'QBE Visual Class')
#!---------------------------------------------------------------------
#GROUP(%QBELocalProcedures)
  #CALL(%GenerateVirtuals, 'QBEClass', 'Local Objects|Abc Objects|QBE for ' & %Primary, '%QBEVirtuals(ABC)')
  #CALL(%GenerateVirtuals, 'QBEVisual', 'Local Objects|Abc Objects|QBE Visual for ' & %Primary, '%QBEVisualVirtuals(ABC)')
#!
#!
#!---------------------------------------------------------------------
#GROUP(%QBEVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%QBEMethodDataSection,'QBE Method Data Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,LABEL,DATA,PREPARE(,%FixClassName(%FixBaseClassToUse('QBEClass'))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%QBEMethodCodeSection,'QBE Method Executable Code Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,PREPARE(,%FixClassName(%FixBaseClassToUse('QBEClass'))),TREE(%TreeText & %CodeText)
#!
#!
#GROUP(%QBEVisualVirtuals, %TreeText, %DataText, %CodeText)
#EMBED(%QBEVisualMethodDataSection,'QBE Visual Method Data Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,LABEL,DATA,PREPARE(,%FixClassName(%FixBaseClassToUse('QBEVisual'))),TREE(%TreeText & %DataText)
  #?CODE
  #EMBED(%QBEVisualMethodCodeSection,'QBE Visual Method Executable Code Section'),%ActiveTemplateInstance,%pClassMethod,%pClassMethodPrototype,PREPARE(,%FixClassName(%FixBaseClassToUse('QBEVisual'))),TREE(%TreeText & %CodeText)
#!
#!
#!---------------------------------------------------------------------
#GROUP(%QBERelationManagerInit)
#IF(%AutoShare)
SELF.QueryShared = 1
#ENDIF
#IF(%QueryResultControl)
  #FIX(%Control,%QueryResultControl)
  #IF(~%Control)
    #SET(%QueryResultControl,%NULL)
  #ELSE
SELF.QueryResult = %QueryResultControl
  #ENDIF
#ENDIF
#!
#!
#GROUP(%FillEventList, %Ctrl),PRESERVE,AUTO
  #FIX(%Control, %Ctrl)
    #EQUATE(%Temp, %UpdateControlEvent)
    #FREE(%GridChildrenEvents)
    #FOR(%ControlEvent)
        #ADD(%GridChildrenEvents, %ControlEvent)
    #END
    #IF (~INLIST(%Temp, %GridChildrenEvents))
      #CLEAR(%UpdateControlEvent)
        #SELECT(%GridChildrenEvents, 1)
        #SET(%UpdateControlEvent, %GridChildrenEvents)
    #ENDIF
#!
#!
#!
#!
#GROUP(%isSQL),PRESERVE
#FIX(%File, %Primary)
#FIX(%Driver, %FileDriver)
#RETURN(%DriverSQL)
#!
#!
#GROUP(%SQLBuildViewFields),PRESERVE,AUTO
#DECLARE(%ValueConstruct)
#PURGE(%SQLViewFields)
#FIX(%Control,%GetControlName())
#FOR(%ControlField)
  #SET(%ValueConstruct, %ControlField)
  #INSERT(%CleanDimensions)
  #ADD(%SQLViewFields, %ValueConstruct)
#ENDFOR
#FOR(%HotFields),WHERE(~%HotFieldBindOnly)
  #SET(%ValueConstruct,%HotField)
  #INSERT(%CleanDimensions)
  #IF(~INLIST(%ValueConstruct, %SQLViewFields))
    #ADD(%SQLViewFields, %ValueConstruct)
  #ENDIF
#ENDFOR
#FIX(%File,%Primary)
#FIX(%Key,%FilePrimaryKey)
#FOR(%KeyField)
  #IF(~INLIST(%KeyField, %SQLViewFields))
    #ADD(%SQLViewFields, %KeyField)
  #ENDIF
#ENDFOR
#FOR(%SQLAssignments)
  #IF(~INLIST(%SQLViewField, %SQLViewFields))
    #DELETE(%SQLAssignments)
  #ENDIF
#ENDFOR
#!
#!
#!
#!-----------------------------------------------------------------------
#!
#GROUP(%EIPConfigureControlListbox)
    #IF(%EditInPlaceTypeExt='DropList' OR %EditInPlaceTypeExt='DropCombo')
        #IF(%EditInPlaceFEQFrom)
          #IF(%EditInPlaceTypeExt='DropCombo')
            #IF(%EditInPlaceFEQFrom)
                #IF(%EditInPlaceFEQColumnFrom)
SELF.SetFrom(%EditInPlaceFEQFrom,%EditInPlaceFEQColumnFrom)
                #ELSE
SELF.SetFrom(%EditInPlaceFEQFrom)
                #ENDIF
            #ENDIF
            #IF(%EditInPlaceFEQEntryCompletion)
SELF.SetEntryCompletion(%(CHOOSE(%EditInPlaceFEQEntryCompletion,'True','False')))
            #ENDIF
          #ELSE
SELF.FEQ{PROP:FROM}=%EditInPlaceFEQFrom
          #ENDIF
        #ENDIF
        #IF(%EditInPlaceFEQListFormat)
SELF.FEQ{PROP:FORMAT}='%'EditInPlaceFEQListFormat'
        #ENDIF
        #IF(%EditInPlaceFEQDrop)
SELF.FEQ{PROP:DROP}=%EditInPlaceFEQDrop
        #ENDIF
        #IF(%EditInPlaceFEQWidth)
SELF.FEQ{PROP:DropWidth}=%EditInPlaceFEQWidth
        #ENDIF
        #IF(%EditInPlaceFEQHorizontal)
SELF.FEQ{PROP:HSCROLL}=True
        #ENDIF
        #IF(%EditInPlaceFEQVertical)
SELF.FEQ{PROP:VSCROLL}=True
        #ENDIF
        #IF(%EditInPlaceFEQImmediate AND %EditInPlaceTypeExt='DropCombo')
SELF.FEQ{PROP:IMM}=True
        #ENDIF
        #IF(%EditInPlaceTypeExt='DropCombo')
            #CASE(%EditInPlaceFEQCase)
            #OF('Uppercase')
SELF.FEQ{PROP:UPR}=True
            #OF('Capitalize')
SELF.FEQ{PROP:CAP}=True
            #ENDCASE
        #ENDIF
    #ENDIF
#GROUP(%EIPConfigureControl),AUTO
#DECLARE(%DOSDialogSetings)
    #IF(%EditInPlaceFEQJust<>'Default' AND %EditInPlaceTypeExt<>'Check')
        #CASE(%EditInPlaceFEQJust)
        #OF('Left')
SELF.FEQ{PROP:LEFT}=True
        #OF('Right')
SELF.FEQ{PROP:RIGHT}=True
        #OF('Centered')
SELF.FEQ{PROP:CENTERED}=True
        #OF('Decimal')
SELF.FEQ{PROP:DECIMAL}=True
        #ENDCASE
    #ENDIF
    #IF(%EditInPlaceFEQOffset AND %EditInPlaceTypeExt<>'Check')
        #CASE(%EditInPlaceFEQJust)
        #OF('Left')
SELF.FEQ{PROP:LEFT,2}=%EditInPlaceFEQOffset
        #OF('Right')
SELF.FEQ{PROP:RIGHT,2}=%EditInPlaceFEQOffset
        #OF('Centered')
SELF.FEQ{PROP:CENTERED,2}=%EditInPlaceFEQOffset
        #OF('Decimal')
SELF.FEQ{PROP:DECIMAL,2}=%EditInPlaceFEQOffset
        #ENDCASE
    #ENDIF
    #IF(%EditInPlaceTypeExt='Check')
        #CASE(%EditInPlaceFEQCheckJust)
        #OF('Left')
SELF.FEQ{PROP:LEFT}=True
        #OF('Right')
SELF.FEQ{PROP:RIGHT}=True
        #ENDCASE
        #IF(%EditInPlaceFEQTrue)
SELF.FEQ{PROP:TrueValue}=%EditInPlaceFEQTrue
        #ENDIF
        #IF(%EditInPlaceFEQFalse)
SELF.FEQ{PROP:FalseValue}=%EditInPlaceFEQFalse
        #ENDIF
    #ENDIF
    #IF(%EditInPlaceFEQTransparent)
SELF.FEQ{PROP:TRN}=True
    #ENDIF
    #IF(%EditInPlaceFEQForegroundNormal<>-1)
SELF.FEQ{PROP:FontColor}=%EditInPlaceFEQForegroundNormal
    #ENDIF
    #IF(%EditInPlaceFEQBackgroundNormal<>-1)
SELF.FEQ{PROP:Background}=%EditInPlaceFEQBackgroundNormal
    #ENDIF
    #IF(%EditInPlaceTypeExt<>'Check')
       #IF(%EditInPlaceFEQForegroundSelected<>-1)
SELF.FEQ{PROP:SelectedColor}=%EditInPlaceFEQForegroundSelected
       #ENDIF
       #IF(%EditInPlaceFEQBackgroundSelected<>-1)
SELF.FEQ{PROP:SelectedFillColor}=%EditInPlaceFEQBackgroundSelected
       #ENDIF
    #ELSE
SELF.FEQ{PROP:TEXT}=%EditInPlaceFEQFixedDataSourceText
    #ENDIF
    #IF(%EditInPlaceTypeExt<>'Entry' AND %EditInPlaceFEQFlat)
SELF.FEQ{PROP:Flat}=True
    #ENDIF
    #IF(%EditInPlaceTypeExt<>'DropList' AND %EditInPlaceTypeExt<>'Check')
       #IF(%EditInPlaceFEQPicture AND %EditInPlaceTypeExt<>'Text')
SELF.FEQ{PROP:TEXT}='%'EditInPlaceFEQPicture'
       #ENDIF
       #CASE(%EditInPlaceFEQCase)
       #OF('Uppercase')
SELF.FEQ{PROP:UPR}=True
       #OF('Capitalize')
SELF.FEQ{PROP:CAP}=True
       #ENDCASE
       #CASE(%EditInPlaceFEQEntryMode)
       #OF('Insert')
SELF.FEQ{PROP:INS}=True
       #OF('Overwrite')
SELF.FEQ{PROP:OVR}=True
       #ENDCASE
       #IF(%EditInPlaceFEQPassword)
SELF.FEQ{PROP:PASSWORD}=True
       #ENDIF
    #ENDIF
    #IF(%EditInPlaceTypeExt='Spin')
        #IF(%EditInPlaceFEQLower<>0)
SELF.FEQ{PROP:RangeLow}=%EditInPlaceFEQLower
        #ENDIF
        #IF(%EditInPlaceFEQUpper<>0)
SELF.FEQ{PROP:RangeHigh}=%EditInPlaceFEQUpper
        #ENDIF
        #IF(%EditInPlaceFEQStep>0)
SELF.FEQ{PROP:STEP}=%EditInPlaceFEQStep
        #ENDIF
    #ENDIF
#CASE(%EditInPlaceTypeExt)
#OF('Text')
#OROF('Font')
#OROF('Color')
#OROF('MultiSelect')
#OROF('File')
    #IF(%EditInPlaceFEQTitle)
SELF.Title='%'EditInPlaceFEQTitle'
    #ENDIF
    #IF(%EditInPlaceTypeExt='File')
      #SET(%DOSDialogSetings,'')
      #IF(%ReturnToOriginalDir)
         #SET(%DOSDialogSetings,'FILE:KeepDIR')
      #ENDIF
      #IF(%AllowLongFilenames)
         #IF(%DOSDialogSetings)
            #SET(%DOSDialogSetings,CLIP(%DOSDialogSetings)&'+FILE:LongName')
         #ELSE
            #SET(%DOSDialogSetings,'FILE:LongName')
         #ENDIF
      #ENDIF
      #CASE(%DOSFileDialogType)
      #OF('Open')
      #OF('Save')
         #IF(%DOSDialogSetings)
            #SET(%DOSDialogSetings,CLIP(%DOSDialogSetings)&'+FILE:Save')
         #ELSE
            #SET(%DOSDialogSetings,'FILE:Save')
         #ENDIF
      #OF('Directory')
         #IF(%DOSDialogSetings)
            #SET(%DOSDialogSetings,CLIP(%DOSDialogSetings)&'+FILE:Directory')
         #ELSE
            #SET(%DOSDialogSetings,'FILE:Directory')
         #ENDIF
      #ENDCASE
      #IF(%AllowMultiSelect)
         #IF(%DOSDialogSetings)
            #SET(%DOSDialogSetings,CLIP(%DOSDialogSetings)&'+FILE:Multi')
         #ELSE
            #SET(%DOSDialogSetings,'FILE:Multi')
         #ENDIF
      #ENDIF
      #IF(%AllowNoError)
         #IF(%DOSDialogSetings)
            #SET(%DOSDialogSetings,CLIP(%DOSDialogSetings)&'+FILE:NoError')
         #ELSE
            #SET(%DOSDialogSetings,'FILE:NoError')
         #ENDIF
      #ENDIF
      #IF(%DOSDialogSetings)
SELF.FileMask = %DOSDialogSetings
      #ENDIF
      #IF(%DOSMask AND %DOSMaskDesc)
          #SET(%DOSDialogSetings,%DOSMaskDesc&'|'&%DOSMask)
      #ENDIF
      #FOR(%DOSMoreMasks)
          #IF(%DOSDialogSetings)
              #SET(%DOSDialogSetings,CLIP(%DOSDialogSetings)&'|'&%DOSMoreMaskDesc&'|'&%DOSMoreMask)
          #ELSE
              #SET(%DOSDialogSetings,%DOSMoreMaskDesc&'|'&%DOSMoreMask)
          #ENDIF
      #ENDFOR
      #IF(%DOSDialogSetings)
SELF.FilePattern = '%'DOSDialogSetings'
      #ENDIF
    #ENDIF
#ENDCASE
#IF(%EditInPlaceFEQRequired)
SELF.REQ = True
#ENDIF
#IF(%EditInPlaceFEQReadOnly)
SELF.SetReadOnly(True)
#ENDIF
#IF(%EditInPlaceTypeExt='Calendar')
SELF.SetCalendar(EIP_%ControlField_Calendar)
#ENDIF
#!
#GROUP(%EIPConfigureControlMultiSelect),AUTO
#IF(%EditInPlaceTypeExt='MultiSelect')
    #IF(%EditInPlaceFEQDataSource='Fixed')
        #FOR(%EditInPlaceFEQFixedDataSource),WHERE(%EditInPlaceFEQFixedDataSourceValue)
SELF.AddValue('%'EditInPlaceFEQFixedDataSourceValue', %EditInPlaceFEQFixedDataSourceSelected)
        #ENDFOR
    #ELSE
LOOP lMultiSelectIndex=1 TO RECORDS(%EditInPlaceFEQQueueDataSourceQN)
    GET(%EditInPlaceFEQQueueDataSourceQN,lMultiSelectIndex)
    IF NOT ERRORCODE() THEN
       SELF.AddValue(%EditInPlaceFEQQueueDataSourceQN.%EditInPlaceFEQQueueDataSourceV, %EditInPlaceFEQQueueDataSourceQN.%EditInPlaceFEQQueueDataSourceS)
    END
END
    #ENDIF
    #IF(%EditInPlaceFEQAutoSerializeField)
SELF.Delimiter = %(%StripPling(%EditInPlaceFEQAutoSerializeFieldDelimiter))
    #ENDIF
#ENDIF
#GROUP(%EIPConfigureControlData)
#IF(%EditInPlaceTypeExt='MultiSelect' AND %EditInPlaceFEQDataSource<>'Fixed')
lMultiSelectIndex   LONG(0)
#ENDIF
#!------------------------------------------------------------------------------
#GROUP(%MoreAssignEIP),PRESERVE
#FOR(%LookupAssign)
#!FIND(%QueueFieldAssignment,%MoreTarget)
#!IF(%QueueFieldAssignment)
#!%QueueField = %MoreField
#IF(INLIST(%MoreTarget,%QueueField))
%ManagerName.Q.%MoreTarget = %MoreField
#ELSE
%MoreTarget = %MoreField
#ENDIF
#ENDFOR
#!
#!-----------------------------------------------------------------------
